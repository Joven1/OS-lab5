 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20832
    4                      ; Text size: 5500
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  0a0a3d3d	.ascii "\n\n======FDISK START======\n\n\000"
   94  00003010  3d3d3d3d	
   94  00003014  46444953	
   94  00003018  4b205354	
   94  0000301c  4152543d	
   94  00003020  3d3d3d3d	
   94  00003024  3d0a0a00	
   95  00003028          	.align 2
   96  00003028          	LC1_LF0:
   97  00003028  4552524f	.ascii "ERROR: No Input\n\n\000"
   97  0000302c  523a204e	
   97  00003030  6f20496e	
   97  00003034  7075740a	
   97  00003038  0a00    	
   98  0000303a          	.align 2
   99  0000303c          	LC2_LF0:
  100  0000303c  4572726f	.ascii "Error: DFS Inode is not 96 bytes!\n\000"
  100  00003040  723a2044	
  100  00003044  46532049	
  100  00003048  6e6f6465	
  100  0000304c  20697320	
  100  00003050  6e6f7420	
  100  00003054  39362062	
  100  00003058  79746573	
  100  0000305c  210a00  	
  101  0000305f          	.align 2
  102  00003060          	LC3_LF0:
  103  00003060  53756363	.ascii "Success: DFS Inode is 96 bytes!\n\000"
  103  00003064  6573733a	
  103  00003068  20444653	
  103  0000306c  20496e6f	
  103  00003070  64652069	
  103  00003074  73203936	
  103  00003078  20627974	
  103  0000307c  6573210a	
  103  00003080  00      	
  104  00003081          	.align 2
  105  00003084          	LC4_LF0:
  106  00003084  54686520	.ascii "The size of the dfs_inode is %d\n\000"
  106  00003088  73697a65	
  106  0000308c  206f6620	
  106  00003090  74686520	
  106  00003094  6466735f	
  106  00003098  696e6f64	
  106  0000309c  65206973	
  106  000030a0  2025640a	
  106  000030a4  00      	
  107  000030a5          	.align 2
  108  000030a8          	LC5_LF0:
  109  000030a8  4572726f	.ascii "Error: Disk does not exist!\n\000"
  109  000030ac  723a2044	
  109  000030b0  69736b20	
  109  000030b4  646f6573	
  109  000030b8  206e6f74	
  109  000030bc  20657869	
  109  000030c0  7374210a	
  109  000030c4  00      	
  110  000030c5          	.align 2
  111  000030c8          	LC6_LF0:
  112  000030c8  52756e6e	.ascii "Running writing into the super block\n\000"
  112  000030cc  696e6720	
  112  000030d0  77726974	
  112  000030d4  696e6720	
  112  000030d8  696e746f	
  112  000030dc  20746865	
  112  000030e0  20737570	
  112  000030e4  65722062	
  112  000030e8  6c6f636b	
  112  000030ec  0a00    	
  113  000030ee          	.align 2
  114  000030f0          	LC7_LF0:
  115  000030f0  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  115  000030f4  6b202825	
  115  000030f8  64293a20	
  115  000030fc  466f726d	
  115  00003100  61747465	
  115  00003104  64204446	
  115  00003108  53206469	
  115  0000310c  736b2066	
  115  00003110  6f722025	
  115  00003114  64206279	
  115  00003118  7465732e	
  115  0000311c  0a00    	
  116  0000311e          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  126  000010e4  8fc20000	lw	r2,(r30)
  127  000010e8  0c001488	jal	___main
  128  000010ec  54000000	nop; not filled.
  129  000010f0  23bdfff8	addi	r29,r29,#-8
  130  000010f4  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  131  000010f8  254a300c	addui	r10,r10,(LC0_LF0)&0xffff
  132  000010fc  afaa0000	sw	(r29),r10
  133  00001100  0c000530	jal	_Printf
  134  00001104  54000000	nop; not filled.
  135  00001108  23bd0008	addi	r29,r29,#8
  136  0000110c  64410001	snei	r1,r2,#1
  137  00001110  10200028	beqz	r1,L14_LF0
  138  00001114  54000000	nop; not filled.
  139  00001118  23bdfff8	addi	r29,r29,#-8
  140  0000111c  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  141  00001120  254a3028	addui	r10,r10,(LC1_LF0)&0xffff
  142  00001124  afaa0000	sw	(r29),r10
  143  00001128  0c000508	jal	_Printf
  144  0000112c  54000000	nop; not filled.
  145  00001130  0c000698	jal	_Exit
  146  00001134  54000000	nop; not filled.
  147  00001138  23bd0008	addi	r29,r29,#8
  148  0000113c          	L14_LF0:
  149  0000113c  0c00062c	jal	_dfs_invalidate
  150  00001140  54000000	nop; not filled.
  151  00001144  23bdfff8	addi	r29,r29,#-8
  152  00001148  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  153  0000114c  254a3060	addui	r10,r10,(LC3_LF0)&0xffff
  154  00001150  afaa0000	sw	(r29),r10
  155  00001154  0c0004dc	jal	_Printf
  156  00001158  54000000	nop; not filled.
  157  0000115c  23bd0008	addi	r29,r29,#8
  158  00001160  23bdfff8	addi	r29,r29,#-8
  159  00001164  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  160  00001168  254a3084	addui	r10,r10,(LC4_LF0)&0xffff
  161  0000116c  afaa0000	sw	(r29),r10
  162  00001170  200a0060	addi	r10,r0,#96
  163  00001174  afaa0004	sw	4(r29),r10
  164  00001178  0c0004b8	jal	_Printf
  165  0000117c  54000000	nop; not filled.
  166  00001180  0c0005c4	jal	_disk_size
  167  00001184  54000000	nop; not filled.
  168  00001188  3c020000	lhi	r2,((_disksize)>>16)&0xffff
  169  0000118c  24423004	addui	r2,r2,(_disksize)&0xffff
  170  00001190  ac410000	sw	(r2),r1
  171  00001194  0c0005bc	jal	_disk_blocksize
  172  00001198  54000000	nop; not filled.
  173  0000119c  00011020	add	r2,r0,r1
  174  000011a0  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  175  000011a4  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  176  000011a8  ac220000	sw	(r1),r2
  177  000011ac  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  178  000011b0  24213008	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  179  000011b4  200a4000	addi	r10,r0,#16384
  180  000011b8  ac2a0000	sw	(r1),r10
  181  000011bc  3c030000	lhi	r3,((_sb)>>16)&0xffff
  182  000011c0  24633144	addui	r3,r3,(_sb)&0xffff
  183  000011c4  200a0400	addi	r10,r0,#1024
  184  000011c8  ac6a0004	sw	4(r3),r10
  185  000011cc  200a4000	addi	r10,r0,#16384
  186  000011d0  ac6a0008	sw	8(r3),r10
  187  000011d4  200a0001	addi	r10,r0,#1
  188  000011d8  ac6a000c	sw	12(r3),r10
  189  000011dc  200a00c0	addi	r10,r0,#192
  190  000011e0  ac6a0010	sw	16(r3),r10
  191  000011e4  200a0013	addi	r10,r0,#19
  192  000011e8  ac6a0014	sw	20(r3),r10
  193  000011ec  200a0015	addi	r10,r0,#21
  194  000011f0  ac6a0018	sw	24(r3),r10
  195  000011f4  8c610004	lw	r1,4(r3)
  196  000011f8  00200035	movi2fp	f0,r1
  197  000011fc  00400835	movi2fp	f1,r2
  198  00001200  04010017	divu	f0,f0,f1
  199  00001204  00004834	movfp2i	r9,f0
  200  00001208  0c000554	jal	_disk_create
  201  0000120c  54000000	nop; not filled.
  202  00001210  23bd0008	addi	r29,r29,#8
  203  00001214  6021ffff	seqi	r1,r1,#-1
  204  00001218  10200028	beqz	r1,L17_LF0
  205  0000121c  54000000	nop; not filled.
  206  00001220  23bdfff8	addi	r29,r29,#-8
  207  00001224  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  208  00001228  254a30a8	addui	r10,r10,(LC5_LF0)&0xffff
  209  0000122c  afaa0000	sw	(r29),r10
  210  00001230  0c000400	jal	_Printf
  211  00001234  54000000	nop; not filled.
  212  00001238  0c000590	jal	_Exit
  213  0000123c  54000000	nop; not filled.
  214  00001240  23bd0008	addi	r29,r29,#8
  215  00001244          	L17_LF0:
  216  00001244  20040000	addi	r4,r0,#0
  217  00001248  20620010	addi	r2,r3,#16
  218  0000124c  8c410000	lw	r1,(r2)
  219  00001250  0081082a	sltu	r1,r4,r1
  220  00001254  10200068	beqz	r1,L53_LF0
  221  00001258  54000000	nop; not filled.
  222  0000125c  00022820	add	r5,r0,r2
  223  00001260  3c1f0000	lhi	r31,((_inodes)>>16)&0xffff
  224  00001264  27ff3160	addui	r31,r31,(_inodes)&0xffff
  225  00001268          	L21_LF0:
  226  00001268  200a0000	addi	r10,r0,#0
  227  0000126c  afea0000	sw	(r31),r10
  228  00001270  afea0004	sw	4(r31),r10
  229  00001274  200a0000	addi	r10,r0,(#0x0)&0xff
  230  00001278  a3ea0008	sb	8(r31),r10
  231  0000127c  20030000	addi	r3,r0,#0
  232  00001280  001f1020	add	r2,r0,r31
  233  00001284          	L25_LF0:
  234  00001284  200a0000	addi	r10,r0,#0
  235  00001288  ac4a0034	sw	52(r2),r10
  236  0000128c  20420004	addi	r2,r2,#4
  237  00001290  20630001	addi	r3,r3,#1
  238  00001294  70610009	slei	r1,r3,#9
  239  00001298  1420ffe8	bnez	r1,L25_LF0
  240  0000129c  54000000	nop; not filled.
  241  000012a0  afea005c	sw	92(r31),r10
  242  000012a4  23ff0060	addi	r31,r31,#96
  243  000012a8  20840001	addi	r4,r4,#1
  244  000012ac  8ca10000	lw	r1,(r5)
  245  000012b0  0081082a	sltu	r1,r4,r1
  246  000012b4  1420ffb0	bnez	r1,L21_LF0
  247  000012b8  54000000	nop; not filled.
  248  000012bc  20040000	addi	r4,r0,#0
  249  000012c0          	L53_LF0:
  250  000012c0  3c030000	lhi	r3,((_sb+8)>>16)&0xffff
  251  000012c4  2463314c	addui	r3,r3,(_sb+8)&0xffff
  252  000012c8  8c610000	lw	r1,(r3)
  253  000012cc  58210005	srli	r1,r1,#0x5
  254  000012d0  0081082a	sltu	r1,r4,r1
  255  000012d4  10200030	beqz	r1,L29_LF0
  256  000012d8  54000000	nop; not filled.
  257  000012dc  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  258  000012e0  24427960	addui	r2,r2,(_fbv)&0xffff
  259  000012e4          	L31_LF0:
  260  000012e4  200a0000	addi	r10,r0,#0
  261  000012e8  ac4a0000	sw	(r2),r10
  262  000012ec  20420004	addi	r2,r2,#4
  263  000012f0  20840001	addi	r4,r4,#1
  264  000012f4  8c610000	lw	r1,(r3)
  265  000012f8  58210005	srli	r1,r1,#0x5
  266  000012fc  0081082a	sltu	r1,r4,r1
  267  00001300  1420ffe0	bnez	r1,L31_LF0
  268  00001304  54000000	nop; not filled.
  269  00001308          	L29_LF0:
  270  00001308  3c010000	lhi	r1,((_fbv)>>16)&0xffff
  271  0000130c  24217960	addui	r1,r1,(_fbv)&0xffff
  272  00001310  200af800	addi	r10,r0,#-2048
  273  00001314  ac2a0000	sw	(r1),r10
  274  00001318  00012820	add	r5,r0,r1
  275  0000131c  3c010000	lhi	r1,((_sb+20)>>16)&0xffff
  276  00001320  24213158	addui	r1,r1,(_sb+20)&0xffff
  277  00001324  8c240000	lw	r4,(r1)
  278  00001328  8c210004	lw	r1,4(r1)
  279  0000132c  0081082a	sltu	r1,r4,r1
  280  00001330  10200094	beqz	r1,L34_LF0
  281  00001334  54000000	nop; not filled.
  282  00001338  23c7fbf8	addi	r7,r30,#-1032
  283  0000133c  3c080000	lhi	r8,((_diskblocksize)>>16)&0xffff
  284  00001340  25083000	addui	r8,r8,(_diskblocksize)&0xffff
  285  00001344  50860001	slli	r6,r4,#0x1
  286  00001348          	L36_LF0:
  287  00001348  20030000	addi	r3,r0,#0
  288  0000134c  0069082a	sltu	r1,r3,r9
  289  00001350  10200054	beqz	r1,L35_LF0
  290  00001354  54000000	nop; not filled.
  291  00001358  00061020	add	r2,r0,r6
  292  0000135c          	L40_LF0:
  293  0000135c  23bdfff0	addi	r29,r29,#-16
  294  00001360  afa50000	sw	(r29),r5
  295  00001364  afa70004	sw	4(r29),r7
  296  00001368  8d0a0000	lw	r10,(r8)
  297  0000136c  afaa0008	sw	8(r29),r10
  298  00001370  0c001060	jal	_bcopy
  299  00001374  54000000	nop; not filled.
  300  00001378  afa20000	sw	(r29),r2
  301  0000137c  afa70004	sw	4(r29),r7
  302  00001380  0c0001e8	jal	_FdiskWriteBlock
  303  00001384  54000000	nop; not filled.
  304  00001388  8d010000	lw	r1,(r8)
  305  0000138c  00a12820	add	r5,r5,r1
  306  00001390  23bd0010	addi	r29,r29,#16
  307  00001394  20420001	addi	r2,r2,#1
  308  00001398  20630001	addi	r3,r3,#1
  309  0000139c  0069082a	sltu	r1,r3,r9
  310  000013a0  1420ffb8	bnez	r1,L40_LF0
  311  000013a4  54000000	nop; not filled.
  312  000013a8          	L35_LF0:
  313  000013a8  20c60002	addi	r6,r6,#2
  314  000013ac  20840001	addi	r4,r4,#1
  315  000013b0  3c010000	lhi	r1,((_sb+24)>>16)&0xffff
  316  000013b4  2421315c	addui	r1,r1,(_sb+24)&0xffff
  317  000013b8  8c210000	lw	r1,(r1)
  318  000013bc  0081082a	sltu	r1,r4,r1
  319  000013c0  1420ff84	bnez	r1,L36_LF0
  320  000013c4  54000000	nop; not filled.
  321  000013c8          	L34_LF0:
  322  000013c8  3c080000	lhi	r8,((_sb)>>16)&0xffff
  323  000013cc  25083144	addui	r8,r8,(_sb)&0xffff
  324  000013d0  200a0001	addi	r10,r0,#1
  325  000013d4  ad0a0000	sw	(r8),r10
  326  000013d8  23bdfff8	addi	r29,r29,#-8
  327  000013dc  23c3fbf8	addi	r3,r30,#-1032
  328  000013e0  afa30000	sw	(r29),r3
  329  000013e4  200a0400	addi	r10,r0,#1024
  330  000013e8  afaa0004	sw	4(r29),r10
  331  000013ec  0c001064	jal	_bzero
  332  000013f0  54000000	nop; not filled.
  333  000013f4  23bdfff8	addi	r29,r29,#-8
  334  000013f8  afa80000	sw	(r29),r8
  335  000013fc  afa30004	sw	4(r29),r3
  336  00001400  200a001c	addi	r10,r0,#28
  337  00001404  afaa0008	sw	8(r29),r10
  338  00001408  0c000fc8	jal	_bcopy
  339  0000140c  54000000	nop; not filled.
  340  00001410  3c0a0000	lhi	r10,((LC6_LF0)>>16)&0xffff
  341  00001414  254a30c8	addui	r10,r10,(LC6_LF0)&0xffff
  342  00001418  afaa0000	sw	(r29),r10
  343  0000141c  0c000214	jal	_Printf
  344  00001420  54000000	nop; not filled.
  345  00001424  200a0001	addi	r10,r0,#1
  346  00001428  afaa0000	sw	(r29),r10
  347  0000142c  afa30004	sw	4(r29),r3
  348  00001430  0c000138	jal	_FdiskWriteBlock
  349  00001434  54000000	nop; not filled.
  350  00001438  3c050000	lhi	r5,((_inodes)>>16)&0xffff
  351  0000143c  24a53160	addui	r5,r5,(_inodes)&0xffff
  352  00001440  20040000	addi	r4,r0,#0
  353  00001444  23bd0010	addi	r29,r29,#16
  354  00001448  8d020010	lw	r2,16(r8)
  355  0000144c  50410001	slli	r1,r2,#0x1
  356  00001450  00220820	add	r1,r1,r2
  357  00001454  50220005	slli	r2,r1,#0x5
  358  00001458  8d010004	lw	r1,4(r8)
  359  0000145c  00400035	movi2fp	f0,r2
  360  00001460  00200835	movi2fp	f1,r1
  361  00001464  04010017	divu	f0,f0,f1
  362  00001468  00000834	movfp2i	r1,f0
  363  0000146c  0081082a	sltu	r1,r4,r1
  364  00001470  102000b8	beqz	r1,L44_LF0
  365  00001474  54000000	nop; not filled.
  366  00001478  00033020	add	r6,r0,r3
  367  0000147c  3c070000	lhi	r7,((_diskblocksize)>>16)&0xffff
  368  00001480  24e73000	addui	r7,r7,(_diskblocksize)&0xffff
  369  00001484  2108000c	addi	r8,r8,#12
  370  00001488          	L46_LF0:
  371  00001488  20030000	addi	r3,r0,#0
  372  0000148c  0069082a	sltu	r1,r3,r9
  373  00001490  1020005c	beqz	r1,L45_LF0
  374  00001494  54000000	nop; not filled.
  375  00001498          	L50_LF0:
  376  00001498  23bdfff0	addi	r29,r29,#-16
  377  0000149c  afa50000	sw	(r29),r5
  378  000014a0  afa60004	sw	4(r29),r6
  379  000014a4  8cea0000	lw	r10,(r7)
  380  000014a8  afaa0008	sw	8(r29),r10
  381  000014ac  0c000f24	jal	_bcopy
  382  000014b0  54000000	nop; not filled.
  383  000014b4  8d010000	lw	r1,(r8)
  384  000014b8  00240820	add	r1,r1,r4
  385  000014bc  50210001	slli	r1,r1,#0x1
  386  000014c0  00230820	add	r1,r1,r3
  387  000014c4  afa10000	sw	(r29),r1
  388  000014c8  afa60004	sw	4(r29),r6
  389  000014cc  0c00009c	jal	_FdiskWriteBlock
  390  000014d0  54000000	nop; not filled.
  391  000014d4  8ce10000	lw	r1,(r7)
  392  000014d8  00a12820	add	r5,r5,r1
  393  000014dc  23bd0010	addi	r29,r29,#16
  394  000014e0  20630001	addi	r3,r3,#1
  395  000014e4  0069082a	sltu	r1,r3,r9
  396  000014e8  1420ffac	bnez	r1,L50_LF0
  397  000014ec  54000000	nop; not filled.
  398  000014f0          	L45_LF0:
  399  000014f0  20840001	addi	r4,r4,#1
  400  000014f4  3c030000	lhi	r3,((_sb+16)>>16)&0xffff
  401  000014f8  24633154	addui	r3,r3,(_sb+16)&0xffff
  402  000014fc  8c620000	lw	r2,(r3)
  403  00001500  50410001	slli	r1,r2,#0x1
  404  00001504  00220820	add	r1,r1,r2
  405  00001508  50220005	slli	r2,r1,#0x5
  406  0000150c  8c61fff4	lw	r1,-12(r3)
  407  00001510  00400035	movi2fp	f0,r2
  408  00001514  00200835	movi2fp	f1,r1
  409  00001518  04010017	divu	f0,f0,f1
  410  0000151c  00000834	movfp2i	r1,f0
  411  00001520  0081082a	sltu	r1,r4,r1
  412  00001524  1420ff60	bnez	r1,L46_LF0
  413  00001528  54000000	nop; not filled.
  414  0000152c          	L44_LF0:
  415  0000152c  0c000110	jal	_getpid
  416  00001530  54000000	nop; not filled.
  417  00001534  23bdfff0	addi	r29,r29,#-16
  418  00001538  3c0a0000	lhi	r10,((LC7_LF0)>>16)&0xffff
  419  0000153c  254a30f0	addui	r10,r10,(LC7_LF0)&0xffff
  420  00001540  afaa0000	sw	(r29),r10
  421  00001544  afa10004	sw	4(r29),r1
  422  00001548  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  423  0000154c  24213004	addui	r1,r1,(_disksize)&0xffff
  424  00001550  8c210000	lw	r1,(r1)
  425  00001554  afa10008	sw	8(r29),r1
  426  00001558  0c0000d8	jal	_Printf
  427  0000155c  54000000	nop; not filled.
  428  00001560  23bd0010	addi	r29,r29,#16
  429  00001564  0c001000	jal	_exit
  430  00001568  54000000	nop
  431  0000156c          	.endproc _main
  432  0000156c          	.data
  433  0000311e          	.align 2
  434  00003120          	LC8_LF0:
  435  00003120  4661696c	.ascii "Failed to write block onto disk\n\000"
  435  00003124  65642074	
  435  00003128  6f207772	
  435  0000312c  69746520	
  435  00003130  626c6f63	
  435  00003134  6b206f6e	
  435  00003138  746f2064	
  435  0000313c  69736b0a	
  435  00003140  00      	
  436  00003141          	.text
  437  0000156c          	.align 2
  438  0000156c          	.proc _FdiskWriteBlock
  439  0000156c          	.global _FdiskWriteBlock
  440  0000156c          	_FdiskWriteBlock:
  441                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 1 regs to save.
  442  0000156c  afbefffc	sw	-4(r29),r30; push fp
  443  00001570  001df020	add	r30,r0,r29; fp = sp
  444  00001574  afbffff8	sw	-8(r29),r31; push ret addr
  445  00001578  2fbd0010	subui	r29,r29,#16; alloc local storage
  446  0000157c  afa20000	sw	0(r29),r2
  447  00001580  8fc10004	lw	r1,4(r30)
  448  00001584  23bdfff8	addi	r29,r29,#-8
  449  00001588  8fc20000	lw	r2,(r30)
  450  0000158c  afa20000	sw	(r29),r2
  451  00001590  afa10004	sw	4(r29),r1
  452  00001594  0c0001a4	jal	_disk_write_block
  453  00001598  54000000	nop; not filled.
  454  0000159c  23bd0008	addi	r29,r29,#8
  455  000015a0  6021ffff	seqi	r1,r1,#-1
  456  000015a4  10200028	beqz	r1,L57_LF0
  457  000015a8  54000000	nop; not filled.
  458  000015ac  23bdfff8	addi	r29,r29,#-8
  459  000015b0  3c020000	lhi	r2,((LC8_LF0)>>16)&0xffff
  460  000015b4  24423120	addui	r2,r2,(LC8_LF0)&0xffff
  461  000015b8  afa20000	sw	(r29),r2
  462  000015bc  0c000074	jal	_Printf
  463  000015c0  54000000	nop; not filled.
  464  000015c4  0c000204	jal	_Exit
  465  000015c8  54000000	nop; not filled.
  466  000015cc  23bd0008	addi	r29,r29,#8
  467  000015d0          	L57_LF0:
  468  000015d0  20010001	addi	r1,r0,#1
  469  000015d4  8fa20000	lw	r2,0(r29)
  470  000015d8  8fdffff8	lw	r31,-8(r30)
  471  000015dc  001ee820	add	r29,r0,r30
  472  000015e0  8fdefffc	lw	r30,-4(r30)
  473  000015e4  4be00000	jr	r31
  474  000015e8  54000000	nop
  475  000015ec          	.endproc _FdiskWriteBlock
  476  000015ec          	.data
  477  00003141          	.align 2
  478  00003144          	.global _sb
  479  00003144          	_sb:
  480  00003144          	.space 28
  481  00003160          	.align 2
  482  00003160          	.global _inodes
  483  00003160          	_inodes:
  484  00003160          	.space 18432
  485  00007960          	.align 2
  486  00007960          	.global _fbv
  487  00007960          	_fbv:
  488  00007960          	.space 2048
  489                      ;;;
  490                      ;;; Stub functions for DLX traps.
  491                      ;;;
  492                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  493                      ;;;
  494                      ;;; The traps such as Open and Close
  495                      ;;; (note the capital letters) are for use by user programs.  The traps
  496                      ;;; with names such as open and close (lower case) are for use by the OS.
  497                      ;;;
  499  00008160          	.text
  500  000015ec          	.align 2
  502                      ;;; The following are the traps to be used by user-level programs
  503                      ;;;
  505  000015ec          	.align 2
  506  000015ec          	.proc _Open
  507  000015ec          	.global _Open
  508  000015ec          	_Open:
  509                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  510                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  511                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  512  000015ec  44000213	trap	#0x213
  513  000015f0  4be00000	jr	r31
  514  000015f4  54000000	nop
  515  000015f8          	.endproc _Open
  517  000015f8          	.proc _Close
  518  000015f8          	.global _Close
  519  000015f8          	_Close:
  520  000015f8  44000214	trap	#0x214
  521  000015fc  4be00000	jr	r31
  522  00001600  54000000	nop
  523  00001604          	.endproc _Close
  525  00001604          	.proc _Read
  526  00001604          	.global _Read
  527  00001604          	_Read:
  528  00001604  44000210	trap	#0x210
  529  00001608  4be00000	jr	r31
  530  0000160c  54000000	nop
  531  00001610          	.endproc _Read
  533  00001610          	.proc _Write
  534  00001610          	.global _Write
  535  00001610          	_Write:
  536  00001610  44000211	trap	#0x211
  537  00001614  4be00000	jr	r31
  538  00001618  54000000	nop
  539  0000161c          	.endproc _Write
  541  0000161c          	.proc _Lseek
  542  0000161c          	.global _Lseek
  543  0000161c          	_Lseek:
  544  0000161c  44000212	trap	#0x212
  545  00001620  4be00000	jr	r31
  546  00001624  54000000	nop
  547  00001628          	.endproc _Lseek
  549  00001628          	.proc _Putchar
  550  00001628          	.global _Putchar
  551  00001628          	_Putchar:
  552  00001628  44000280	trap	#0x280
  553  0000162c  4be00000	jr	r31
  554  00001630  54000000	nop
  555  00001634          	.endproc _Putchar
  557  00001634          	.proc _Printf
  558  00001634          	.global _Printf
  559  00001634          	_Printf:
  560  00001634  44000201	trap	#0x201
  561  00001638  4be00000	jr	r31
  562  0000163c  54000000	nop
  563  00001640          	.endproc _Printf
  565  00001640          	.proc _getpid
  566  00001640          	.global _getpid
  567  00001640          	_getpid:
  568  00001640  44000431	trap	#0x431
  569  00001644  4be00000	jr	r31
  570  00001648  54000000	nop
  571  0000164c          	.endproc _getpid
  573  0000164c          	.proc _process_create
  574  0000164c          	.global _process_create
  575  0000164c          	_process_create:
  576  0000164c  44000432	trap	#0x432
  577  00001650  4be00000	jr	r31
  578  00001654  54000000	nop
  579  00001658          	.endproc _process_create
  581  00001658          	.proc _shmget
  582  00001658          	.global _shmget
  583  00001658          	_shmget:
  584  00001658  44000440	trap	#0x440
  585  0000165c  4be00000	jr	r31
  586  00001660  54000000	nop
  587  00001664          	.endproc _shmget
  589  00001664          	.proc _shmat
  590  00001664          	.global _shmat
  591  00001664          	_shmat:
  592  00001664  44000441	trap	#0x441
  593  00001668  4be00000	jr	r31
  594  0000166c  54000000	nop
  595  00001670          	.endproc _shmat
  597  00001670          	.proc _sem_create
  598  00001670          	.global _sem_create
  599  00001670          	_sem_create:
  600  00001670  44000450	trap	#0x450
  601  00001674  4be00000	jr	r31
  602  00001678  54000000	nop
  603  0000167c          	.endproc _sem_create
  605  0000167c          	.proc _sem_wait
  606  0000167c          	.global _sem_wait
  607  0000167c          	_sem_wait:
  608  0000167c  44000451	trap	#0x451
  609  00001680  4be00000	jr	r31
  610  00001684  54000000	nop
  611  00001688          	.endproc _sem_wait
  613  00001688          	.proc _sem_signal
  614  00001688          	.global _sem_signal
  615  00001688          	_sem_signal:
  616  00001688  44000452	trap	#0x452
  617  0000168c  4be00000	jr	r31
  618  00001690  54000000	nop
  619  00001694          	.endproc _sem_signal
  621  00001694          	.proc _lock_create
  622  00001694          	.global _lock_create
  623  00001694          	_lock_create:
  624  00001694  44000453	trap	#0x453
  625  00001698  4be00000	jr	r31
  626  0000169c  54000000	nop
  627  000016a0          	.endproc _lock_create
  629  000016a0          	.proc _lock_acquire
  630  000016a0          	.global _lock_acquire
  631  000016a0          	_lock_acquire:
  632  000016a0  44000454	trap	#0x454
  633  000016a4  4be00000	jr	r31
  634  000016a8  54000000	nop
  635  000016ac          	.endproc _lock_acquire
  637  000016ac          	.proc _lock_release
  638  000016ac          	.global _lock_release
  639  000016ac          	_lock_release:
  640  000016ac  44000455	trap	#0x455
  641  000016b0  4be00000	jr	r31
  642  000016b4  54000000	nop
  643  000016b8          	.endproc _lock_release
  645  000016b8          	.proc _cond_create
  646  000016b8          	.global _cond_create
  647  000016b8          	_cond_create:
  648  000016b8  44000456	trap	#0x456
  649  000016bc  4be00000	jr	r31
  650  000016c0  54000000	nop
  651  000016c4          	.endproc _cond_create
  653  000016c4          	.proc _cond_wait
  654  000016c4          	.global _cond_wait
  655  000016c4          	_cond_wait:
  656  000016c4  44000457	trap	#0x457
  657  000016c8  4be00000	jr	r31
  658  000016cc  54000000	nop
  659  000016d0          	.endproc _cond_wait
  661  000016d0          	.proc _cond_signal
  662  000016d0          	.global _cond_signal
  663  000016d0          	_cond_signal:
  664  000016d0  44000458	trap	#0x458
  665  000016d4  4be00000	jr	r31
  666  000016d8  54000000	nop
  667  000016dc          	.endproc _cond_signal
  669  000016dc          	.proc _cond_broadcast
  670  000016dc          	.global _cond_broadcast
  671  000016dc          	_cond_broadcast:
  672  000016dc  44000459	trap	#0x459
  673  000016e0  4be00000	jr	r31
  674  000016e4  54000000	nop
  675  000016e8          	.endproc _cond_broadcast
  677  000016e8          	.proc _mbox_create
  678  000016e8          	.global _mbox_create
  679  000016e8          	_mbox_create:
  680  000016e8  44000460	trap	#0x460
  681  000016ec  4be00000	jr	r31
  682  000016f0  54000000	nop
  683  000016f4          	.endproc _mbox_create
  685  000016f4          	.proc _mbox_open
  686  000016f4          	.global _mbox_open
  687  000016f4          	_mbox_open:
  688  000016f4  44000461	trap	#0x461
  689  000016f8  4be00000	jr	r31
  690  000016fc  54000000	nop
  691  00001700          	.endproc _mbox_open
  693  00001700          	.proc _mbox_close
  694  00001700          	.global _mbox_close
  695  00001700          	_mbox_close:
  696  00001700  44000462	trap	#0x462
  697  00001704  4be00000	jr	r31
  698  00001708  54000000	nop
  699  0000170c          	.endproc _mbox_close
  701  0000170c          	.proc _mbox_send
  702  0000170c          	.global _mbox_send
  703  0000170c          	_mbox_send:
  704  0000170c  44000463	trap	#0x463
  705  00001710  4be00000	jr	r31
  706  00001714  54000000	nop
  707  00001718          	.endproc _mbox_send
  709  00001718          	.proc _mbox_recv
  710  00001718          	.global _mbox_recv
  711  00001718          	_mbox_recv:
  712  00001718  44000464	trap	#0x464
  713  0000171c  4be00000	jr	r31
  714  00001720  54000000	nop
  715  00001724          	.endproc _mbox_recv
  717  00001724          	.proc _sleep
  718  00001724          	.global _sleep
  719  00001724          	_sleep:
  720  00001724  44000465	trap	#0x465
  721  00001728  4be00000	jr	r31
  722  0000172c  54000000	nop
  723  00001730          	.endproc _sleep
  725  00001730          	.proc _yield
  726  00001730          	.global _yield
  727  00001730          	_yield:
  728  00001730  44000466	trap	#0x466
  729  00001734  4be00000	jr	r31
  730  00001738  54000000	nop
  731  0000173c          	.endproc _yield
  733  0000173c          	.proc _disk_write_block
  734  0000173c          	.global _disk_write_block
  735  0000173c          	_disk_write_block:
  736  0000173c  44000467	trap	#0x467
  737  00001740  4be00000	jr	r31
  738  00001744  54000000	nop
  739  00001748          	.endproc _disk_write_block
  741  00001748          	.proc _disk_size
  742  00001748          	.global _disk_size
  743  00001748          	_disk_size:
  744  00001748  44000468	trap	#0x468
  745  0000174c  4be00000	jr	r31
  746  00001750  54000000	nop
  747  00001754          	.endproc _disk_size
  749  00001754          	.proc _disk_blocksize
  750  00001754          	.global _disk_blocksize
  751  00001754          	_disk_blocksize:
  752  00001754  44000469	trap	#0x469
  753  00001758  4be00000	jr	r31
  754  0000175c  54000000	nop
  755  00001760          	.endproc _disk_blocksize
  757  00001760          	.proc _disk_create
  758  00001760          	.global _disk_create
  759  00001760          	_disk_create:
  760  00001760  44000470	trap	#0x470
  761  00001764  4be00000	jr	r31
  762  00001768  54000000	nop
  763  0000176c          	.endproc _disk_create
  765  0000176c          	.proc _dfs_invalidate
  766  0000176c          	.global _dfs_invalidate
  767  0000176c          	_dfs_invalidate:
  768  0000176c  44000471	trap	#0x471
  769  00001770  4be00000	jr	r31
  770  00001774  54000000	nop
  771  00001778          	.endproc _dfs_invalidate
  773  00001778          	.proc _file_open
  774  00001778          	.global _file_open
  775  00001778          	_file_open:
  776  00001778  44000472	trap	#0x472
  777  0000177c  4be00000	jr	r31
  778  00001780  54000000	nop
  779  00001784          	.endproc _file_open
  781  00001784          	.proc _file_close
  782  00001784          	.global _file_close
  783  00001784          	_file_close:
  784  00001784  44000473	trap	#0x473
  785  00001788  4be00000	jr	r31
  786  0000178c  54000000	nop
  787  00001790          	.endproc _file_close
  789  00001790          	.proc _file_delete
  790  00001790          	.global _file_delete
  791  00001790          	_file_delete:
  792  00001790  44000474	trap	#0x474
  793  00001794  4be00000	jr	r31
  794  00001798  54000000	nop
  795  0000179c          	.endproc _file_delete
  797  0000179c          	.proc _file_read
  798  0000179c          	.global _file_read
  799  0000179c          	_file_read:
  800  0000179c  44000475	trap	#0x475
  801  000017a0  4be00000	jr	r31
  802  000017a4  54000000	nop
  803  000017a8          	.endproc _file_read
  805  000017a8          	.proc _file_write
  806  000017a8          	.global _file_write
  807  000017a8          	_file_write:
  808  000017a8  44000476	trap	#0x476
  809  000017ac  4be00000	jr	r31
  810  000017b0  54000000	nop
  811  000017b4          	.endproc _file_write
  813  000017b4          	.proc _file_seek
  814  000017b4          	.global _file_seek
  815  000017b4          	_file_seek:
  816  000017b4  44000477	trap	#0x477
  817  000017b8  4be00000	jr	r31
  818  000017bc  54000000	nop
  819  000017c0          	.endproc _file_seek
  821  000017c0          	.proc _run_os_tests
  822  000017c0          	.global _run_os_tests
  823  000017c0          	_run_os_tests:
  824  000017c0  440004ff	trap	#0x4FF
  825  000017c4  4be00000	jr	r31
  826  000017c8  54000000	nop
  827  000017cc          	.endproc _run_os_tests
  830  000017cc          	.proc _Exit
  831  000017cc          	.global _Exit
  832  000017cc          	_Exit:
  833  000017cc  44000500	trap	#0x500
  834  000017d0  4be00000	jr	r31
  835  000017d4  54000000	nop
  836  000017d8          	.endproc _Exit
  837                      ; Compiled by GCC
  839  000017d8          	.align 2
  840  000017d8          	.proc _isspace
  841  000017d8          	.global _isspace
  842  000017d8          	_isspace:
  843                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  844  000017d8  afbefffc	sw	-4(r29),r30; push fp
  845  000017dc  001df020	add	r30,r0,r29; fp = sp
  846  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  847  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  848  000017e8  afa20000	sw	0(r29),r2
  849  000017ec  afa30004	sw	4(r29),r3
  850  000017f0  afa40008	sw	8(r29),r4
  851  000017f4  83c20003	lb	r2,3(r30)
  852  000017f8  20010000	addi	r1,r0,#0
  853  000017fc  304300ff	andi	r3,r2,#0x00ff
  854  00001800  60640020	seqi	r4,r3,#32
  855  00001804  1480002c	bnez	r4,L3_LF2
  856  00001808  54000000	nop; delay slot nop
  857  0000180c  304300ff	andi	r3,r2,#0x00ff
  858  00001810  60640009	seqi	r4,r3,#9
  859  00001814  1480001c	bnez	r4,L3_LF2
  860  00001818  54000000	nop; delay slot nop
  861  0000181c  304300ff	andi	r3,r2,#0x00ff
  862  00001820  6064000a	seqi	r4,r3,#10
  863  00001824  1480000c	bnez	r4,L3_LF2
  864  00001828  54000000	nop; delay slot nop
  865  0000182c  08000008	j	L2_LF2
  866  00001830  54000000	nop; delay slot nop
  867  00001834          	L3_LF2:
  868  00001834  20010001	addi	r1,r0,#1
  869  00001838          	L2_LF2:
  870  00001838  08000004	j	L1_LF2
  871  0000183c  54000000	nop; delay slot nop
  872  00001840          	L1_LF2:
  873  00001840  8fa20000	lw	r2,0(r29)
  874  00001844  8fa30004	lw	r3,4(r29)
  875  00001848  8fa40008	lw	r4,8(r29)
  876  0000184c  8fdffff8	lw	r31,-8(r30)
  877  00001850  001ee820	add	r29,r0,r30
  878  00001854  8fdefffc	lw	r30,-4(r30)
  879  00001858  4be00000	jr	r31
  880  0000185c  54000000	nop
  881  00001860          	.endproc _isspace
  882  00001860          	.align 2
  883  00001860          	.proc _isxdigit
  884  00001860          	.global _isxdigit
  885  00001860          	_isxdigit:
  886                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  887  00001860  afbefffc	sw	-4(r29),r30; push fp
  888  00001864  001df020	add	r30,r0,r29; fp = sp
  889  00001868  afbffff8	sw	-8(r29),r31; push ret addr
  890  0000186c  2fbd0018	subui	r29,r29,#24; alloc local storage
  891  00001870  afa20000	sw	0(r29),r2
  892  00001874  afa30004	sw	4(r29),r3
  893  00001878  afa40008	sw	8(r29),r4
  894  0000187c  83c20003	lb	r2,3(r30)
  895  00001880  20010000	addi	r1,r0,#0
  896  00001884  304300ff	andi	r3,r2,#0x00ff
  897  00001888  6c64002f	sgtui	r4,r3,#47
  898  0000188c  1080001c	beqz	r4,L7_LF2
  899  00001890  54000000	nop; delay slot nop
  900  00001894  304300ff	andi	r3,r2,#0x00ff
  901  00001898  70640039	sleui	r4,r3,#57
  902  0000189c  1480005c	bnez	r4,L6_LF2
  903  000018a0  54000000	nop; delay slot nop
  904  000018a4  08000004	j	L7_LF2
  905  000018a8  54000000	nop; delay slot nop
  906  000018ac          	L7_LF2:
  907  000018ac  304300ff	andi	r3,r2,#0x00ff
  908  000018b0  6c640060	sgtui	r4,r3,#96
  909  000018b4  1080001c	beqz	r4,L8_LF2
  910  000018b8  54000000	nop; delay slot nop
  911  000018bc  304300ff	andi	r3,r2,#0x00ff
  912  000018c0  70640066	sleui	r4,r3,#102
  913  000018c4  14800034	bnez	r4,L6_LF2
  914  000018c8  54000000	nop; delay slot nop
  915  000018cc  08000004	j	L8_LF2
  916  000018d0  54000000	nop; delay slot nop
  917  000018d4          	L8_LF2:
  918  000018d4  304300ff	andi	r3,r2,#0x00ff
  919  000018d8  6c640040	sgtui	r4,r3,#64
  920  000018dc  10800020	beqz	r4,L5_LF2
  921  000018e0  54000000	nop; delay slot nop
  922  000018e4  304300ff	andi	r3,r2,#0x00ff
  923  000018e8  70640041	sleui	r4,r3,#65
  924  000018ec  1480000c	bnez	r4,L6_LF2
  925  000018f0  54000000	nop; delay slot nop
  926  000018f4  08000008	j	L5_LF2
  927  000018f8  54000000	nop; delay slot nop
  928  000018fc          	L6_LF2:
  929  000018fc  20010001	addi	r1,r0,#1
  930  00001900          	L5_LF2:
  931  00001900  08000004	j	L4_LF2
  932  00001904  54000000	nop; delay slot nop
  933  00001908          	L4_LF2:
  934  00001908  8fa20000	lw	r2,0(r29)
  935  0000190c  8fa30004	lw	r3,4(r29)
  936  00001910  8fa40008	lw	r4,8(r29)
  937  00001914  8fdffff8	lw	r31,-8(r30)
  938  00001918  001ee820	add	r29,r0,r30
  939  0000191c  8fdefffc	lw	r30,-4(r30)
  940  00001920  4be00000	jr	r31
  941  00001924  54000000	nop
  942  00001928          	.endproc _isxdigit
  943  00001928          	.align 2
  944  00001928          	.proc _dstrcpy
  945  00001928          	.global _dstrcpy
  946  00001928          	_dstrcpy:
  947                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  948  00001928  afbefffc	sw	-4(r29),r30; push fp
  949  0000192c  001df020	add	r30,r0,r29; fp = sp
  950  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  951  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  952  00001938  afa20000	sw	0(r29),r2
  953  0000193c  afa30004	sw	4(r29),r3
  954  00001940  8fc10000	lw	r1,(r30)
  955  00001944  afc1fff4	sw	-12(r30),r1
  956  00001948          	L10_LF2:
  957  00001948  8fc10000	lw	r1,(r30)
  958  0000194c  20220001	addi	r2,r1,#1
  959  00001950  afc20000	sw	(r30),r2
  960  00001954  8fc20004	lw	r2,4(r30)
  961  00001958  20430001	addi	r3,r2,#1
  962  0000195c  afc30004	sw	4(r30),r3
  963  00001960  80420000	lb	r2,(r2)
  964  00001964  a0220000	sb	(r1),r2
  965  00001968  a3c2fff3	sb	-13(r30),r2
  966  0000196c          	L12_LF2:
  967  0000196c  93c1fff3	lbu	r1,-13(r30)
  968  00001970  64220000	snei	r2,r1,#0
  969  00001974  1440000c	bnez	r2,L13_LF2
  970  00001978  54000000	nop; delay slot nop
  971  0000197c  0800000c	j	L11_LF2
  972  00001980  54000000	nop; delay slot nop
  973  00001984          	L13_LF2:
  974  00001984  0bffffc0	j	L10_LF2
  975  00001988  54000000	nop; delay slot nop
  976  0000198c          	L11_LF2:
  977  0000198c  8fc1fff4	lw	r1,-12(r30)
  978  00001990  08000004	j	L9_LF2
  979  00001994  54000000	nop; delay slot nop
  980  00001998          	L9_LF2:
  981  00001998  8fa20000	lw	r2,0(r29)
  982  0000199c  8fa30004	lw	r3,4(r29)
  983  000019a0  8fdffff8	lw	r31,-8(r30)
  984  000019a4  001ee820	add	r29,r0,r30
  985  000019a8  8fdefffc	lw	r30,-4(r30)
  986  000019ac  4be00000	jr	r31
  987  000019b0  54000000	nop
  988  000019b4          	.endproc _dstrcpy
  989  000019b4          	.align 2
  990  000019b4          	.proc _dstrncpy
  991  000019b4          	.global _dstrncpy
  992  000019b4          	_dstrncpy:
  993                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  994  000019b4  afbefffc	sw	-4(r29),r30; push fp
  995  000019b8  001df020	add	r30,r0,r29; fp = sp
  996  000019bc  afbffff8	sw	-8(r29),r31; push ret addr
  997  000019c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  998  000019c4  afa20000	sw	0(r29),r2
  999  000019c8  afa30004	sw	4(r29),r3
 1000  000019cc  8fc10000	lw	r1,(r30)
 1001  000019d0  afc1fff4	sw	-12(r30),r1
 1002  000019d4          	L15_LF2:
 1003  000019d4  8fc10008	lw	r1,8(r30)
 1004  000019d8  2022ffff	addi	r2,r1,#-1
 1005  000019dc  afc20008	sw	8(r30),r2
 1006  000019e0  70210000	slei	r1,r1,#0
 1007  000019e4  1020000c	beqz	r1,L18_LF2
 1008  000019e8  54000000	nop; delay slot nop
 1009  000019ec  08000048	j	L16_LF2
 1010  000019f0  54000000	nop; delay slot nop
 1011  000019f4          	L18_LF2:
 1012  000019f4  8fc10000	lw	r1,(r30)
 1013  000019f8  20220001	addi	r2,r1,#1
 1014  000019fc  afc20000	sw	(r30),r2
 1015  00001a00  8fc20004	lw	r2,4(r30)
 1016  00001a04  20430001	addi	r3,r2,#1
 1017  00001a08  afc30004	sw	4(r30),r3
 1018  00001a0c  80420000	lb	r2,(r2)
 1019  00001a10  a0220000	sb	(r1),r2
 1020  00001a14  a3c2fff3	sb	-13(r30),r2
 1021  00001a18          	L17_LF2:
 1022  00001a18  93c1fff3	lbu	r1,-13(r30)
 1023  00001a1c  64220000	snei	r2,r1,#0
 1024  00001a20  1440000c	bnez	r2,L19_LF2
 1025  00001a24  54000000	nop; delay slot nop
 1026  00001a28  0800000c	j	L16_LF2
 1027  00001a2c  54000000	nop; delay slot nop
 1028  00001a30          	L19_LF2:
 1029  00001a30  0bffffa0	j	L15_LF2
 1030  00001a34  54000000	nop; delay slot nop
 1031  00001a38          	L16_LF2:
 1032  00001a38  8fc1fff4	lw	r1,-12(r30)
 1033  00001a3c  08000004	j	L14_LF2
 1034  00001a40  54000000	nop; delay slot nop
 1035  00001a44          	L14_LF2:
 1036  00001a44  8fa20000	lw	r2,0(r29)
 1037  00001a48  8fa30004	lw	r3,4(r29)
 1038  00001a4c  8fdffff8	lw	r31,-8(r30)
 1039  00001a50  001ee820	add	r29,r0,r30
 1040  00001a54  8fdefffc	lw	r30,-4(r30)
 1041  00001a58  4be00000	jr	r31
 1042  00001a5c  54000000	nop
 1043  00001a60          	.endproc _dstrncpy
 1044  00001a60          	.align 2
 1045  00001a60          	.proc _dstrcat
 1046  00001a60          	.global _dstrcat
 1047  00001a60          	_dstrcat:
 1048                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1049  00001a60  afbefffc	sw	-4(r29),r30; push fp
 1050  00001a64  001df020	add	r30,r0,r29; fp = sp
 1051  00001a68  afbffff8	sw	-8(r29),r31; push ret addr
 1052  00001a6c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1053  00001a70  afa20000	sw	0(r29),r2
 1054  00001a74  8fc10000	lw	r1,(r30)
 1055  00001a78  afc1fff4	sw	-12(r30),r1
 1056  00001a7c          	L21_LF2:
 1057  00001a7c  8fc10000	lw	r1,(r30)
 1058  00001a80  90220000	lbu	r2,(r1)
 1059  00001a84  64410000	snei	r1,r2,#0
 1060  00001a88  1420000c	bnez	r1,L23_LF2
 1061  00001a8c  54000000	nop; delay slot nop
 1062  00001a90  0800001c	j	L22_LF2
 1063  00001a94  54000000	nop; delay slot nop
 1064  00001a98          	L23_LF2:
 1065  00001a98  8fc20000	lw	r2,(r30)
 1066  00001a9c  20410001	addi	r1,r2,#1
 1067  00001aa0  00011020	add	r2,r0,r1
 1068  00001aa4  afc20000	sw	(r30),r2
 1069  00001aa8  0bffffd0	j	L21_LF2
 1070  00001aac  54000000	nop; delay slot nop
 1071  00001ab0          	L22_LF2:
 1072  00001ab0  23bdfff8	addi	r29,r29,#-8
 1073  00001ab4  001d0820	add	r1,r0,r29
 1074  00001ab8  8fc20000	lw	r2,(r30)
 1075  00001abc  ac220000	sw	(r1),r2
 1076  00001ac0  8fc20004	lw	r2,4(r30)
 1077  00001ac4  ac220004	sw	4(r1),r2
 1078  00001ac8  0ffffe5c	jal	_dstrcpy
 1079  00001acc  54000000	nop; delay slot nop
 1080  00001ad0  23bd0008	addi	r29,r29,#8
 1081  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1082  00001ad8  08000004	j	L20_LF2
 1083  00001adc  54000000	nop; delay slot nop
 1084  00001ae0          	L20_LF2:
 1085  00001ae0  8fa20000	lw	r2,0(r29)
 1086  00001ae4  8fdffff8	lw	r31,-8(r30)
 1087  00001ae8  001ee820	add	r29,r0,r30
 1088  00001aec  8fdefffc	lw	r30,-4(r30)
 1089  00001af0  4be00000	jr	r31
 1090  00001af4  54000000	nop
 1091  00001af8          	.endproc _dstrcat
 1092  00001af8          	.align 2
 1093  00001af8          	.proc _dstrncmp
 1094  00001af8          	.global _dstrncmp
 1095  00001af8          	_dstrncmp:
 1096                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1097  00001af8  afbefffc	sw	-4(r29),r30; push fp
 1098  00001afc  001df020	add	r30,r0,r29; fp = sp
 1099  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
 1100  00001b04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1101  00001b08  afa20000	sw	0(r29),r2
 1102  00001b0c  afa30004	sw	4(r29),r3
 1103  00001b10  54000000	nop
 1104  00001b14  20010000	addi	r1,r0,#0
 1105  00001b18  afc1fff4	sw	-12(r30),r1
 1106  00001b1c          	L25_LF2:
 1107  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1108  00001b20  8fc20008	lw	r2,8(r30)
 1109  00001b24  0022082a	slt	r1,r1,r2
 1110  00001b28  1420000c	bnez	r1,L28_LF2
 1111  00001b2c  54000000	nop; delay slot nop
 1112  00001b30  08000088	j	L26_LF2
 1113  00001b34  54000000	nop; delay slot nop
 1114  00001b38          	L28_LF2:
 1115  00001b38  8fc10004	lw	r1,4(r30)
 1116  00001b3c  90220000	lbu	r2,(r1)
 1117  00001b40  64410000	snei	r1,r2,#0
 1118  00001b44  14200018	bnez	r1,L29_LF2
 1119  00001b48  54000000	nop; delay slot nop
 1120  00001b4c  20010000	addi	r1,r0,#0
 1121  00001b50  080000d8	j	L24_LF2
 1122  00001b54  54000000	nop; delay slot nop
 1123  00001b58  08000028	j	L30_LF2
 1124  00001b5c  54000000	nop; delay slot nop
 1125  00001b60          	L29_LF2:
 1126  00001b60  8fc10000	lw	r1,(r30)
 1127  00001b64  8fc20004	lw	r2,4(r30)
 1128  00001b68  90210000	lbu	r1,(r1)
 1129  00001b6c  90420000	lbu	r2,(r2)
 1130  00001b70  00220829	sne	r1,r1,r2
 1131  00001b74  1020000c	beqz	r1,L30_LF2
 1132  00001b78  54000000	nop; delay slot nop
 1133  00001b7c  0800003c	j	L26_LF2
 1134  00001b80  54000000	nop; delay slot nop
 1135  00001b84          	L31_LF2:
 1136  00001b84          	L30_LF2:
 1137  00001b84  8fc20000	lw	r2,(r30)
 1138  00001b88  20410001	addi	r1,r2,#1
 1139  00001b8c  00011020	add	r2,r0,r1
 1140  00001b90  afc20000	sw	(r30),r2
 1141  00001b94  8fc20004	lw	r2,4(r30)
 1142  00001b98  20410001	addi	r1,r2,#1
 1143  00001b9c  00011020	add	r2,r0,r1
 1144  00001ba0  afc20004	sw	4(r30),r2
 1145  00001ba4          	L27_LF2:
 1146  00001ba4  8fc2fff4	lw	r2,-12(r30)
 1147  00001ba8  20410001	addi	r1,r2,#1
 1148  00001bac  00011020	add	r2,r0,r1
 1149  00001bb0  afc2fff4	sw	-12(r30),r2
 1150  00001bb4  0bffff64	j	L25_LF2
 1151  00001bb8  54000000	nop; delay slot nop
 1152  00001bbc          	L26_LF2:
 1153  00001bbc  8fc1fff4	lw	r1,-12(r30)
 1154  00001bc0  8fc20008	lw	r2,8(r30)
 1155  00001bc4  00220828	seq	r1,r1,r2
 1156  00001bc8  10200018	beqz	r1,L32_LF2
 1157  00001bcc  54000000	nop; delay slot nop
 1158  00001bd0  20010000	addi	r1,r0,#0
 1159  00001bd4  08000054	j	L24_LF2
 1160  00001bd8  54000000	nop; delay slot nop
 1161  00001bdc  0800004c	j	L33_LF2
 1162  00001be0  54000000	nop; delay slot nop
 1163  00001be4          	L32_LF2:
 1164  00001be4  8fc20000	lw	r2,(r30)
 1165  00001be8  90410000	lbu	r1,(r2)
 1166  00001bec  8fc20004	lw	r2,4(r30)
 1167  00001bf0  90430000	lbu	r3,(r2)
 1168  00001bf4  00230822	sub	r1,r1,r3
 1169  00001bf8  74220000	sgei	r2,r1,#0
 1170  00001bfc  10400020	beqz	r2,L34_LF2
 1171  00001c00  54000000	nop; delay slot nop
 1172  00001c04  8fc10000	lw	r1,(r30)
 1173  00001c08  8fc20004	lw	r2,4(r30)
 1174  00001c0c  90210000	lbu	r1,(r1)
 1175  00001c10  90420000	lbu	r2,(r2)
 1176  00001c14  00220829	sne	r1,r1,r2
 1177  00001c18  08000008	j	L35_LF2
 1178  00001c1c  54000000	nop; delay slot nop
 1179  00001c20          	L34_LF2:
 1180  00001c20  2001ffff	addi	r1,r0,#-1
 1181  00001c24          	L35_LF2:
 1182  00001c24  08000004	j	L24_LF2
 1183  00001c28  54000000	nop; delay slot nop
 1184  00001c2c          	L33_LF2:
 1185  00001c2c          	L24_LF2:
 1186  00001c2c  8fa20000	lw	r2,0(r29)
 1187  00001c30  8fa30004	lw	r3,4(r29)
 1188  00001c34  8fdffff8	lw	r31,-8(r30)
 1189  00001c38  001ee820	add	r29,r0,r30
 1190  00001c3c  8fdefffc	lw	r30,-4(r30)
 1191  00001c40  4be00000	jr	r31
 1192  00001c44  54000000	nop
 1193  00001c48          	.endproc _dstrncmp
 1194  00001c48          	.align 2
 1195  00001c48          	.proc _dstrlen
 1196  00001c48          	.global _dstrlen
 1197  00001c48          	_dstrlen:
 1198                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1199  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1200  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1201  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1202  00001c54  2fbd0018	subui	r29,r29,#24; alloc local storage
 1203  00001c58  afa20000	sw	0(r29),r2
 1204  00001c5c  20010000	addi	r1,r0,#0
 1205  00001c60  afc1fff4	sw	-12(r30),r1
 1206  00001c64          	L37_LF2:
 1207  00001c64  8fc10000	lw	r1,(r30)
 1208  00001c68  20220001	addi	r2,r1,#1
 1209  00001c6c  afc20000	sw	(r30),r2
 1210  00001c70  90210000	lbu	r1,(r1)
 1211  00001c74  64220000	snei	r2,r1,#0
 1212  00001c78  1440000c	bnez	r2,L39_LF2
 1213  00001c7c  54000000	nop; delay slot nop
 1214  00001c80  0800001c	j	L38_LF2
 1215  00001c84  54000000	nop; delay slot nop
 1216  00001c88          	L39_LF2:
 1217  00001c88  8fc2fff4	lw	r2,-12(r30)
 1218  00001c8c  20410001	addi	r1,r2,#1
 1219  00001c90  00011020	add	r2,r0,r1
 1220  00001c94  afc2fff4	sw	-12(r30),r2
 1221  00001c98  0bffffc8	j	L37_LF2
 1222  00001c9c  54000000	nop; delay slot nop
 1223  00001ca0          	L38_LF2:
 1224  00001ca0  8fc1fff4	lw	r1,-12(r30)
 1225  00001ca4  08000004	j	L36_LF2
 1226  00001ca8  54000000	nop; delay slot nop
 1227  00001cac          	L36_LF2:
 1228  00001cac  8fa20000	lw	r2,0(r29)
 1229  00001cb0  8fdffff8	lw	r31,-8(r30)
 1230  00001cb4  001ee820	add	r29,r0,r30
 1231  00001cb8  8fdefffc	lw	r30,-4(r30)
 1232  00001cbc  4be00000	jr	r31
 1233  00001cc0  54000000	nop
 1234  00001cc4          	.endproc _dstrlen
 1235  00001cc4          	.align 2
 1236  00001cc4          	.proc _dstrstr
 1237  00001cc4          	.global _dstrstr
 1238  00001cc4          	_dstrstr:
 1239                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1240  00001cc4  afbefffc	sw	-4(r29),r30; push fp
 1241  00001cc8  001df020	add	r30,r0,r29; fp = sp
 1242  00001ccc  afbffff8	sw	-8(r29),r31; push ret addr
 1243  00001cd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1244  00001cd4  afa20000	sw	0(r29),r2
 1245  00001cd8  23bdfff8	addi	r29,r29,#-8
 1246  00001cdc  001d0820	add	r1,r0,r29
 1247  00001ce0  8fc20004	lw	r2,4(r30)
 1248  00001ce4  ac220000	sw	(r1),r2
 1249  00001ce8  0fffff5c	jal	_dstrlen
 1250  00001cec  54000000	nop; delay slot nop
 1251  00001cf0  23bd0008	addi	r29,r29,#8
 1252  00001cf4  afc1fff4	sw	-12(r30),r1
 1253  00001cf8          	L41_LF2:
 1254  00001cf8  8fc10000	lw	r1,(r30)
 1255  00001cfc  90220000	lbu	r2,(r1)
 1256  00001d00  64410000	snei	r1,r2,#0
 1257  00001d04  1420000c	bnez	r1,L43_LF2
 1258  00001d08  54000000	nop; delay slot nop
 1259  00001d0c  08000060	j	L42_LF2
 1260  00001d10  54000000	nop; delay slot nop
 1261  00001d14          	L43_LF2:
 1262  00001d14  23bdfff0	addi	r29,r29,#-16
 1263  00001d18  001d0820	add	r1,r0,r29
 1264  00001d1c  8fc20000	lw	r2,(r30)
 1265  00001d20  ac220000	sw	(r1),r2
 1266  00001d24  8fc20004	lw	r2,4(r30)
 1267  00001d28  ac220004	sw	4(r1),r2
 1268  00001d2c  8fc2fff4	lw	r2,-12(r30)
 1269  00001d30  ac220008	sw	8(r1),r2
 1270  00001d34  0ffffdc0	jal	_dstrncmp
 1271  00001d38  54000000	nop; delay slot nop
 1272  00001d3c  23bd0010	addi	r29,r29,#16
 1273  00001d40  64220000	snei	r2,r1,#0
 1274  00001d44  14400010	bnez	r2,L44_LF2
 1275  00001d48  54000000	nop; delay slot nop
 1276  00001d4c  8fc10000	lw	r1,(r30)
 1277  00001d50  08000028	j	L40_LF2
 1278  00001d54  54000000	nop; delay slot nop
 1279  00001d58          	L44_LF2:
 1280  00001d58  8fc20000	lw	r2,(r30)
 1281  00001d5c  20410001	addi	r1,r2,#1
 1282  00001d60  00011020	add	r2,r0,r1
 1283  00001d64  afc20000	sw	(r30),r2
 1284  00001d68  0bffff8c	j	L41_LF2
 1285  00001d6c  54000000	nop; delay slot nop
 1286  00001d70          	L42_LF2:
 1287  00001d70  20010000	addi	r1,r0,#0
 1288  00001d74  08000004	j	L40_LF2
 1289  00001d78  54000000	nop; delay slot nop
 1290  00001d7c          	L40_LF2:
 1291  00001d7c  8fa20000	lw	r2,0(r29)
 1292  00001d80  8fdffff8	lw	r31,-8(r30)
 1293  00001d84  001ee820	add	r29,r0,r30
 1294  00001d88  8fdefffc	lw	r30,-4(r30)
 1295  00001d8c  4be00000	jr	r31
 1296  00001d90  54000000	nop
 1297  00001d94          	.endproc _dstrstr
 1298  00001d94          	.align 2
 1299  00001d94          	.proc _dmindex
 1300  00001d94          	.global _dmindex
 1301  00001d94          	_dmindex:
 1302                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1303  00001d94  afbefffc	sw	-4(r29),r30; push fp
 1304  00001d98  001df020	add	r30,r0,r29; fp = sp
 1305  00001d9c  afbffff8	sw	-8(r29),r31; push ret addr
 1306  00001da0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1307  00001da4  afa20000	sw	0(r29),r2
 1308  00001da8  54000000	nop
 1309  00001dac          	L46_LF2:
 1310  00001dac  8fc10000	lw	r1,(r30)
 1311  00001db0  90220000	lbu	r2,(r1)
 1312  00001db4  64410000	snei	r1,r2,#0
 1313  00001db8  1420000c	bnez	r1,L48_LF2
 1314  00001dbc  54000000	nop; delay slot nop
 1315  00001dc0  08000070	j	L47_LF2
 1316  00001dc4  54000000	nop; delay slot nop
 1317  00001dc8          	L48_LF2:
 1318  00001dc8  8fc10004	lw	r1,4(r30)
 1319  00001dcc  afc1fff4	sw	-12(r30),r1
 1320  00001dd0          	L49_LF2:
 1321  00001dd0  8fc1fff4	lw	r1,-12(r30)
 1322  00001dd4  90220000	lbu	r2,(r1)
 1323  00001dd8  64410000	snei	r1,r2,#0
 1324  00001ddc  1420000c	bnez	r1,L52_LF2
 1325  00001de0  54000000	nop; delay slot nop
 1326  00001de4  08000044	j	L50_LF2
 1327  00001de8  54000000	nop; delay slot nop
 1328  00001dec          	L52_LF2:
 1329  00001dec  8fc10000	lw	r1,(r30)
 1330  00001df0  8fc2fff4	lw	r2,-12(r30)
 1331  00001df4  90210000	lbu	r1,(r1)
 1332  00001df8  90420000	lbu	r2,(r2)
 1333  00001dfc  00220828	seq	r1,r1,r2
 1334  00001e00  10200010	beqz	r1,L51_LF2
 1335  00001e04  54000000	nop; delay slot nop
 1336  00001e08  8fc10000	lw	r1,(r30)
 1337  00001e0c  08000030	j	L45_LF2
 1338  00001e10  54000000	nop; delay slot nop
 1339  00001e14          	L53_LF2:
 1340  00001e14          	L51_LF2:
 1341  00001e14  8fc2fff4	lw	r2,-12(r30)
 1342  00001e18  20410001	addi	r1,r2,#1
 1343  00001e1c  00011020	add	r2,r0,r1
 1344  00001e20  afc2fff4	sw	-12(r30),r2
 1345  00001e24  0bffffa8	j	L49_LF2
 1346  00001e28  54000000	nop; delay slot nop
 1347  00001e2c          	L50_LF2:
 1348  00001e2c  0bffff7c	j	L46_LF2
 1349  00001e30  54000000	nop; delay slot nop
 1350  00001e34          	L47_LF2:
 1351  00001e34  20010000	addi	r1,r0,#0
 1352  00001e38  08000004	j	L45_LF2
 1353  00001e3c  54000000	nop; delay slot nop
 1354  00001e40          	L45_LF2:
 1355  00001e40  8fa20000	lw	r2,0(r29)
 1356  00001e44  8fdffff8	lw	r31,-8(r30)
 1357  00001e48  001ee820	add	r29,r0,r30
 1358  00001e4c  8fdefffc	lw	r30,-4(r30)
 1359  00001e50  4be00000	jr	r31
 1360  00001e54  54000000	nop
 1361  00001e58          	.endproc _dmindex
 1362  00001e58          	.align 2
 1363  00001e58          	.proc _dindex
 1364  00001e58          	.global _dindex
 1365  00001e58          	_dindex:
 1366                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1367  00001e58  afbefffc	sw	-4(r29),r30; push fp
 1368  00001e5c  001df020	add	r30,r0,r29; fp = sp
 1369  00001e60  afbffff8	sw	-8(r29),r31; push ret addr
 1370  00001e64  2fbd0010	subui	r29,r29,#16; alloc local storage
 1371  00001e68  afa20000	sw	0(r29),r2
 1372  00001e6c  54000000	nop
 1373  00001e70          	L55_LF2:
 1374  00001e70  8fc10000	lw	r1,(r30)
 1375  00001e74  90220000	lbu	r2,(r1)
 1376  00001e78  64410000	snei	r1,r2,#0
 1377  00001e7c  1420000c	bnez	r1,L57_LF2
 1378  00001e80  54000000	nop; delay slot nop
 1379  00001e84  08000040	j	L56_LF2
 1380  00001e88  54000000	nop; delay slot nop
 1381  00001e8c          	L57_LF2:
 1382  00001e8c  8fc10000	lw	r1,(r30)
 1383  00001e90  90220000	lbu	r2,(r1)
 1384  00001e94  8fc10004	lw	r1,4(r30)
 1385  00001e98  00411028	seq	r2,r2,r1
 1386  00001e9c  10400010	beqz	r2,L58_LF2
 1387  00001ea0  54000000	nop; delay slot nop
 1388  00001ea4  8fc10000	lw	r1,(r30)
 1389  00001ea8  08000028	j	L54_LF2
 1390  00001eac  54000000	nop; delay slot nop
 1391  00001eb0          	L58_LF2:
 1392  00001eb0  8fc20000	lw	r2,(r30)
 1393  00001eb4  20410001	addi	r1,r2,#1
 1394  00001eb8  00011020	add	r2,r0,r1
 1395  00001ebc  afc20000	sw	(r30),r2
 1396  00001ec0  0bffffac	j	L55_LF2
 1397  00001ec4  54000000	nop; delay slot nop
 1398  00001ec8          	L56_LF2:
 1399  00001ec8  20010000	addi	r1,r0,#0
 1400  00001ecc  08000004	j	L54_LF2
 1401  00001ed0  54000000	nop; delay slot nop
 1402  00001ed4          	L54_LF2:
 1403  00001ed4  8fa20000	lw	r2,0(r29)
 1404  00001ed8  8fdffff8	lw	r31,-8(r30)
 1405  00001edc  001ee820	add	r29,r0,r30
 1406  00001ee0  8fdefffc	lw	r30,-4(r30)
 1407  00001ee4  4be00000	jr	r31
 1408  00001ee8  54000000	nop
 1409  00001eec          	.endproc _dindex
 1410  00001eec          	.align 2
 1411  00001eec          	.proc _ditoa
 1412  00001eec          	.global _ditoa
 1413  00001eec          	_ditoa:
 1414                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1415  00001eec  afbefffc	sw	-4(r29),r30; push fp
 1416  00001ef0  001df020	add	r30,r0,r29; fp = sp
 1417  00001ef4  afbffff8	sw	-8(r29),r31; push ret addr
 1418  00001ef8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1419  00001efc  afa20000	sw	0(r29),r2
 1420  00001f00  afa30004	sw	4(r29),r3
 1421  00001f04  8fc10000	lw	r1,(r30)
 1422  00001f08  68220000	slti	r2,r1,#0
 1423  00001f0c  1040002c	beqz	r2,L60_LF2
 1424  00001f10  54000000	nop; delay slot nop
 1425  00001f14  8fc10004	lw	r1,4(r30)
 1426  00001f18  20220001	addi	r2,r1,#1
 1427  00001f1c  afc20004	sw	4(r30),r2
 1428  00001f20  2002002d	addi	r2,r0,(#0x2d)&0xff
 1429  00001f24  a0220000	sb	(r1),r2
 1430  00001f28  8fc10000	lw	r1,(r30)
 1431  00001f2c  00011022	sub	r2,r0,r1
 1432  00001f30  afc20000	sw	(r30),r2
 1433  00001f34  08000118	j	L61_LF2
 1434  00001f38  54000000	nop; delay slot nop
 1435  00001f3c          	L60_LF2:
 1436  00001f3c  8fc10000	lw	r1,(r30)
 1437  00001f40  64220000	snei	r2,r1,#0
 1438  00001f44  14400020	bnez	r2,L62_LF2
 1439  00001f48  54000000	nop; delay slot nop
 1440  00001f4c  8fc10004	lw	r1,4(r30)
 1441  00001f50  20220001	addi	r2,r1,#1
 1442  00001f54  afc20004	sw	4(r30),r2
 1443  00001f58  20020030	addi	r2,r0,(#0x30)&0xff
 1444  00001f5c  a0220000	sb	(r1),r2
 1445  00001f60  080000ec	j	L61_LF2
 1446  00001f64  54000000	nop; delay slot nop
 1447  00001f68          	L62_LF2:
 1448  00001f68  20010001	addi	r1,r0,#1
 1449  00001f6c  afc1fff4	sw	-12(r30),r1
 1450  00001f70          	L64_LF2:
 1451  00001f70  8fc1fff4	lw	r1,-12(r30)
 1452  00001f74  8fc20000	lw	r2,(r30)
 1453  00001f78  0022082c	sle	r1,r1,r2
 1454  00001f7c  1420000c	bnez	r1,L66_LF2
 1455  00001f80  54000000	nop; delay slot nop
 1456  00001f84  08000024	j	L65_LF2
 1457  00001f88  54000000	nop; delay slot nop
 1458  00001f8c          	L67_LF2:
 1459  00001f8c          	L66_LF2:
 1460  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1461  00001f90  00011820	add	r3,r0,r1
 1462  00001f94  50620002	slli	r2,r3,#0x2
 1463  00001f98  00411020	add	r2,r2,r1
 1464  00001f9c  50410001	slli	r1,r2,#0x1
 1465  00001fa0  afc1fff4	sw	-12(r30),r1
 1466  00001fa4  0bffffc8	j	L64_LF2
 1467  00001fa8  54000000	nop; delay slot nop
 1468  00001fac          	L65_LF2:
 1469  00001fac  54000000	nop
 1470  00001fb0          	L68_LF2:
 1471  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1472  00001fb4  2002000a	addi	r2,r0,#10
 1473  00001fb8  00200035	movi2fp	f0,r1
 1474  00001fbc  00400835	movi2fp	f1,r2
 1475  00001fc0  0401000f	div	f0,f0,f1
 1476  00001fc4  00000834	movfp2i	r1,f0
 1477  00001fc8  afc1fff4	sw	-12(r30),r1
 1478  00001fcc  8fc10004	lw	r1,4(r30)
 1479  00001fd0  20220001	addi	r2,r1,#1
 1480  00001fd4  afc20004	sw	4(r30),r2
 1481  00001fd8  8fc20000	lw	r2,(r30)
 1482  00001fdc  8fc3fff4	lw	r3,-12(r30)
 1483  00001fe0  00400035	movi2fp	f0,r2
 1484  00001fe4  00600835	movi2fp	f1,r3
 1485  00001fe8  0401000f	div	f0,f0,f1
 1486  00001fec  00001034	movfp2i	r2,f0
 1487  00001ff0  00021820	add	r3,r0,r2
 1488  00001ff4  20620030	addi	r2,r3,#48
 1489  00001ff8  a0220000	sb	(r1),r2
 1490  00001ffc  8fc10000	lw	r1,(r30)
 1491  00002000  8fc3fff4	lw	r3,-12(r30)
 1492  00002004  00200035	movi2fp	f0,r1
 1493  00002008  00600835	movi2fp	f1,r3
 1494  0000200c  0401000f	div	f0,f0,f1
 1495  00002010  00001034	movfp2i	r2,f0
 1496  00002014  8fc3fff4	lw	r3,-12(r30)
 1497  00002018  00400035	movi2fp	f0,r2
 1498  0000201c  00600835	movi2fp	f1,r3
 1499  00002020  0401000e	mult	f0,f0,f1
 1500  00002024  00001034	movfp2i	r2,f0
 1501  00002028  00220822	sub	r1,r1,r2
 1502  0000202c  afc10000	sw	(r30),r1
 1503  00002030          	L70_LF2:
 1504  00002030  8fc1fff4	lw	r1,-12(r30)
 1505  00002034  6c220001	sgti	r2,r1,#1
 1506  00002038  1440000c	bnez	r2,L71_LF2
 1507  0000203c  54000000	nop; delay slot nop
 1508  00002040  0800000c	j	L61_LF2
 1509  00002044  54000000	nop; delay slot nop
 1510  00002048          	L71_LF2:
 1511  00002048  0bffff64	j	L68_LF2
 1512  0000204c  54000000	nop; delay slot nop
 1513  00002050          	L69_LF2:
 1514  00002050          	L63_LF2:
 1515  00002050          	L61_LF2:
 1516  00002050  8fc10004	lw	r1,4(r30)
 1517  00002054  20020000	addi	r2,r0,(#0x0)&0xff
 1518  00002058  a0220000	sb	(r1),r2
 1519  0000205c          	L59_LF2:
 1520  0000205c  8fa20000	lw	r2,0(r29)
 1521  00002060  8fa30004	lw	r3,4(r29)
 1522  00002064  8fdffff8	lw	r31,-8(r30)
 1523  00002068  001ee820	add	r29,r0,r30
 1524  0000206c  8fdefffc	lw	r30,-4(r30)
 1525  00002070  4be00000	jr	r31
 1526  00002074  54000000	nop
 1527  00002078          	.endproc _ditoa
 1528  00002078          	.align 2
 1529  00002078          	.proc _dstrtol
 1530  00002078          	.global _dstrtol
 1531  00002078          	_dstrtol:
 1532                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1533  00002078  afbefffc	sw	-4(r29),r30; push fp
 1534  0000207c  001df020	add	r30,r0,r29; fp = sp
 1535  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1536  00002084  2fbd0020	subui	r29,r29,#32; alloc local storage
 1537  00002088  afa20000	sw	0(r29),r2
 1538  0000208c  20010000	addi	r1,r0,#0
 1539  00002090  afc1fff4	sw	-12(r30),r1
 1540  00002094          	L73_LF2:
 1541  00002094  8fc10000	lw	r1,(r30)
 1542  00002098  90220000	lbu	r2,(r1)
 1543  0000209c  60410020	seqi	r1,r2,#32
 1544  000020a0  14200034	bnez	r1,L75_LF2
 1545  000020a4  54000000	nop; delay slot nop
 1546  000020a8  8fc10000	lw	r1,(r30)
 1547  000020ac  90220000	lbu	r2,(r1)
 1548  000020b0  60410009	seqi	r1,r2,#9
 1549  000020b4  14200020	bnez	r1,L75_LF2
 1550  000020b8  54000000	nop; delay slot nop
 1551  000020bc  8fc10000	lw	r1,(r30)
 1552  000020c0  90220000	lbu	r2,(r1)
 1553  000020c4  6041000a	seqi	r1,r2,#10
 1554  000020c8  1420000c	bnez	r1,L75_LF2
 1555  000020cc  54000000	nop; delay slot nop
 1556  000020d0  0800001c	j	L74_LF2
 1557  000020d4  54000000	nop; delay slot nop
 1558  000020d8          	L75_LF2:
 1559  000020d8  8fc20000	lw	r2,(r30)
 1560  000020dc  20410001	addi	r1,r2,#1
 1561  000020e0  00011020	add	r2,r0,r1
 1562  000020e4  afc20000	sw	(r30),r2
 1563  000020e8  0bffffa8	j	L73_LF2
 1564  000020ec  54000000	nop; delay slot nop
 1565  000020f0          	L74_LF2:
 1566  000020f0  8fc10004	lw	r1,4(r30)
 1567  000020f4  64220000	snei	r2,r1,#0
 1568  000020f8  10400010	beqz	r2,L76_LF2
 1569  000020fc  54000000	nop; delay slot nop
 1570  00002100  8fc10004	lw	r1,4(r30)
 1571  00002104  8fc20000	lw	r2,(r30)
 1572  00002108  ac220000	sw	(r1),r2
 1573  0000210c          	L76_LF2:
 1574  0000210c  8fc10000	lw	r1,(r30)
 1575  00002110  90220000	lbu	r2,(r1)
 1576  00002114  64410000	snei	r1,r2,#0
 1577  00002118  14200010	bnez	r1,L77_LF2
 1578  0000211c  54000000	nop; delay slot nop
 1579  00002120  8fc1fff4	lw	r1,-12(r30)
 1580  00002124  08000294	j	L72_LF2
 1581  00002128  54000000	nop; delay slot nop
 1582  0000212c          	L77_LF2:
 1583  0000212c  8fc10000	lw	r1,(r30)
 1584  00002130  90220000	lbu	r2,(r1)
 1585  00002134  6041002d	seqi	r1,r2,#45
 1586  00002138  10200024	beqz	r1,L78_LF2
 1587  0000213c  54000000	nop; delay slot nop
 1588  00002140  2001ffff	addi	r1,r0,#-1
 1589  00002144  afc1ffec	sw	-20(r30),r1
 1590  00002148  8fc20000	lw	r2,(r30)
 1591  0000214c  20410001	addi	r1,r2,#1
 1592  00002150  00011020	add	r2,r0,r1
 1593  00002154  afc20000	sw	(r30),r2
 1594  00002158  0800000c	j	L79_LF2
 1595  0000215c  54000000	nop; delay slot nop
 1596  00002160          	L78_LF2:
 1597  00002160  20010001	addi	r1,r0,#1
 1598  00002164  afc1ffec	sw	-20(r30),r1
 1599  00002168          	L79_LF2:
 1600  00002168  8fc10008	lw	r1,8(r30)
 1601  0000216c  64220000	snei	r2,r1,#0
 1602  00002170  14400090	bnez	r2,L80_LF2
 1603  00002174  54000000	nop; delay slot nop
 1604  00002178  8fc10000	lw	r1,(r30)
 1605  0000217c  90220000	lbu	r2,(r1)
 1606  00002180  60410030	seqi	r1,r2,#48
 1607  00002184  10200074	beqz	r1,L81_LF2
 1608  00002188  54000000	nop; delay slot nop
 1609  0000218c  8fc20000	lw	r2,(r30)
 1610  00002190  20410001	addi	r1,r2,#1
 1611  00002194  00011020	add	r2,r0,r1
 1612  00002198  afc20000	sw	(r30),r2
 1613  0000219c  8fc10000	lw	r1,(r30)
 1614  000021a0  90220000	lbu	r2,(r1)
 1615  000021a4  60410078	seqi	r1,r2,#120
 1616  000021a8  14200020	bnez	r1,L83_LF2
 1617  000021ac  54000000	nop; delay slot nop
 1618  000021b0  8fc10000	lw	r1,(r30)
 1619  000021b4  90220000	lbu	r2,(r1)
 1620  000021b8  60410058	seqi	r1,r2,#88
 1621  000021bc  1420000c	bnez	r1,L83_LF2
 1622  000021c0  54000000	nop; delay slot nop
 1623  000021c4  08000024	j	L82_LF2
 1624  000021c8  54000000	nop; delay slot nop
 1625  000021cc          	L83_LF2:
 1626  000021cc  20010010	addi	r1,r0,#16
 1627  000021d0  afc10008	sw	8(r30),r1
 1628  000021d4  8fc20000	lw	r2,(r30)
 1629  000021d8  20410001	addi	r1,r2,#1
 1630  000021dc  00011020	add	r2,r0,r1
 1631  000021e0  afc20000	sw	(r30),r2
 1632  000021e4  0800000c	j	L84_LF2
 1633  000021e8  54000000	nop; delay slot nop
 1634  000021ec          	L82_LF2:
 1635  000021ec  20010008	addi	r1,r0,#8
 1636  000021f0  afc10008	sw	8(r30),r1
 1637  000021f4          	L84_LF2:
 1638  000021f4  0800000c	j	L80_LF2
 1639  000021f8  54000000	nop; delay slot nop
 1640  000021fc          	L81_LF2:
 1641  000021fc  2001000a	addi	r1,r0,#10
 1642  00002200  afc10008	sw	8(r30),r1
 1643  00002204          	L85_LF2:
 1644  00002204          	L80_LF2:
 1645  00002204  8fc10008	lw	r1,8(r30)
 1646  00002208  70220000	slei	r2,r1,#0
 1647  0000220c  1440001c	bnez	r2,L87_LF2
 1648  00002210  54000000	nop; delay slot nop
 1649  00002214  8fc10008	lw	r1,8(r30)
 1650  00002218  6c220010	sgti	r2,r1,#16
 1651  0000221c  1440000c	bnez	r2,L87_LF2
 1652  00002220  54000000	nop; delay slot nop
 1653  00002224  08000010	j	L86_LF2
 1654  00002228  54000000	nop; delay slot nop
 1655  0000222c          	L87_LF2:
 1656  0000222c  8fc1fff4	lw	r1,-12(r30)
 1657  00002230  08000188	j	L72_LF2
 1658  00002234  54000000	nop; delay slot nop
 1659  00002238          	L86_LF2:
 1660  00002238  54000000	nop
 1661  0000223c          	L88_LF2:
 1662  0000223c  8fc10000	lw	r1,(r30)
 1663  00002240  90220000	lbu	r2,(r1)
 1664  00002244  6c41002f	sgtui	r1,r2,#47
 1665  00002248  10200030	beqz	r1,L91_LF2
 1666  0000224c  54000000	nop; delay slot nop
 1667  00002250  8fc10000	lw	r1,(r30)
 1668  00002254  90220000	lbu	r2,(r1)
 1669  00002258  70410039	sleui	r1,r2,#57
 1670  0000225c  1020001c	beqz	r1,L91_LF2
 1671  00002260  54000000	nop; delay slot nop
 1672  00002264  8fc10000	lw	r1,(r30)
 1673  00002268  90220000	lbu	r2,(r1)
 1674  0000226c  2041ffd0	addi	r1,r2,#-48
 1675  00002270  afc1fff0	sw	-16(r30),r1
 1676  00002274  0800008c	j	L92_LF2
 1677  00002278  54000000	nop; delay slot nop
 1678  0000227c          	L91_LF2:
 1679  0000227c  8fc10000	lw	r1,(r30)
 1680  00002280  90220000	lbu	r2,(r1)
 1681  00002284  6c410060	sgtui	r1,r2,#96
 1682  00002288  10200030	beqz	r1,L93_LF2
 1683  0000228c  54000000	nop; delay slot nop
 1684  00002290  8fc10000	lw	r1,(r30)
 1685  00002294  90220000	lbu	r2,(r1)
 1686  00002298  7041007a	sleui	r1,r2,#122
 1687  0000229c  1020001c	beqz	r1,L93_LF2
 1688  000022a0  54000000	nop; delay slot nop
 1689  000022a4  8fc10000	lw	r1,(r30)
 1690  000022a8  90220000	lbu	r2,(r1)
 1691  000022ac  2041ffa9	addi	r1,r2,#-87
 1692  000022b0  afc1fff0	sw	-16(r30),r1
 1693  000022b4  0800004c	j	L92_LF2
 1694  000022b8  54000000	nop; delay slot nop
 1695  000022bc          	L93_LF2:
 1696  000022bc  8fc10000	lw	r1,(r30)
 1697  000022c0  90220000	lbu	r2,(r1)
 1698  000022c4  6c410040	sgtui	r1,r2,#64
 1699  000022c8  10200030	beqz	r1,L95_LF2
 1700  000022cc  54000000	nop; delay slot nop
 1701  000022d0  8fc10000	lw	r1,(r30)
 1702  000022d4  90220000	lbu	r2,(r1)
 1703  000022d8  7041005a	sleui	r1,r2,#90
 1704  000022dc  1020001c	beqz	r1,L95_LF2
 1705  000022e0  54000000	nop; delay slot nop
 1706  000022e4  8fc10000	lw	r1,(r30)
 1707  000022e8  90220000	lbu	r2,(r1)
 1708  000022ec  2041ffc9	addi	r1,r2,#-55
 1709  000022f0  afc1fff0	sw	-16(r30),r1
 1710  000022f4  0800000c	j	L92_LF2
 1711  000022f8  54000000	nop; delay slot nop
 1712  000022fc          	L95_LF2:
 1713  000022fc  200103e8	addi	r1,r0,#1000
 1714  00002300  afc1fff0	sw	-16(r30),r1
 1715  00002304          	L96_LF2:
 1716  00002304          	L94_LF2:
 1717  00002304          	L92_LF2:
 1718  00002304  8fc1fff0	lw	r1,-16(r30)
 1719  00002308  8fc20008	lw	r2,8(r30)
 1720  0000230c  0022082a	slt	r1,r1,r2
 1721  00002310  10200040	beqz	r1,L90_LF2
 1722  00002314  54000000	nop; delay slot nop
 1723  00002318  8fc1fff4	lw	r1,-12(r30)
 1724  0000231c  8fc20008	lw	r2,8(r30)
 1725  00002320  00200035	movi2fp	f0,r1
 1726  00002324  00400835	movi2fp	f1,r2
 1727  00002328  0401000e	mult	f0,f0,f1
 1728  0000232c  00000834	movfp2i	r1,f0
 1729  00002330  afc1fff4	sw	-12(r30),r1
 1730  00002334  8fc1fff4	lw	r1,-12(r30)
 1731  00002338  8fc2fff0	lw	r2,-16(r30)
 1732  0000233c  00220820	add	r1,r1,r2
 1733  00002340  afc1fff4	sw	-12(r30),r1
 1734  00002344  8fc20000	lw	r2,(r30)
 1735  00002348  20410001	addi	r1,r2,#1
 1736  0000234c  00011020	add	r2,r0,r1
 1737  00002350  afc20000	sw	(r30),r2
 1738  00002354          	L97_LF2:
 1739  00002354          	L90_LF2:
 1740  00002354  8fc1fff0	lw	r1,-16(r30)
 1741  00002358  8fc20008	lw	r2,8(r30)
 1742  0000235c  0022082a	slt	r1,r1,r2
 1743  00002360  1420000c	bnez	r1,L98_LF2
 1744  00002364  54000000	nop; delay slot nop
 1745  00002368  0800000c	j	L89_LF2
 1746  0000236c  54000000	nop; delay slot nop
 1747  00002370          	L98_LF2:
 1748  00002370  0bfffec8	j	L88_LF2
 1749  00002374  54000000	nop; delay slot nop
 1750  00002378          	L89_LF2:
 1751  00002378  8fc10004	lw	r1,4(r30)
 1752  0000237c  64220000	snei	r2,r1,#0
 1753  00002380  10400010	beqz	r2,L99_LF2
 1754  00002384  54000000	nop; delay slot nop
 1755  00002388  8fc10004	lw	r1,4(r30)
 1756  0000238c  8fc20000	lw	r2,(r30)
 1757  00002390  ac220000	sw	(r1),r2
 1758  00002394          	L99_LF2:
 1759  00002394  8fc1fff4	lw	r1,-12(r30)
 1760  00002398  8fc2ffec	lw	r2,-20(r30)
 1761  0000239c  00200035	movi2fp	f0,r1
 1762  000023a0  00400835	movi2fp	f1,r2
 1763  000023a4  0401000e	mult	f0,f0,f1
 1764  000023a8  00000834	movfp2i	r1,f0
 1765  000023ac  afc1fff4	sw	-12(r30),r1
 1766  000023b0  8fc1fff4	lw	r1,-12(r30)
 1767  000023b4  08000004	j	L72_LF2
 1768  000023b8  54000000	nop; delay slot nop
 1769  000023bc          	L72_LF2:
 1770  000023bc  8fa20000	lw	r2,0(r29)
 1771  000023c0  8fdffff8	lw	r31,-8(r30)
 1772  000023c4  001ee820	add	r29,r0,r30
 1773  000023c8  8fdefffc	lw	r30,-4(r30)
 1774  000023cc  4be00000	jr	r31
 1775  000023d0  54000000	nop
 1776  000023d4          	.endproc _dstrtol
 1777  000023d4          	.align 2
 1778  000023d4          	.proc _bcopy
 1779  000023d4          	.global _bcopy
 1780  000023d4          	_bcopy:
 1781                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1782  000023d4  afbefffc	sw	-4(r29),r30; push fp
 1783  000023d8  001df020	add	r30,r0,r29; fp = sp
 1784  000023dc  afbffff8	sw	-8(r29),r31; push ret addr
 1785  000023e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1786  000023e4  afa20000	sw	0(r29),r2
 1787  000023e8  afa30004	sw	4(r29),r3
 1788  000023ec  54000000	nop
 1789  000023f0          	L101_LF2:
 1790  000023f0  8fc10008	lw	r1,8(r30)
 1791  000023f4  2022ffff	addi	r2,r1,#-1
 1792  000023f8  afc20008	sw	8(r30),r2
 1793  000023fc  6c210000	sgti	r1,r1,#0
 1794  00002400  1420000c	bnez	r1,L103_LF2
 1795  00002404  54000000	nop; delay slot nop
 1796  00002408  0800002c	j	L102_LF2
 1797  0000240c  54000000	nop; delay slot nop
 1798  00002410          	L103_LF2:
 1799  00002410  8fc10004	lw	r1,4(r30)
 1800  00002414  20220001	addi	r2,r1,#1
 1801  00002418  afc20004	sw	4(r30),r2
 1802  0000241c  8fc20000	lw	r2,(r30)
 1803  00002420  20430001	addi	r3,r2,#1
 1804  00002424  afc30000	sw	(r30),r3
 1805  00002428  80420000	lb	r2,(r2)
 1806  0000242c  a0220000	sb	(r1),r2
 1807  00002430  0bffffbc	j	L101_LF2
 1808  00002434  54000000	nop; delay slot nop
 1809  00002438          	L102_LF2:
 1810  00002438          	L100_LF2:
 1811  00002438  8fa20000	lw	r2,0(r29)
 1812  0000243c  8fa30004	lw	r3,4(r29)
 1813  00002440  8fdffff8	lw	r31,-8(r30)
 1814  00002444  001ee820	add	r29,r0,r30
 1815  00002448  8fdefffc	lw	r30,-4(r30)
 1816  0000244c  4be00000	jr	r31
 1817  00002450  54000000	nop
 1818  00002454          	.endproc _bcopy
 1819  00002454          	.align 2
 1820  00002454          	.proc _bzero
 1821  00002454          	.global _bzero
 1822  00002454          	_bzero:
 1823                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1824  00002454  afbefffc	sw	-4(r29),r30; push fp
 1825  00002458  001df020	add	r30,r0,r29; fp = sp
 1826  0000245c  afbffff8	sw	-8(r29),r31; push ret addr
 1827  00002460  2fbd0010	subui	r29,r29,#16; alloc local storage
 1828  00002464  afa20000	sw	0(r29),r2
 1829  00002468  54000000	nop
 1830  0000246c          	L105_LF2:
 1831  0000246c  8fc10004	lw	r1,4(r30)
 1832  00002470  2022ffff	addi	r2,r1,#-1
 1833  00002474  afc20004	sw	4(r30),r2
 1834  00002478  6c210000	sgti	r1,r1,#0
 1835  0000247c  1420000c	bnez	r1,L107_LF2
 1836  00002480  54000000	nop; delay slot nop
 1837  00002484  08000020	j	L106_LF2
 1838  00002488  54000000	nop; delay slot nop
 1839  0000248c          	L107_LF2:
 1840  0000248c  8fc10000	lw	r1,(r30)
 1841  00002490  20220001	addi	r2,r1,#1
 1842  00002494  afc20000	sw	(r30),r2
 1843  00002498  20020000	addi	r2,r0,(#0x0)&0xff
 1844  0000249c  a0220000	sb	(r1),r2
 1845  000024a0  0bffffc8	j	L105_LF2
 1846  000024a4  54000000	nop; delay slot nop
 1847  000024a8          	L106_LF2:
 1848  000024a8          	L104_LF2:
 1849  000024a8  8fa20000	lw	r2,0(r29)
 1850  000024ac  8fdffff8	lw	r31,-8(r30)
 1851  000024b0  001ee820	add	r29,r0,r30
 1852  000024b4  8fdefffc	lw	r30,-4(r30)
 1853  000024b8  4be00000	jr	r31
 1854  000024bc  54000000	nop
 1855  000024c0          	.endproc _bzero
 1856  000024c0          	.align 2
 1857  000024c0          	.proc _min
 1858  000024c0          	.global _min
 1859  000024c0          	_min:
 1860                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1861  000024c0  afbefffc	sw	-4(r29),r30; push fp
 1862  000024c4  001df020	add	r30,r0,r29; fp = sp
 1863  000024c8  afbffff8	sw	-8(r29),r31; push ret addr
 1864  000024cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1865  000024d0  afa20000	sw	0(r29),r2
 1866  000024d4  afa30004	sw	4(r29),r3
 1867  000024d8  8fc10000	lw	r1,(r30)
 1868  000024dc  8fc20004	lw	r2,4(r30)
 1869  000024e0  0022182c	sle	r3,r1,r2
 1870  000024e4  14600008	bnez	r3,L109_LF2
 1871  000024e8  54000000	nop; delay slot nop
 1872  000024ec  8fc10004	lw	r1,4(r30)
 1873  000024f0          	L109_LF2:
 1874  000024f0  08000004	j	L108_LF2
 1875  000024f4  54000000	nop; delay slot nop
 1876  000024f8          	L108_LF2:
 1877  000024f8  8fa20000	lw	r2,0(r29)
 1878  000024fc  8fa30004	lw	r3,4(r29)
 1879  00002500  8fdffff8	lw	r31,-8(r30)
 1880  00002504  001ee820	add	r29,r0,r30
 1881  00002508  8fdefffc	lw	r30,-4(r30)
 1882  0000250c  4be00000	jr	r31
 1883  00002510  54000000	nop
 1884  00002514          	.endproc _min
 1885  00002514          	.align 2
 1886  00002514          	.proc _max
 1887  00002514          	.global _max
 1888  00002514          	_max:
 1889                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1890  00002514  afbefffc	sw	-4(r29),r30; push fp
 1891  00002518  001df020	add	r30,r0,r29; fp = sp
 1892  0000251c  afbffff8	sw	-8(r29),r31; push ret addr
 1893  00002520  2fbd0010	subui	r29,r29,#16; alloc local storage
 1894  00002524  afa20000	sw	0(r29),r2
 1895  00002528  afa30004	sw	4(r29),r3
 1896  0000252c  8fc10000	lw	r1,(r30)
 1897  00002530  8fc20004	lw	r2,4(r30)
 1898  00002534  0022182d	sge	r3,r1,r2
 1899  00002538  14600008	bnez	r3,L111_LF2
 1900  0000253c  54000000	nop; delay slot nop
 1901  00002540  8fc10004	lw	r1,4(r30)
 1902  00002544          	L111_LF2:
 1903  00002544  08000004	j	L110_LF2
 1904  00002548  54000000	nop; delay slot nop
 1905  0000254c          	L110_LF2:
 1906  0000254c  8fa20000	lw	r2,0(r29)
 1907  00002550  8fa30004	lw	r3,4(r29)
 1908  00002554  8fdffff8	lw	r31,-8(r30)
 1909  00002558  001ee820	add	r29,r0,r30
 1910  0000255c  8fdefffc	lw	r30,-4(r30)
 1911  00002560  4be00000	jr	r31
 1912  00002564  54000000	nop
 1913  00002568          	.endproc _max
 1914                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1915                      ;;;
 1916                      ;;; Most of the traps are called in files from libtraps.
 1919  00002568          	.align 2
 1920  00002568          	.proc _exit
 1921  00002568          	.global _exit
 1922  00002568          	_exit:
 1923  00002568  44000300	trap	#0x300
 1924  0000256c  4be00000	jr	r31
 1925  00002570  54000000	nop
 1926  00002574          	.endproc _exit
 1928                      ; for the benefit of gcc.
 1929  00002574          	.proc ___main
 1930  00002574          	.global ___main
 1931  00002574          	___main:
 1932  00002574  4be00000	jr	r31
 1933  00002578  54000000	nop
 1934  0000257c          	.endproc ___main
 1935  0000257c          	.text
 1936  0000257c          	.global _etext
 1937  0000257c          	_etext:
 1938  0000257c          	.align 3
 1939  00002580          	.data
 1940  00008160          	.global _edata
 1941  00008160          	_edata:
