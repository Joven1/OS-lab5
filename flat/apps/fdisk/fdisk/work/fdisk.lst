 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20848
    4                      ; Text size: 5572
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  0a0a3d3d	.ascii "\n\n======FDISK START======\n\n\000"
   94  00003010  3d3d3d3d	
   94  00003014  46444953	
   94  00003018  4b205354	
   94  0000301c  4152543d	
   94  00003020  3d3d3d3d	
   94  00003024  3d0a0a00	
   95  00003028          	.align 2
   96  00003028          	LC1_LF0:
   97  00003028  4552524f	.ascii "ERROR: No Input\n\n\000"
   97  0000302c  523a204e	
   97  00003030  6f20496e	
   97  00003034  7075740a	
   97  00003038  0a00    	
   98  0000303a          	.align 2
   99  0000303c          	LC2_LF0:
  100  0000303c  4572726f	.ascii "Error: DFS Inode is not 96 bytes!\n\000"
  100  00003040  723a2044	
  100  00003044  46532049	
  100  00003048  6e6f6465	
  100  0000304c  20697320	
  100  00003050  6e6f7420	
  100  00003054  39362062	
  100  00003058  79746573	
  100  0000305c  210a00  	
  101  0000305f          	.align 2
  102  00003060          	LC3_LF0:
  103  00003060  53756363	.ascii "Success: DFS Inode is 96 bytes!\n\000"
  103  00003064  6573733a	
  103  00003068  20444653	
  103  0000306c  20496e6f	
  103  00003070  64652069	
  103  00003074  73203936	
  103  00003078  20627974	
  103  0000307c  6573210a	
  103  00003080  00      	
  104  00003081          	.align 2
  105  00003084          	LC4_LF0:
  106  00003084  54686520	.ascii "The size of the dfs_inode is %d\n\000"
  106  00003088  73697a65	
  106  0000308c  206f6620	
  106  00003090  74686520	
  106  00003094  6466735f	
  106  00003098  696e6f64	
  106  0000309c  65206973	
  106  000030a0  2025640a	
  106  000030a4  00      	
  107  000030a5          	.align 2
  108  000030a8          	LC5_LF0:
  109  000030a8  4572726f	.ascii "Error: Disk does not exist!\n\000"
  109  000030ac  723a2044	
  109  000030b0  69736b20	
  109  000030b4  646f6573	
  109  000030b8  206e6f74	
  109  000030bc  20657869	
  109  000030c0  7374210a	
  109  000030c4  00      	
  110  000030c5          	.align 2
  111  000030c8          	LC6_LF0:
  112  000030c8  48656c6c	.ascii "Hello WORLD!\000"
  112  000030cc  6f20574f	
  112  000030d0  524c4421	
  112  000030d4  00      	
  113  000030d5          	.align 2
  114  000030d8          	LC7_LF0:
  115  000030d8  52756e6e	.ascii "Running writing into the super block\n\000"
  115  000030dc  696e6720	
  115  000030e0  77726974	
  115  000030e4  696e6720	
  115  000030e8  696e746f	
  115  000030ec  20746865	
  115  000030f0  20737570	
  115  000030f4  65722062	
  115  000030f8  6c6f636b	
  115  000030fc  0a00    	
  116  000030fe          	.align 2
  117  00003100          	LC8_LF0:
  118  00003100  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  118  00003104  6b202825	
  118  00003108  64293a20	
  118  0000310c  466f726d	
  118  00003110  61747465	
  118  00003114  64204446	
  118  00003118  53206469	
  118  0000311c  736b2066	
  118  00003120  6f722025	
  118  00003124  64206279	
  118  00003128  7465732e	
  118  0000312c  0a00    	
  119  0000312e          	.text
  120  000010d4          	.align 2
  121  000010d4          	.proc _main
  122  000010d4          	.global _main
  123  000010d4          	_main:
  124                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  125  000010d4  afbefffc	sw	-4(r29),r30; push fp
  126  000010d8  001df020	add	r30,r0,r29; fp = sp
  127  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  128  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  129  000010e4  8fc20000	lw	r2,(r30)
  130  000010e8  0c0014d0	jal	___main
  131  000010ec  54000000	nop; not filled.
  132  000010f0  23bdfff8	addi	r29,r29,#-8
  133  000010f4  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  134  000010f8  2529300c	addui	r9,r9,(LC0_LF0)&0xffff
  135  000010fc  afa90000	sw	(r29),r9
  136  00001100  0c000578	jal	_Printf
  137  00001104  54000000	nop; not filled.
  138  00001108  23bd0008	addi	r29,r29,#8
  139  0000110c  64410001	snei	r1,r2,#1
  140  00001110  10200028	beqz	r1,L14_LF0
  141  00001114  54000000	nop; not filled.
  142  00001118  23bdfff8	addi	r29,r29,#-8
  143  0000111c  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  144  00001120  25293028	addui	r9,r9,(LC1_LF0)&0xffff
  145  00001124  afa90000	sw	(r29),r9
  146  00001128  0c000550	jal	_Printf
  147  0000112c  54000000	nop; not filled.
  148  00001130  0c0006e0	jal	_Exit
  149  00001134  54000000	nop; not filled.
  150  00001138  23bd0008	addi	r29,r29,#8
  151  0000113c          	L14_LF0:
  152  0000113c  0c000674	jal	_dfs_invalidate
  153  00001140  54000000	nop; not filled.
  154  00001144  23bdfff8	addi	r29,r29,#-8
  155  00001148  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  156  0000114c  25293060	addui	r9,r9,(LC3_LF0)&0xffff
  157  00001150  afa90000	sw	(r29),r9
  158  00001154  0c000524	jal	_Printf
  159  00001158  54000000	nop; not filled.
  160  0000115c  23bd0008	addi	r29,r29,#8
  161  00001160  23bdfff8	addi	r29,r29,#-8
  162  00001164  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  163  00001168  25293084	addui	r9,r9,(LC4_LF0)&0xffff
  164  0000116c  afa90000	sw	(r29),r9
  165  00001170  20090060	addi	r9,r0,#96
  166  00001174  afa90004	sw	4(r29),r9
  167  00001178  0c000500	jal	_Printf
  168  0000117c  54000000	nop; not filled.
  169  00001180  0c00060c	jal	_disk_size
  170  00001184  54000000	nop; not filled.
  171  00001188  3c020000	lhi	r2,((_disksize)>>16)&0xffff
  172  0000118c  24423004	addui	r2,r2,(_disksize)&0xffff
  173  00001190  ac410000	sw	(r2),r1
  174  00001194  0c000604	jal	_disk_blocksize
  175  00001198  54000000	nop; not filled.
  176  0000119c  3c020000	lhi	r2,((_diskblocksize)>>16)&0xffff
  177  000011a0  24423000	addui	r2,r2,(_diskblocksize)&0xffff
  178  000011a4  ac410000	sw	(r2),r1
  179  000011a8  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  180  000011ac  24213008	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  181  000011b0  20094000	addi	r9,r0,#16384
  182  000011b4  ac290000	sw	(r1),r9
  183  000011b8  3c020000	lhi	r2,((_sb)>>16)&0xffff
  184  000011bc  24423154	addui	r2,r2,(_sb)&0xffff
  185  000011c0  20090400	addi	r9,r0,#1024
  186  000011c4  ac490004	sw	4(r2),r9
  187  000011c8  20094000	addi	r9,r0,#16384
  188  000011cc  ac490008	sw	8(r2),r9
  189  000011d0  20090001	addi	r9,r0,#1
  190  000011d4  ac49000c	sw	12(r2),r9
  191  000011d8  200900c0	addi	r9,r0,#192
  192  000011dc  ac490010	sw	16(r2),r9
  193  000011e0  20090013	addi	r9,r0,#19
  194  000011e4  ac490014	sw	20(r2),r9
  195  000011e8  20090015	addi	r9,r0,#21
  196  000011ec  ac490018	sw	24(r2),r9
  197  000011f0  0c0005b4	jal	_disk_create
  198  000011f4  54000000	nop; not filled.
  199  000011f8  23bd0008	addi	r29,r29,#8
  200  000011fc  6021ffff	seqi	r1,r1,#-1
  201  00001200  10200028	beqz	r1,L17_LF0
  202  00001204  54000000	nop; not filled.
  203  00001208  23bdfff8	addi	r29,r29,#-8
  204  0000120c  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  205  00001210  252930a8	addui	r9,r9,(LC5_LF0)&0xffff
  206  00001214  afa90000	sw	(r29),r9
  207  00001218  0c000460	jal	_Printf
  208  0000121c  54000000	nop; not filled.
  209  00001220  0c0005f0	jal	_Exit
  210  00001224  54000000	nop; not filled.
  211  00001228  23bd0008	addi	r29,r29,#8
  212  0000122c          	L17_LF0:
  213  0000122c  20040000	addi	r4,r0,#0
  214  00001230  20420010	addi	r2,r2,#16
  215  00001234  8c410000	lw	r1,(r2)
  216  00001238  0081082a	sltu	r1,r4,r1
  217  0000123c  10200060	beqz	r1,L19_LF0
  218  00001240  54000000	nop; not filled.
  219  00001244  00022820	add	r5,r0,r2
  220  00001248  3c1f0000	lhi	r31,((_inodes)>>16)&0xffff
  221  0000124c  27ff3170	addui	r31,r31,(_inodes)&0xffff
  222  00001250          	L21_LF0:
  223  00001250  20090000	addi	r9,r0,#0
  224  00001254  afe90000	sw	(r31),r9
  225  00001258  afe90004	sw	4(r31),r9
  226  0000125c  20090000	addi	r9,r0,(#0x0)&0xff
  227  00001260  a3e90008	sb	8(r31),r9
  228  00001264  001f1020	add	r2,r0,r31
  229  00001268  23e30024	addi	r3,r31,#36
  230  0000126c          	L25_LF0:
  231  0000126c  20090000	addi	r9,r0,#0
  232  00001270  ac490034	sw	52(r2),r9
  233  00001274  20420004	addi	r2,r2,#4
  234  00001278  0043082c	sle	r1,r2,r3
  235  0000127c  1420ffec	bnez	r1,L25_LF0
  236  00001280  54000000	nop; not filled.
  237  00001284  afe9005c	sw	92(r31),r9
  238  00001288  23ff0060	addi	r31,r31,#96
  239  0000128c  20840001	addi	r4,r4,#1
  240  00001290  8ca10000	lw	r1,(r5)
  241  00001294  0081082a	sltu	r1,r4,r1
  242  00001298  1420ffb4	bnez	r1,L21_LF0
  243  0000129c  54000000	nop; not filled.
  244  000012a0          	L19_LF0:
  245  000012a0  3c020000	lhi	r2,((_inodes)>>16)&0xffff
  246  000012a4  24423170	addui	r2,r2,(_inodes)&0xffff
  247  000012a8  20090001	addi	r9,r0,#1
  248  000012ac  ac4947a0	sw	18336(r2),r9
  249  000012b0  20090045	addi	r9,r0,#69
  250  000012b4  ac4947a4	sw	18340(r2),r9
  251  000012b8  3c010000	lhi	r1,((LC6_LF0)>>16)&0xffff
  252  000012bc  242130c8	addui	r1,r1,(LC6_LF0)&0xffff
  253  000012c0  8c290000	lw	r9,(r1)
  254  000012c4  ac4947a8	sw	18344(r2),r9
  255  000012c8  8c290004	lw	r9,4(r1)
  256  000012cc  ac4947ac	sw	18348(r2),r9
  257  000012d0  8c290008	lw	r9,8(r1)
  258  000012d4  ac4947b0	sw	18352(r2),r9
  259  000012d8  8021000c	lb	r1,12(r1)
  260  000012dc  a04147b4	sb	18356(r2),r1
  261  000012e0  20040000	addi	r4,r0,#0
  262  000012e4  3c030000	lhi	r3,((_sb+8)>>16)&0xffff
  263  000012e8  2463315c	addui	r3,r3,(_sb+8)&0xffff
  264  000012ec  8c610000	lw	r1,(r3)
  265  000012f0  58210005	srli	r1,r1,#0x5
  266  000012f4  0081082a	sltu	r1,r4,r1
  267  000012f8  10200030	beqz	r1,L29_LF0
  268  000012fc  54000000	nop; not filled.
  269  00001300  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  270  00001304  24427970	addui	r2,r2,(_fbv)&0xffff
  271  00001308          	L31_LF0:
  272  00001308  20090000	addi	r9,r0,#0
  273  0000130c  ac490000	sw	(r2),r9
  274  00001310  20420004	addi	r2,r2,#4
  275  00001314  20840001	addi	r4,r4,#1
  276  00001318  8c610000	lw	r1,(r3)
  277  0000131c  58210005	srli	r1,r1,#0x5
  278  00001320  0081082a	sltu	r1,r4,r1
  279  00001324  1420ffe0	bnez	r1,L31_LF0
  280  00001328  54000000	nop; not filled.
  281  0000132c          	L29_LF0:
  282  0000132c  3c010000	lhi	r1,((_fbv)>>16)&0xffff
  283  00001330  24217970	addui	r1,r1,(_fbv)&0xffff
  284  00001334  2009f800	addi	r9,r0,#-2048
  285  00001338  ac290000	sw	(r1),r9
  286  0000133c  00011820	add	r3,r0,r1
  287  00001340  3c010000	lhi	r1,((_sb+20)>>16)&0xffff
  288  00001344  24213168	addui	r1,r1,(_sb+20)&0xffff
  289  00001348  8c240000	lw	r4,(r1)
  290  0000134c  20250004	addi	r5,r1,#4
  291  00001350  8ca10000	lw	r1,(r5)
  292  00001354  0081082a	sltu	r1,r4,r1
  293  00001358  102000a4	beqz	r1,L34_LF0
  294  0000135c  54000000	nop; not filled.
  295  00001360  23c2fbf8	addi	r2,r30,#-1032
  296  00001364  3c070000	lhi	r7,((_diskblocksize)>>16)&0xffff
  297  00001368  24e73000	addui	r7,r7,(_diskblocksize)&0xffff
  298  0000136c  00054020	add	r8,r0,r5
  299  00001370  50810001	slli	r1,r4,#0x1
  300  00001374  20260001	addi	r6,r1,#1
  301  00001378  50850001	slli	r5,r4,#0x1
  302  0000137c          	L36_LF0:
  303  0000137c  23bdfff0	addi	r29,r29,#-16
  304  00001380  afa30000	sw	(r29),r3
  305  00001384  afa20004	sw	4(r29),r2
  306  00001388  8ce90000	lw	r9,(r7)
  307  0000138c  afa90008	sw	8(r29),r9
  308  00001390  0c001088	jal	_bcopy
  309  00001394  54000000	nop; not filled.
  310  00001398  afa50000	sw	(r29),r5
  311  0000139c  afa20004	sw	4(r29),r2
  312  000013a0  0c000210	jal	_FdiskWriteBlock
  313  000013a4  54000000	nop; not filled.
  314  000013a8  8ce10000	lw	r1,(r7)
  315  000013ac  00611820	add	r3,r3,r1
  316  000013b0  afa30000	sw	(r29),r3
  317  000013b4  afa20004	sw	4(r29),r2
  318  000013b8  8ce90000	lw	r9,(r7)
  319  000013bc  afa90008	sw	8(r29),r9
  320  000013c0  0c001058	jal	_bcopy
  321  000013c4  54000000	nop; not filled.
  322  000013c8  afa60000	sw	(r29),r6
  323  000013cc  afa20004	sw	4(r29),r2
  324  000013d0  0c0001e0	jal	_FdiskWriteBlock
  325  000013d4  54000000	nop; not filled.
  326  000013d8  8ce10000	lw	r1,(r7)
  327  000013dc  00611820	add	r3,r3,r1
  328  000013e0  23bd0010	addi	r29,r29,#16
  329  000013e4  20c60002	addi	r6,r6,#2
  330  000013e8  20a50002	addi	r5,r5,#2
  331  000013ec  20840001	addi	r4,r4,#1
  332  000013f0  8d010000	lw	r1,(r8)
  333  000013f4  0081082a	sltu	r1,r4,r1
  334  000013f8  1420ff80	bnez	r1,L36_LF0
  335  000013fc  54000000	nop; not filled.
  336  00001400          	L34_LF0:
  337  00001400  3c060000	lhi	r6,((_sb)>>16)&0xffff
  338  00001404  24c63154	addui	r6,r6,(_sb)&0xffff
  339  00001408  20090001	addi	r9,r0,#1
  340  0000140c  acc90000	sw	(r6),r9
  341  00001410  23bdfff8	addi	r29,r29,#-8
  342  00001414  23c5fbf8	addi	r5,r30,#-1032
  343  00001418  afa50000	sw	(r29),r5
  344  0000141c  20090400	addi	r9,r0,#1024
  345  00001420  afa90004	sw	4(r29),r9
  346  00001424  0c001074	jal	_bzero
  347  00001428  54000000	nop; not filled.
  348  0000142c  23bdfff8	addi	r29,r29,#-8
  349  00001430  afa60000	sw	(r29),r6
  350  00001434  afa50004	sw	4(r29),r5
  351  00001438  2009001c	addi	r9,r0,#28
  352  0000143c  afa90008	sw	8(r29),r9
  353  00001440  0c000fd8	jal	_bcopy
  354  00001444  54000000	nop; not filled.
  355  00001448  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  356  0000144c  252930d8	addui	r9,r9,(LC7_LF0)&0xffff
  357  00001450  afa90000	sw	(r29),r9
  358  00001454  0c000224	jal	_Printf
  359  00001458  54000000	nop; not filled.
  360  0000145c  20090001	addi	r9,r0,#1
  361  00001460  afa90000	sw	(r29),r9
  362  00001464  afa50004	sw	4(r29),r5
  363  00001468  0c000148	jal	_FdiskWriteBlock
  364  0000146c  54000000	nop; not filled.
  365  00001470  3c030000	lhi	r3,((_inodes)>>16)&0xffff
  366  00001474  24633170	addui	r3,r3,(_inodes)&0xffff
  367  00001478  20040000	addi	r4,r0,#0
  368  0000147c  23bd0010	addi	r29,r29,#16
  369  00001480  8cc20010	lw	r2,16(r6)
  370  00001484  50410001	slli	r1,r2,#0x1
  371  00001488  00220820	add	r1,r1,r2
  372  0000148c  50220005	slli	r2,r1,#0x5
  373  00001490  8cc10004	lw	r1,4(r6)
  374  00001494  00400035	movi2fp	f0,r2
  375  00001498  00200835	movi2fp	f1,r1
  376  0000149c  04010017	divu	f0,f0,f1
  377  000014a0  00000834	movfp2i	r1,f0
  378  000014a4  0081082a	sltu	r1,r4,r1
  379  000014a8  102000c8	beqz	r1,L39_LF0
  380  000014ac  54000000	nop; not filled.
  381  000014b0  3c070000	lhi	r7,((_diskblocksize)>>16)&0xffff
  382  000014b4  24e73000	addui	r7,r7,(_diskblocksize)&0xffff
  383  000014b8  20c6000c	addi	r6,r6,#12
  384  000014bc          	L41_LF0:
  385  000014bc  23bdfff0	addi	r29,r29,#-16
  386  000014c0  afa30000	sw	(r29),r3
  387  000014c4  afa50004	sw	4(r29),r5
  388  000014c8  8ce90000	lw	r9,(r7)
  389  000014cc  afa90008	sw	8(r29),r9
  390  000014d0  0c000f48	jal	_bcopy
  391  000014d4  54000000	nop; not filled.
  392  000014d8  8cc10000	lw	r1,(r6)
  393  000014dc  00240820	add	r1,r1,r4
  394  000014e0  50210001	slli	r1,r1,#0x1
  395  000014e4  afa10000	sw	(r29),r1
  396  000014e8  afa50004	sw	4(r29),r5
  397  000014ec  0c0000c4	jal	_FdiskWriteBlock
  398  000014f0  54000000	nop; not filled.
  399  000014f4  8ce10000	lw	r1,(r7)
  400  000014f8  00611820	add	r3,r3,r1
  401  000014fc  afa30000	sw	(r29),r3
  402  00001500  afa50004	sw	4(r29),r5
  403  00001504  8ce90000	lw	r9,(r7)
  404  00001508  afa90008	sw	8(r29),r9
  405  0000150c  0c000f0c	jal	_bcopy
  406  00001510  54000000	nop; not filled.
  407  00001514  8cc10000	lw	r1,(r6)
  408  00001518  00240820	add	r1,r1,r4
  409  0000151c  50210001	slli	r1,r1,#0x1
  410  00001520  20210001	addi	r1,r1,#1
  411  00001524  afa10000	sw	(r29),r1
  412  00001528  afa50004	sw	4(r29),r5
  413  0000152c  0c000084	jal	_FdiskWriteBlock
  414  00001530  54000000	nop; not filled.
  415  00001534  8ce10000	lw	r1,(r7)
  416  00001538  00611820	add	r3,r3,r1
  417  0000153c  23bd0010	addi	r29,r29,#16
  418  00001540  20840001	addi	r4,r4,#1
  419  00001544  8cc20004	lw	r2,4(r6)
  420  00001548  50410001	slli	r1,r2,#0x1
  421  0000154c  00220820	add	r1,r1,r2
  422  00001550  50220005	slli	r2,r1,#0x5
  423  00001554  8cc1fff8	lw	r1,-8(r6)
  424  00001558  00400035	movi2fp	f0,r2
  425  0000155c  00200835	movi2fp	f1,r1
  426  00001560  04010017	divu	f0,f0,f1
  427  00001564  00000834	movfp2i	r1,f0
  428  00001568  0081082a	sltu	r1,r4,r1
  429  0000156c  1420ff4c	bnez	r1,L41_LF0
  430  00001570  54000000	nop; not filled.
  431  00001574          	L39_LF0:
  432  00001574  0c000110	jal	_getpid
  433  00001578  54000000	nop; not filled.
  434  0000157c  23bdfff0	addi	r29,r29,#-16
  435  00001580  3c090000	lhi	r9,((LC8_LF0)>>16)&0xffff
  436  00001584  25293100	addui	r9,r9,(LC8_LF0)&0xffff
  437  00001588  afa90000	sw	(r29),r9
  438  0000158c  afa10004	sw	4(r29),r1
  439  00001590  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  440  00001594  24213004	addui	r1,r1,(_disksize)&0xffff
  441  00001598  8c210000	lw	r1,(r1)
  442  0000159c  afa10008	sw	8(r29),r1
  443  000015a0  0c0000d8	jal	_Printf
  444  000015a4  54000000	nop; not filled.
  445  000015a8  23bd0010	addi	r29,r29,#16
  446  000015ac  0c001000	jal	_exit
  447  000015b0  54000000	nop
  448  000015b4          	.endproc _main
  449  000015b4          	.data
  450  0000312e          	.align 2
  451  00003130          	LC9_LF0:
  452  00003130  4661696c	.ascii "Failed to write block onto disk\n\000"
  452  00003134  65642074	
  452  00003138  6f207772	
  452  0000313c  69746520	
  452  00003140  626c6f63	
  452  00003144  6b206f6e	
  452  00003148  746f2064	
  452  0000314c  69736b0a	
  452  00003150  00      	
  453  00003151          	.text
  454  000015b4          	.align 2
  455  000015b4          	.proc _FdiskWriteBlock
  456  000015b4          	.global _FdiskWriteBlock
  457  000015b4          	_FdiskWriteBlock:
  458                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 1 regs to save.
  459  000015b4  afbefffc	sw	-4(r29),r30; push fp
  460  000015b8  001df020	add	r30,r0,r29; fp = sp
  461  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  462  000015c0  2fbd0010	subui	r29,r29,#16; alloc local storage
  463  000015c4  afa20000	sw	0(r29),r2
  464  000015c8  8fc10004	lw	r1,4(r30)
  465  000015cc  23bdfff8	addi	r29,r29,#-8
  466  000015d0  8fc20000	lw	r2,(r30)
  467  000015d4  afa20000	sw	(r29),r2
  468  000015d8  afa10004	sw	4(r29),r1
  469  000015dc  0c0001a4	jal	_disk_write_block
  470  000015e0  54000000	nop; not filled.
  471  000015e4  23bd0008	addi	r29,r29,#8
  472  000015e8  6021ffff	seqi	r1,r1,#-1
  473  000015ec  10200028	beqz	r1,L46_LF0
  474  000015f0  54000000	nop; not filled.
  475  000015f4  23bdfff8	addi	r29,r29,#-8
  476  000015f8  3c020000	lhi	r2,((LC9_LF0)>>16)&0xffff
  477  000015fc  24423130	addui	r2,r2,(LC9_LF0)&0xffff
  478  00001600  afa20000	sw	(r29),r2
  479  00001604  0c000074	jal	_Printf
  480  00001608  54000000	nop; not filled.
  481  0000160c  0c000204	jal	_Exit
  482  00001610  54000000	nop; not filled.
  483  00001614  23bd0008	addi	r29,r29,#8
  484  00001618          	L46_LF0:
  485  00001618  20010001	addi	r1,r0,#1
  486  0000161c  8fa20000	lw	r2,0(r29)
  487  00001620  8fdffff8	lw	r31,-8(r30)
  488  00001624  001ee820	add	r29,r0,r30
  489  00001628  8fdefffc	lw	r30,-4(r30)
  490  0000162c  4be00000	jr	r31
  491  00001630  54000000	nop
  492  00001634          	.endproc _FdiskWriteBlock
  493  00001634          	.data
  494  00003151          	.align 2
  495  00003154          	.global _sb
  496  00003154          	_sb:
  497  00003154          	.space 28
  498  00003170          	.align 2
  499  00003170          	.global _inodes
  500  00003170          	_inodes:
  501  00003170          	.space 18432
  502  00007970          	.align 2
  503  00007970          	.global _fbv
  504  00007970          	_fbv:
  505  00007970          	.space 2048
  506                      ;;;
  507                      ;;; Stub functions for DLX traps.
  508                      ;;;
  509                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  510                      ;;;
  511                      ;;; The traps such as Open and Close
  512                      ;;; (note the capital letters) are for use by user programs.  The traps
  513                      ;;; with names such as open and close (lower case) are for use by the OS.
  514                      ;;;
  516  00008170          	.text
  517  00001634          	.align 2
  519                      ;;; The following are the traps to be used by user-level programs
  520                      ;;;
  522  00001634          	.align 2
  523  00001634          	.proc _Open
  524  00001634          	.global _Open
  525  00001634          	_Open:
  526                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  527                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  528                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  529  00001634  44000213	trap	#0x213
  530  00001638  4be00000	jr	r31
  531  0000163c  54000000	nop
  532  00001640          	.endproc _Open
  534  00001640          	.proc _Close
  535  00001640          	.global _Close
  536  00001640          	_Close:
  537  00001640  44000214	trap	#0x214
  538  00001644  4be00000	jr	r31
  539  00001648  54000000	nop
  540  0000164c          	.endproc _Close
  542  0000164c          	.proc _Read
  543  0000164c          	.global _Read
  544  0000164c          	_Read:
  545  0000164c  44000210	trap	#0x210
  546  00001650  4be00000	jr	r31
  547  00001654  54000000	nop
  548  00001658          	.endproc _Read
  550  00001658          	.proc _Write
  551  00001658          	.global _Write
  552  00001658          	_Write:
  553  00001658  44000211	trap	#0x211
  554  0000165c  4be00000	jr	r31
  555  00001660  54000000	nop
  556  00001664          	.endproc _Write
  558  00001664          	.proc _Lseek
  559  00001664          	.global _Lseek
  560  00001664          	_Lseek:
  561  00001664  44000212	trap	#0x212
  562  00001668  4be00000	jr	r31
  563  0000166c  54000000	nop
  564  00001670          	.endproc _Lseek
  566  00001670          	.proc _Putchar
  567  00001670          	.global _Putchar
  568  00001670          	_Putchar:
  569  00001670  44000280	trap	#0x280
  570  00001674  4be00000	jr	r31
  571  00001678  54000000	nop
  572  0000167c          	.endproc _Putchar
  574  0000167c          	.proc _Printf
  575  0000167c          	.global _Printf
  576  0000167c          	_Printf:
  577  0000167c  44000201	trap	#0x201
  578  00001680  4be00000	jr	r31
  579  00001684  54000000	nop
  580  00001688          	.endproc _Printf
  582  00001688          	.proc _getpid
  583  00001688          	.global _getpid
  584  00001688          	_getpid:
  585  00001688  44000431	trap	#0x431
  586  0000168c  4be00000	jr	r31
  587  00001690  54000000	nop
  588  00001694          	.endproc _getpid
  590  00001694          	.proc _process_create
  591  00001694          	.global _process_create
  592  00001694          	_process_create:
  593  00001694  44000432	trap	#0x432
  594  00001698  4be00000	jr	r31
  595  0000169c  54000000	nop
  596  000016a0          	.endproc _process_create
  598  000016a0          	.proc _shmget
  599  000016a0          	.global _shmget
  600  000016a0          	_shmget:
  601  000016a0  44000440	trap	#0x440
  602  000016a4  4be00000	jr	r31
  603  000016a8  54000000	nop
  604  000016ac          	.endproc _shmget
  606  000016ac          	.proc _shmat
  607  000016ac          	.global _shmat
  608  000016ac          	_shmat:
  609  000016ac  44000441	trap	#0x441
  610  000016b0  4be00000	jr	r31
  611  000016b4  54000000	nop
  612  000016b8          	.endproc _shmat
  614  000016b8          	.proc _sem_create
  615  000016b8          	.global _sem_create
  616  000016b8          	_sem_create:
  617  000016b8  44000450	trap	#0x450
  618  000016bc  4be00000	jr	r31
  619  000016c0  54000000	nop
  620  000016c4          	.endproc _sem_create
  622  000016c4          	.proc _sem_wait
  623  000016c4          	.global _sem_wait
  624  000016c4          	_sem_wait:
  625  000016c4  44000451	trap	#0x451
  626  000016c8  4be00000	jr	r31
  627  000016cc  54000000	nop
  628  000016d0          	.endproc _sem_wait
  630  000016d0          	.proc _sem_signal
  631  000016d0          	.global _sem_signal
  632  000016d0          	_sem_signal:
  633  000016d0  44000452	trap	#0x452
  634  000016d4  4be00000	jr	r31
  635  000016d8  54000000	nop
  636  000016dc          	.endproc _sem_signal
  638  000016dc          	.proc _lock_create
  639  000016dc          	.global _lock_create
  640  000016dc          	_lock_create:
  641  000016dc  44000453	trap	#0x453
  642  000016e0  4be00000	jr	r31
  643  000016e4  54000000	nop
  644  000016e8          	.endproc _lock_create
  646  000016e8          	.proc _lock_acquire
  647  000016e8          	.global _lock_acquire
  648  000016e8          	_lock_acquire:
  649  000016e8  44000454	trap	#0x454
  650  000016ec  4be00000	jr	r31
  651  000016f0  54000000	nop
  652  000016f4          	.endproc _lock_acquire
  654  000016f4          	.proc _lock_release
  655  000016f4          	.global _lock_release
  656  000016f4          	_lock_release:
  657  000016f4  44000455	trap	#0x455
  658  000016f8  4be00000	jr	r31
  659  000016fc  54000000	nop
  660  00001700          	.endproc _lock_release
  662  00001700          	.proc _cond_create
  663  00001700          	.global _cond_create
  664  00001700          	_cond_create:
  665  00001700  44000456	trap	#0x456
  666  00001704  4be00000	jr	r31
  667  00001708  54000000	nop
  668  0000170c          	.endproc _cond_create
  670  0000170c          	.proc _cond_wait
  671  0000170c          	.global _cond_wait
  672  0000170c          	_cond_wait:
  673  0000170c  44000457	trap	#0x457
  674  00001710  4be00000	jr	r31
  675  00001714  54000000	nop
  676  00001718          	.endproc _cond_wait
  678  00001718          	.proc _cond_signal
  679  00001718          	.global _cond_signal
  680  00001718          	_cond_signal:
  681  00001718  44000458	trap	#0x458
  682  0000171c  4be00000	jr	r31
  683  00001720  54000000	nop
  684  00001724          	.endproc _cond_signal
  686  00001724          	.proc _cond_broadcast
  687  00001724          	.global _cond_broadcast
  688  00001724          	_cond_broadcast:
  689  00001724  44000459	trap	#0x459
  690  00001728  4be00000	jr	r31
  691  0000172c  54000000	nop
  692  00001730          	.endproc _cond_broadcast
  694  00001730          	.proc _mbox_create
  695  00001730          	.global _mbox_create
  696  00001730          	_mbox_create:
  697  00001730  44000460	trap	#0x460
  698  00001734  4be00000	jr	r31
  699  00001738  54000000	nop
  700  0000173c          	.endproc _mbox_create
  702  0000173c          	.proc _mbox_open
  703  0000173c          	.global _mbox_open
  704  0000173c          	_mbox_open:
  705  0000173c  44000461	trap	#0x461
  706  00001740  4be00000	jr	r31
  707  00001744  54000000	nop
  708  00001748          	.endproc _mbox_open
  710  00001748          	.proc _mbox_close
  711  00001748          	.global _mbox_close
  712  00001748          	_mbox_close:
  713  00001748  44000462	trap	#0x462
  714  0000174c  4be00000	jr	r31
  715  00001750  54000000	nop
  716  00001754          	.endproc _mbox_close
  718  00001754          	.proc _mbox_send
  719  00001754          	.global _mbox_send
  720  00001754          	_mbox_send:
  721  00001754  44000463	trap	#0x463
  722  00001758  4be00000	jr	r31
  723  0000175c  54000000	nop
  724  00001760          	.endproc _mbox_send
  726  00001760          	.proc _mbox_recv
  727  00001760          	.global _mbox_recv
  728  00001760          	_mbox_recv:
  729  00001760  44000464	trap	#0x464
  730  00001764  4be00000	jr	r31
  731  00001768  54000000	nop
  732  0000176c          	.endproc _mbox_recv
  734  0000176c          	.proc _sleep
  735  0000176c          	.global _sleep
  736  0000176c          	_sleep:
  737  0000176c  44000465	trap	#0x465
  738  00001770  4be00000	jr	r31
  739  00001774  54000000	nop
  740  00001778          	.endproc _sleep
  742  00001778          	.proc _yield
  743  00001778          	.global _yield
  744  00001778          	_yield:
  745  00001778  44000466	trap	#0x466
  746  0000177c  4be00000	jr	r31
  747  00001780  54000000	nop
  748  00001784          	.endproc _yield
  750  00001784          	.proc _disk_write_block
  751  00001784          	.global _disk_write_block
  752  00001784          	_disk_write_block:
  753  00001784  44000467	trap	#0x467
  754  00001788  4be00000	jr	r31
  755  0000178c  54000000	nop
  756  00001790          	.endproc _disk_write_block
  758  00001790          	.proc _disk_size
  759  00001790          	.global _disk_size
  760  00001790          	_disk_size:
  761  00001790  44000468	trap	#0x468
  762  00001794  4be00000	jr	r31
  763  00001798  54000000	nop
  764  0000179c          	.endproc _disk_size
  766  0000179c          	.proc _disk_blocksize
  767  0000179c          	.global _disk_blocksize
  768  0000179c          	_disk_blocksize:
  769  0000179c  44000469	trap	#0x469
  770  000017a0  4be00000	jr	r31
  771  000017a4  54000000	nop
  772  000017a8          	.endproc _disk_blocksize
  774  000017a8          	.proc _disk_create
  775  000017a8          	.global _disk_create
  776  000017a8          	_disk_create:
  777  000017a8  44000470	trap	#0x470
  778  000017ac  4be00000	jr	r31
  779  000017b0  54000000	nop
  780  000017b4          	.endproc _disk_create
  782  000017b4          	.proc _dfs_invalidate
  783  000017b4          	.global _dfs_invalidate
  784  000017b4          	_dfs_invalidate:
  785  000017b4  44000471	trap	#0x471
  786  000017b8  4be00000	jr	r31
  787  000017bc  54000000	nop
  788  000017c0          	.endproc _dfs_invalidate
  790  000017c0          	.proc _file_open
  791  000017c0          	.global _file_open
  792  000017c0          	_file_open:
  793  000017c0  44000472	trap	#0x472
  794  000017c4  4be00000	jr	r31
  795  000017c8  54000000	nop
  796  000017cc          	.endproc _file_open
  798  000017cc          	.proc _file_close
  799  000017cc          	.global _file_close
  800  000017cc          	_file_close:
  801  000017cc  44000473	trap	#0x473
  802  000017d0  4be00000	jr	r31
  803  000017d4  54000000	nop
  804  000017d8          	.endproc _file_close
  806  000017d8          	.proc _file_delete
  807  000017d8          	.global _file_delete
  808  000017d8          	_file_delete:
  809  000017d8  44000474	trap	#0x474
  810  000017dc  4be00000	jr	r31
  811  000017e0  54000000	nop
  812  000017e4          	.endproc _file_delete
  814  000017e4          	.proc _file_read
  815  000017e4          	.global _file_read
  816  000017e4          	_file_read:
  817  000017e4  44000475	trap	#0x475
  818  000017e8  4be00000	jr	r31
  819  000017ec  54000000	nop
  820  000017f0          	.endproc _file_read
  822  000017f0          	.proc _file_write
  823  000017f0          	.global _file_write
  824  000017f0          	_file_write:
  825  000017f0  44000476	trap	#0x476
  826  000017f4  4be00000	jr	r31
  827  000017f8  54000000	nop
  828  000017fc          	.endproc _file_write
  830  000017fc          	.proc _file_seek
  831  000017fc          	.global _file_seek
  832  000017fc          	_file_seek:
  833  000017fc  44000477	trap	#0x477
  834  00001800  4be00000	jr	r31
  835  00001804  54000000	nop
  836  00001808          	.endproc _file_seek
  838  00001808          	.proc _run_os_tests
  839  00001808          	.global _run_os_tests
  840  00001808          	_run_os_tests:
  841  00001808  440004ff	trap	#0x4FF
  842  0000180c  4be00000	jr	r31
  843  00001810  54000000	nop
  844  00001814          	.endproc _run_os_tests
  847  00001814          	.proc _Exit
  848  00001814          	.global _Exit
  849  00001814          	_Exit:
  850  00001814  44000500	trap	#0x500
  851  00001818  4be00000	jr	r31
  852  0000181c  54000000	nop
  853  00001820          	.endproc _Exit
  854                      ; Compiled by GCC
  856  00001820          	.align 2
  857  00001820          	.proc _isspace
  858  00001820          	.global _isspace
  859  00001820          	_isspace:
  860                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  861  00001820  afbefffc	sw	-4(r29),r30; push fp
  862  00001824  001df020	add	r30,r0,r29; fp = sp
  863  00001828  afbffff8	sw	-8(r29),r31; push ret addr
  864  0000182c  2fbd0018	subui	r29,r29,#24; alloc local storage
  865  00001830  afa20000	sw	0(r29),r2
  866  00001834  afa30004	sw	4(r29),r3
  867  00001838  afa40008	sw	8(r29),r4
  868  0000183c  83c20003	lb	r2,3(r30)
  869  00001840  20010000	addi	r1,r0,#0
  870  00001844  304300ff	andi	r3,r2,#0x00ff
  871  00001848  60640020	seqi	r4,r3,#32
  872  0000184c  1480002c	bnez	r4,L3_LF2
  873  00001850  54000000	nop; delay slot nop
  874  00001854  304300ff	andi	r3,r2,#0x00ff
  875  00001858  60640009	seqi	r4,r3,#9
  876  0000185c  1480001c	bnez	r4,L3_LF2
  877  00001860  54000000	nop; delay slot nop
  878  00001864  304300ff	andi	r3,r2,#0x00ff
  879  00001868  6064000a	seqi	r4,r3,#10
  880  0000186c  1480000c	bnez	r4,L3_LF2
  881  00001870  54000000	nop; delay slot nop
  882  00001874  08000008	j	L2_LF2
  883  00001878  54000000	nop; delay slot nop
  884  0000187c          	L3_LF2:
  885  0000187c  20010001	addi	r1,r0,#1
  886  00001880          	L2_LF2:
  887  00001880  08000004	j	L1_LF2
  888  00001884  54000000	nop; delay slot nop
  889  00001888          	L1_LF2:
  890  00001888  8fa20000	lw	r2,0(r29)
  891  0000188c  8fa30004	lw	r3,4(r29)
  892  00001890  8fa40008	lw	r4,8(r29)
  893  00001894  8fdffff8	lw	r31,-8(r30)
  894  00001898  001ee820	add	r29,r0,r30
  895  0000189c  8fdefffc	lw	r30,-4(r30)
  896  000018a0  4be00000	jr	r31
  897  000018a4  54000000	nop
  898  000018a8          	.endproc _isspace
  899  000018a8          	.align 2
  900  000018a8          	.proc _isxdigit
  901  000018a8          	.global _isxdigit
  902  000018a8          	_isxdigit:
  903                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  904  000018a8  afbefffc	sw	-4(r29),r30; push fp
  905  000018ac  001df020	add	r30,r0,r29; fp = sp
  906  000018b0  afbffff8	sw	-8(r29),r31; push ret addr
  907  000018b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  908  000018b8  afa20000	sw	0(r29),r2
  909  000018bc  afa30004	sw	4(r29),r3
  910  000018c0  afa40008	sw	8(r29),r4
  911  000018c4  83c20003	lb	r2,3(r30)
  912  000018c8  20010000	addi	r1,r0,#0
  913  000018cc  304300ff	andi	r3,r2,#0x00ff
  914  000018d0  6c64002f	sgtui	r4,r3,#47
  915  000018d4  1080001c	beqz	r4,L7_LF2
  916  000018d8  54000000	nop; delay slot nop
  917  000018dc  304300ff	andi	r3,r2,#0x00ff
  918  000018e0  70640039	sleui	r4,r3,#57
  919  000018e4  1480005c	bnez	r4,L6_LF2
  920  000018e8  54000000	nop; delay slot nop
  921  000018ec  08000004	j	L7_LF2
  922  000018f0  54000000	nop; delay slot nop
  923  000018f4          	L7_LF2:
  924  000018f4  304300ff	andi	r3,r2,#0x00ff
  925  000018f8  6c640060	sgtui	r4,r3,#96
  926  000018fc  1080001c	beqz	r4,L8_LF2
  927  00001900  54000000	nop; delay slot nop
  928  00001904  304300ff	andi	r3,r2,#0x00ff
  929  00001908  70640066	sleui	r4,r3,#102
  930  0000190c  14800034	bnez	r4,L6_LF2
  931  00001910  54000000	nop; delay slot nop
  932  00001914  08000004	j	L8_LF2
  933  00001918  54000000	nop; delay slot nop
  934  0000191c          	L8_LF2:
  935  0000191c  304300ff	andi	r3,r2,#0x00ff
  936  00001920  6c640040	sgtui	r4,r3,#64
  937  00001924  10800020	beqz	r4,L5_LF2
  938  00001928  54000000	nop; delay slot nop
  939  0000192c  304300ff	andi	r3,r2,#0x00ff
  940  00001930  70640041	sleui	r4,r3,#65
  941  00001934  1480000c	bnez	r4,L6_LF2
  942  00001938  54000000	nop; delay slot nop
  943  0000193c  08000008	j	L5_LF2
  944  00001940  54000000	nop; delay slot nop
  945  00001944          	L6_LF2:
  946  00001944  20010001	addi	r1,r0,#1
  947  00001948          	L5_LF2:
  948  00001948  08000004	j	L4_LF2
  949  0000194c  54000000	nop; delay slot nop
  950  00001950          	L4_LF2:
  951  00001950  8fa20000	lw	r2,0(r29)
  952  00001954  8fa30004	lw	r3,4(r29)
  953  00001958  8fa40008	lw	r4,8(r29)
  954  0000195c  8fdffff8	lw	r31,-8(r30)
  955  00001960  001ee820	add	r29,r0,r30
  956  00001964  8fdefffc	lw	r30,-4(r30)
  957  00001968  4be00000	jr	r31
  958  0000196c  54000000	nop
  959  00001970          	.endproc _isxdigit
  960  00001970          	.align 2
  961  00001970          	.proc _dstrcpy
  962  00001970          	.global _dstrcpy
  963  00001970          	_dstrcpy:
  964                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  965  00001970  afbefffc	sw	-4(r29),r30; push fp
  966  00001974  001df020	add	r30,r0,r29; fp = sp
  967  00001978  afbffff8	sw	-8(r29),r31; push ret addr
  968  0000197c  2fbd0018	subui	r29,r29,#24; alloc local storage
  969  00001980  afa20000	sw	0(r29),r2
  970  00001984  afa30004	sw	4(r29),r3
  971  00001988  8fc10000	lw	r1,(r30)
  972  0000198c  afc1fff4	sw	-12(r30),r1
  973  00001990          	L10_LF2:
  974  00001990  8fc10000	lw	r1,(r30)
  975  00001994  20220001	addi	r2,r1,#1
  976  00001998  afc20000	sw	(r30),r2
  977  0000199c  8fc20004	lw	r2,4(r30)
  978  000019a0  20430001	addi	r3,r2,#1
  979  000019a4  afc30004	sw	4(r30),r3
  980  000019a8  80420000	lb	r2,(r2)
  981  000019ac  a0220000	sb	(r1),r2
  982  000019b0  a3c2fff3	sb	-13(r30),r2
  983  000019b4          	L12_LF2:
  984  000019b4  93c1fff3	lbu	r1,-13(r30)
  985  000019b8  64220000	snei	r2,r1,#0
  986  000019bc  1440000c	bnez	r2,L13_LF2
  987  000019c0  54000000	nop; delay slot nop
  988  000019c4  0800000c	j	L11_LF2
  989  000019c8  54000000	nop; delay slot nop
  990  000019cc          	L13_LF2:
  991  000019cc  0bffffc0	j	L10_LF2
  992  000019d0  54000000	nop; delay slot nop
  993  000019d4          	L11_LF2:
  994  000019d4  8fc1fff4	lw	r1,-12(r30)
  995  000019d8  08000004	j	L9_LF2
  996  000019dc  54000000	nop; delay slot nop
  997  000019e0          	L9_LF2:
  998  000019e0  8fa20000	lw	r2,0(r29)
  999  000019e4  8fa30004	lw	r3,4(r29)
 1000  000019e8  8fdffff8	lw	r31,-8(r30)
 1001  000019ec  001ee820	add	r29,r0,r30
 1002  000019f0  8fdefffc	lw	r30,-4(r30)
 1003  000019f4  4be00000	jr	r31
 1004  000019f8  54000000	nop
 1005  000019fc          	.endproc _dstrcpy
 1006  000019fc          	.align 2
 1007  000019fc          	.proc _dstrncpy
 1008  000019fc          	.global _dstrncpy
 1009  000019fc          	_dstrncpy:
 1010                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1011  000019fc  afbefffc	sw	-4(r29),r30; push fp
 1012  00001a00  001df020	add	r30,r0,r29; fp = sp
 1013  00001a04  afbffff8	sw	-8(r29),r31; push ret addr
 1014  00001a08  2fbd0018	subui	r29,r29,#24; alloc local storage
 1015  00001a0c  afa20000	sw	0(r29),r2
 1016  00001a10  afa30004	sw	4(r29),r3
 1017  00001a14  8fc10000	lw	r1,(r30)
 1018  00001a18  afc1fff4	sw	-12(r30),r1
 1019  00001a1c          	L15_LF2:
 1020  00001a1c  8fc10008	lw	r1,8(r30)
 1021  00001a20  2022ffff	addi	r2,r1,#-1
 1022  00001a24  afc20008	sw	8(r30),r2
 1023  00001a28  70210000	slei	r1,r1,#0
 1024  00001a2c  1020000c	beqz	r1,L18_LF2
 1025  00001a30  54000000	nop; delay slot nop
 1026  00001a34  08000048	j	L16_LF2
 1027  00001a38  54000000	nop; delay slot nop
 1028  00001a3c          	L18_LF2:
 1029  00001a3c  8fc10000	lw	r1,(r30)
 1030  00001a40  20220001	addi	r2,r1,#1
 1031  00001a44  afc20000	sw	(r30),r2
 1032  00001a48  8fc20004	lw	r2,4(r30)
 1033  00001a4c  20430001	addi	r3,r2,#1
 1034  00001a50  afc30004	sw	4(r30),r3
 1035  00001a54  80420000	lb	r2,(r2)
 1036  00001a58  a0220000	sb	(r1),r2
 1037  00001a5c  a3c2fff3	sb	-13(r30),r2
 1038  00001a60          	L17_LF2:
 1039  00001a60  93c1fff3	lbu	r1,-13(r30)
 1040  00001a64  64220000	snei	r2,r1,#0
 1041  00001a68  1440000c	bnez	r2,L19_LF2
 1042  00001a6c  54000000	nop; delay slot nop
 1043  00001a70  0800000c	j	L16_LF2
 1044  00001a74  54000000	nop; delay slot nop
 1045  00001a78          	L19_LF2:
 1046  00001a78  0bffffa0	j	L15_LF2
 1047  00001a7c  54000000	nop; delay slot nop
 1048  00001a80          	L16_LF2:
 1049  00001a80  8fc1fff4	lw	r1,-12(r30)
 1050  00001a84  08000004	j	L14_LF2
 1051  00001a88  54000000	nop; delay slot nop
 1052  00001a8c          	L14_LF2:
 1053  00001a8c  8fa20000	lw	r2,0(r29)
 1054  00001a90  8fa30004	lw	r3,4(r29)
 1055  00001a94  8fdffff8	lw	r31,-8(r30)
 1056  00001a98  001ee820	add	r29,r0,r30
 1057  00001a9c  8fdefffc	lw	r30,-4(r30)
 1058  00001aa0  4be00000	jr	r31
 1059  00001aa4  54000000	nop
 1060  00001aa8          	.endproc _dstrncpy
 1061  00001aa8          	.align 2
 1062  00001aa8          	.proc _dstrcat
 1063  00001aa8          	.global _dstrcat
 1064  00001aa8          	_dstrcat:
 1065                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1066  00001aa8  afbefffc	sw	-4(r29),r30; push fp
 1067  00001aac  001df020	add	r30,r0,r29; fp = sp
 1068  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
 1069  00001ab4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1070  00001ab8  afa20000	sw	0(r29),r2
 1071  00001abc  8fc10000	lw	r1,(r30)
 1072  00001ac0  afc1fff4	sw	-12(r30),r1
 1073  00001ac4          	L21_LF2:
 1074  00001ac4  8fc10000	lw	r1,(r30)
 1075  00001ac8  90220000	lbu	r2,(r1)
 1076  00001acc  64410000	snei	r1,r2,#0
 1077  00001ad0  1420000c	bnez	r1,L23_LF2
 1078  00001ad4  54000000	nop; delay slot nop
 1079  00001ad8  0800001c	j	L22_LF2
 1080  00001adc  54000000	nop; delay slot nop
 1081  00001ae0          	L23_LF2:
 1082  00001ae0  8fc20000	lw	r2,(r30)
 1083  00001ae4  20410001	addi	r1,r2,#1
 1084  00001ae8  00011020	add	r2,r0,r1
 1085  00001aec  afc20000	sw	(r30),r2
 1086  00001af0  0bffffd0	j	L21_LF2
 1087  00001af4  54000000	nop; delay slot nop
 1088  00001af8          	L22_LF2:
 1089  00001af8  23bdfff8	addi	r29,r29,#-8
 1090  00001afc  001d0820	add	r1,r0,r29
 1091  00001b00  8fc20000	lw	r2,(r30)
 1092  00001b04  ac220000	sw	(r1),r2
 1093  00001b08  8fc20004	lw	r2,4(r30)
 1094  00001b0c  ac220004	sw	4(r1),r2
 1095  00001b10  0ffffe5c	jal	_dstrcpy
 1096  00001b14  54000000	nop; delay slot nop
 1097  00001b18  23bd0008	addi	r29,r29,#8
 1098  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1099  00001b20  08000004	j	L20_LF2
 1100  00001b24  54000000	nop; delay slot nop
 1101  00001b28          	L20_LF2:
 1102  00001b28  8fa20000	lw	r2,0(r29)
 1103  00001b2c  8fdffff8	lw	r31,-8(r30)
 1104  00001b30  001ee820	add	r29,r0,r30
 1105  00001b34  8fdefffc	lw	r30,-4(r30)
 1106  00001b38  4be00000	jr	r31
 1107  00001b3c  54000000	nop
 1108  00001b40          	.endproc _dstrcat
 1109  00001b40          	.align 2
 1110  00001b40          	.proc _dstrncmp
 1111  00001b40          	.global _dstrncmp
 1112  00001b40          	_dstrncmp:
 1113                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1114  00001b40  afbefffc	sw	-4(r29),r30; push fp
 1115  00001b44  001df020	add	r30,r0,r29; fp = sp
 1116  00001b48  afbffff8	sw	-8(r29),r31; push ret addr
 1117  00001b4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1118  00001b50  afa20000	sw	0(r29),r2
 1119  00001b54  afa30004	sw	4(r29),r3
 1120  00001b58  54000000	nop
 1121  00001b5c  20010000	addi	r1,r0,#0
 1122  00001b60  afc1fff4	sw	-12(r30),r1
 1123  00001b64          	L25_LF2:
 1124  00001b64  8fc1fff4	lw	r1,-12(r30)
 1125  00001b68  8fc20008	lw	r2,8(r30)
 1126  00001b6c  0022082a	slt	r1,r1,r2
 1127  00001b70  1420000c	bnez	r1,L28_LF2
 1128  00001b74  54000000	nop; delay slot nop
 1129  00001b78  08000088	j	L26_LF2
 1130  00001b7c  54000000	nop; delay slot nop
 1131  00001b80          	L28_LF2:
 1132  00001b80  8fc10004	lw	r1,4(r30)
 1133  00001b84  90220000	lbu	r2,(r1)
 1134  00001b88  64410000	snei	r1,r2,#0
 1135  00001b8c  14200018	bnez	r1,L29_LF2
 1136  00001b90  54000000	nop; delay slot nop
 1137  00001b94  20010000	addi	r1,r0,#0
 1138  00001b98  080000d8	j	L24_LF2
 1139  00001b9c  54000000	nop; delay slot nop
 1140  00001ba0  08000028	j	L30_LF2
 1141  00001ba4  54000000	nop; delay slot nop
 1142  00001ba8          	L29_LF2:
 1143  00001ba8  8fc10000	lw	r1,(r30)
 1144  00001bac  8fc20004	lw	r2,4(r30)
 1145  00001bb0  90210000	lbu	r1,(r1)
 1146  00001bb4  90420000	lbu	r2,(r2)
 1147  00001bb8  00220829	sne	r1,r1,r2
 1148  00001bbc  1020000c	beqz	r1,L30_LF2
 1149  00001bc0  54000000	nop; delay slot nop
 1150  00001bc4  0800003c	j	L26_LF2
 1151  00001bc8  54000000	nop; delay slot nop
 1152  00001bcc          	L31_LF2:
 1153  00001bcc          	L30_LF2:
 1154  00001bcc  8fc20000	lw	r2,(r30)
 1155  00001bd0  20410001	addi	r1,r2,#1
 1156  00001bd4  00011020	add	r2,r0,r1
 1157  00001bd8  afc20000	sw	(r30),r2
 1158  00001bdc  8fc20004	lw	r2,4(r30)
 1159  00001be0  20410001	addi	r1,r2,#1
 1160  00001be4  00011020	add	r2,r0,r1
 1161  00001be8  afc20004	sw	4(r30),r2
 1162  00001bec          	L27_LF2:
 1163  00001bec  8fc2fff4	lw	r2,-12(r30)
 1164  00001bf0  20410001	addi	r1,r2,#1
 1165  00001bf4  00011020	add	r2,r0,r1
 1166  00001bf8  afc2fff4	sw	-12(r30),r2
 1167  00001bfc  0bffff64	j	L25_LF2
 1168  00001c00  54000000	nop; delay slot nop
 1169  00001c04          	L26_LF2:
 1170  00001c04  8fc1fff4	lw	r1,-12(r30)
 1171  00001c08  8fc20008	lw	r2,8(r30)
 1172  00001c0c  00220828	seq	r1,r1,r2
 1173  00001c10  10200018	beqz	r1,L32_LF2
 1174  00001c14  54000000	nop; delay slot nop
 1175  00001c18  20010000	addi	r1,r0,#0
 1176  00001c1c  08000054	j	L24_LF2
 1177  00001c20  54000000	nop; delay slot nop
 1178  00001c24  0800004c	j	L33_LF2
 1179  00001c28  54000000	nop; delay slot nop
 1180  00001c2c          	L32_LF2:
 1181  00001c2c  8fc20000	lw	r2,(r30)
 1182  00001c30  90410000	lbu	r1,(r2)
 1183  00001c34  8fc20004	lw	r2,4(r30)
 1184  00001c38  90430000	lbu	r3,(r2)
 1185  00001c3c  00230822	sub	r1,r1,r3
 1186  00001c40  74220000	sgei	r2,r1,#0
 1187  00001c44  10400020	beqz	r2,L34_LF2
 1188  00001c48  54000000	nop; delay slot nop
 1189  00001c4c  8fc10000	lw	r1,(r30)
 1190  00001c50  8fc20004	lw	r2,4(r30)
 1191  00001c54  90210000	lbu	r1,(r1)
 1192  00001c58  90420000	lbu	r2,(r2)
 1193  00001c5c  00220829	sne	r1,r1,r2
 1194  00001c60  08000008	j	L35_LF2
 1195  00001c64  54000000	nop; delay slot nop
 1196  00001c68          	L34_LF2:
 1197  00001c68  2001ffff	addi	r1,r0,#-1
 1198  00001c6c          	L35_LF2:
 1199  00001c6c  08000004	j	L24_LF2
 1200  00001c70  54000000	nop; delay slot nop
 1201  00001c74          	L33_LF2:
 1202  00001c74          	L24_LF2:
 1203  00001c74  8fa20000	lw	r2,0(r29)
 1204  00001c78  8fa30004	lw	r3,4(r29)
 1205  00001c7c  8fdffff8	lw	r31,-8(r30)
 1206  00001c80  001ee820	add	r29,r0,r30
 1207  00001c84  8fdefffc	lw	r30,-4(r30)
 1208  00001c88  4be00000	jr	r31
 1209  00001c8c  54000000	nop
 1210  00001c90          	.endproc _dstrncmp
 1211  00001c90          	.align 2
 1212  00001c90          	.proc _dstrlen
 1213  00001c90          	.global _dstrlen
 1214  00001c90          	_dstrlen:
 1215                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1216  00001c90  afbefffc	sw	-4(r29),r30; push fp
 1217  00001c94  001df020	add	r30,r0,r29; fp = sp
 1218  00001c98  afbffff8	sw	-8(r29),r31; push ret addr
 1219  00001c9c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1220  00001ca0  afa20000	sw	0(r29),r2
 1221  00001ca4  20010000	addi	r1,r0,#0
 1222  00001ca8  afc1fff4	sw	-12(r30),r1
 1223  00001cac          	L37_LF2:
 1224  00001cac  8fc10000	lw	r1,(r30)
 1225  00001cb0  20220001	addi	r2,r1,#1
 1226  00001cb4  afc20000	sw	(r30),r2
 1227  00001cb8  90210000	lbu	r1,(r1)
 1228  00001cbc  64220000	snei	r2,r1,#0
 1229  00001cc0  1440000c	bnez	r2,L39_LF2
 1230  00001cc4  54000000	nop; delay slot nop
 1231  00001cc8  0800001c	j	L38_LF2
 1232  00001ccc  54000000	nop; delay slot nop
 1233  00001cd0          	L39_LF2:
 1234  00001cd0  8fc2fff4	lw	r2,-12(r30)
 1235  00001cd4  20410001	addi	r1,r2,#1
 1236  00001cd8  00011020	add	r2,r0,r1
 1237  00001cdc  afc2fff4	sw	-12(r30),r2
 1238  00001ce0  0bffffc8	j	L37_LF2
 1239  00001ce4  54000000	nop; delay slot nop
 1240  00001ce8          	L38_LF2:
 1241  00001ce8  8fc1fff4	lw	r1,-12(r30)
 1242  00001cec  08000004	j	L36_LF2
 1243  00001cf0  54000000	nop; delay slot nop
 1244  00001cf4          	L36_LF2:
 1245  00001cf4  8fa20000	lw	r2,0(r29)
 1246  00001cf8  8fdffff8	lw	r31,-8(r30)
 1247  00001cfc  001ee820	add	r29,r0,r30
 1248  00001d00  8fdefffc	lw	r30,-4(r30)
 1249  00001d04  4be00000	jr	r31
 1250  00001d08  54000000	nop
 1251  00001d0c          	.endproc _dstrlen
 1252  00001d0c          	.align 2
 1253  00001d0c          	.proc _dstrstr
 1254  00001d0c          	.global _dstrstr
 1255  00001d0c          	_dstrstr:
 1256                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1257  00001d0c  afbefffc	sw	-4(r29),r30; push fp
 1258  00001d10  001df020	add	r30,r0,r29; fp = sp
 1259  00001d14  afbffff8	sw	-8(r29),r31; push ret addr
 1260  00001d18  2fbd0018	subui	r29,r29,#24; alloc local storage
 1261  00001d1c  afa20000	sw	0(r29),r2
 1262  00001d20  23bdfff8	addi	r29,r29,#-8
 1263  00001d24  001d0820	add	r1,r0,r29
 1264  00001d28  8fc20004	lw	r2,4(r30)
 1265  00001d2c  ac220000	sw	(r1),r2
 1266  00001d30  0fffff5c	jal	_dstrlen
 1267  00001d34  54000000	nop; delay slot nop
 1268  00001d38  23bd0008	addi	r29,r29,#8
 1269  00001d3c  afc1fff4	sw	-12(r30),r1
 1270  00001d40          	L41_LF2:
 1271  00001d40  8fc10000	lw	r1,(r30)
 1272  00001d44  90220000	lbu	r2,(r1)
 1273  00001d48  64410000	snei	r1,r2,#0
 1274  00001d4c  1420000c	bnez	r1,L43_LF2
 1275  00001d50  54000000	nop; delay slot nop
 1276  00001d54  08000060	j	L42_LF2
 1277  00001d58  54000000	nop; delay slot nop
 1278  00001d5c          	L43_LF2:
 1279  00001d5c  23bdfff0	addi	r29,r29,#-16
 1280  00001d60  001d0820	add	r1,r0,r29
 1281  00001d64  8fc20000	lw	r2,(r30)
 1282  00001d68  ac220000	sw	(r1),r2
 1283  00001d6c  8fc20004	lw	r2,4(r30)
 1284  00001d70  ac220004	sw	4(r1),r2
 1285  00001d74  8fc2fff4	lw	r2,-12(r30)
 1286  00001d78  ac220008	sw	8(r1),r2
 1287  00001d7c  0ffffdc0	jal	_dstrncmp
 1288  00001d80  54000000	nop; delay slot nop
 1289  00001d84  23bd0010	addi	r29,r29,#16
 1290  00001d88  64220000	snei	r2,r1,#0
 1291  00001d8c  14400010	bnez	r2,L44_LF2
 1292  00001d90  54000000	nop; delay slot nop
 1293  00001d94  8fc10000	lw	r1,(r30)
 1294  00001d98  08000028	j	L40_LF2
 1295  00001d9c  54000000	nop; delay slot nop
 1296  00001da0          	L44_LF2:
 1297  00001da0  8fc20000	lw	r2,(r30)
 1298  00001da4  20410001	addi	r1,r2,#1
 1299  00001da8  00011020	add	r2,r0,r1
 1300  00001dac  afc20000	sw	(r30),r2
 1301  00001db0  0bffff8c	j	L41_LF2
 1302  00001db4  54000000	nop; delay slot nop
 1303  00001db8          	L42_LF2:
 1304  00001db8  20010000	addi	r1,r0,#0
 1305  00001dbc  08000004	j	L40_LF2
 1306  00001dc0  54000000	nop; delay slot nop
 1307  00001dc4          	L40_LF2:
 1308  00001dc4  8fa20000	lw	r2,0(r29)
 1309  00001dc8  8fdffff8	lw	r31,-8(r30)
 1310  00001dcc  001ee820	add	r29,r0,r30
 1311  00001dd0  8fdefffc	lw	r30,-4(r30)
 1312  00001dd4  4be00000	jr	r31
 1313  00001dd8  54000000	nop
 1314  00001ddc          	.endproc _dstrstr
 1315  00001ddc          	.align 2
 1316  00001ddc          	.proc _dmindex
 1317  00001ddc          	.global _dmindex
 1318  00001ddc          	_dmindex:
 1319                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1320  00001ddc  afbefffc	sw	-4(r29),r30; push fp
 1321  00001de0  001df020	add	r30,r0,r29; fp = sp
 1322  00001de4  afbffff8	sw	-8(r29),r31; push ret addr
 1323  00001de8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1324  00001dec  afa20000	sw	0(r29),r2
 1325  00001df0  54000000	nop
 1326  00001df4          	L46_LF2:
 1327  00001df4  8fc10000	lw	r1,(r30)
 1328  00001df8  90220000	lbu	r2,(r1)
 1329  00001dfc  64410000	snei	r1,r2,#0
 1330  00001e00  1420000c	bnez	r1,L48_LF2
 1331  00001e04  54000000	nop; delay slot nop
 1332  00001e08  08000070	j	L47_LF2
 1333  00001e0c  54000000	nop; delay slot nop
 1334  00001e10          	L48_LF2:
 1335  00001e10  8fc10004	lw	r1,4(r30)
 1336  00001e14  afc1fff4	sw	-12(r30),r1
 1337  00001e18          	L49_LF2:
 1338  00001e18  8fc1fff4	lw	r1,-12(r30)
 1339  00001e1c  90220000	lbu	r2,(r1)
 1340  00001e20  64410000	snei	r1,r2,#0
 1341  00001e24  1420000c	bnez	r1,L52_LF2
 1342  00001e28  54000000	nop; delay slot nop
 1343  00001e2c  08000044	j	L50_LF2
 1344  00001e30  54000000	nop; delay slot nop
 1345  00001e34          	L52_LF2:
 1346  00001e34  8fc10000	lw	r1,(r30)
 1347  00001e38  8fc2fff4	lw	r2,-12(r30)
 1348  00001e3c  90210000	lbu	r1,(r1)
 1349  00001e40  90420000	lbu	r2,(r2)
 1350  00001e44  00220828	seq	r1,r1,r2
 1351  00001e48  10200010	beqz	r1,L51_LF2
 1352  00001e4c  54000000	nop; delay slot nop
 1353  00001e50  8fc10000	lw	r1,(r30)
 1354  00001e54  08000030	j	L45_LF2
 1355  00001e58  54000000	nop; delay slot nop
 1356  00001e5c          	L53_LF2:
 1357  00001e5c          	L51_LF2:
 1358  00001e5c  8fc2fff4	lw	r2,-12(r30)
 1359  00001e60  20410001	addi	r1,r2,#1
 1360  00001e64  00011020	add	r2,r0,r1
 1361  00001e68  afc2fff4	sw	-12(r30),r2
 1362  00001e6c  0bffffa8	j	L49_LF2
 1363  00001e70  54000000	nop; delay slot nop
 1364  00001e74          	L50_LF2:
 1365  00001e74  0bffff7c	j	L46_LF2
 1366  00001e78  54000000	nop; delay slot nop
 1367  00001e7c          	L47_LF2:
 1368  00001e7c  20010000	addi	r1,r0,#0
 1369  00001e80  08000004	j	L45_LF2
 1370  00001e84  54000000	nop; delay slot nop
 1371  00001e88          	L45_LF2:
 1372  00001e88  8fa20000	lw	r2,0(r29)
 1373  00001e8c  8fdffff8	lw	r31,-8(r30)
 1374  00001e90  001ee820	add	r29,r0,r30
 1375  00001e94  8fdefffc	lw	r30,-4(r30)
 1376  00001e98  4be00000	jr	r31
 1377  00001e9c  54000000	nop
 1378  00001ea0          	.endproc _dmindex
 1379  00001ea0          	.align 2
 1380  00001ea0          	.proc _dindex
 1381  00001ea0          	.global _dindex
 1382  00001ea0          	_dindex:
 1383                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1384  00001ea0  afbefffc	sw	-4(r29),r30; push fp
 1385  00001ea4  001df020	add	r30,r0,r29; fp = sp
 1386  00001ea8  afbffff8	sw	-8(r29),r31; push ret addr
 1387  00001eac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1388  00001eb0  afa20000	sw	0(r29),r2
 1389  00001eb4  54000000	nop
 1390  00001eb8          	L55_LF2:
 1391  00001eb8  8fc10000	lw	r1,(r30)
 1392  00001ebc  90220000	lbu	r2,(r1)
 1393  00001ec0  64410000	snei	r1,r2,#0
 1394  00001ec4  1420000c	bnez	r1,L57_LF2
 1395  00001ec8  54000000	nop; delay slot nop
 1396  00001ecc  08000040	j	L56_LF2
 1397  00001ed0  54000000	nop; delay slot nop
 1398  00001ed4          	L57_LF2:
 1399  00001ed4  8fc10000	lw	r1,(r30)
 1400  00001ed8  90220000	lbu	r2,(r1)
 1401  00001edc  8fc10004	lw	r1,4(r30)
 1402  00001ee0  00411028	seq	r2,r2,r1
 1403  00001ee4  10400010	beqz	r2,L58_LF2
 1404  00001ee8  54000000	nop; delay slot nop
 1405  00001eec  8fc10000	lw	r1,(r30)
 1406  00001ef0  08000028	j	L54_LF2
 1407  00001ef4  54000000	nop; delay slot nop
 1408  00001ef8          	L58_LF2:
 1409  00001ef8  8fc20000	lw	r2,(r30)
 1410  00001efc  20410001	addi	r1,r2,#1
 1411  00001f00  00011020	add	r2,r0,r1
 1412  00001f04  afc20000	sw	(r30),r2
 1413  00001f08  0bffffac	j	L55_LF2
 1414  00001f0c  54000000	nop; delay slot nop
 1415  00001f10          	L56_LF2:
 1416  00001f10  20010000	addi	r1,r0,#0
 1417  00001f14  08000004	j	L54_LF2
 1418  00001f18  54000000	nop; delay slot nop
 1419  00001f1c          	L54_LF2:
 1420  00001f1c  8fa20000	lw	r2,0(r29)
 1421  00001f20  8fdffff8	lw	r31,-8(r30)
 1422  00001f24  001ee820	add	r29,r0,r30
 1423  00001f28  8fdefffc	lw	r30,-4(r30)
 1424  00001f2c  4be00000	jr	r31
 1425  00001f30  54000000	nop
 1426  00001f34          	.endproc _dindex
 1427  00001f34          	.align 2
 1428  00001f34          	.proc _ditoa
 1429  00001f34          	.global _ditoa
 1430  00001f34          	_ditoa:
 1431                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1432  00001f34  afbefffc	sw	-4(r29),r30; push fp
 1433  00001f38  001df020	add	r30,r0,r29; fp = sp
 1434  00001f3c  afbffff8	sw	-8(r29),r31; push ret addr
 1435  00001f40  2fbd0018	subui	r29,r29,#24; alloc local storage
 1436  00001f44  afa20000	sw	0(r29),r2
 1437  00001f48  afa30004	sw	4(r29),r3
 1438  00001f4c  8fc10000	lw	r1,(r30)
 1439  00001f50  68220000	slti	r2,r1,#0
 1440  00001f54  1040002c	beqz	r2,L60_LF2
 1441  00001f58  54000000	nop; delay slot nop
 1442  00001f5c  8fc10004	lw	r1,4(r30)
 1443  00001f60  20220001	addi	r2,r1,#1
 1444  00001f64  afc20004	sw	4(r30),r2
 1445  00001f68  2002002d	addi	r2,r0,(#0x2d)&0xff
 1446  00001f6c  a0220000	sb	(r1),r2
 1447  00001f70  8fc10000	lw	r1,(r30)
 1448  00001f74  00011022	sub	r2,r0,r1
 1449  00001f78  afc20000	sw	(r30),r2
 1450  00001f7c  08000118	j	L61_LF2
 1451  00001f80  54000000	nop; delay slot nop
 1452  00001f84          	L60_LF2:
 1453  00001f84  8fc10000	lw	r1,(r30)
 1454  00001f88  64220000	snei	r2,r1,#0
 1455  00001f8c  14400020	bnez	r2,L62_LF2
 1456  00001f90  54000000	nop; delay slot nop
 1457  00001f94  8fc10004	lw	r1,4(r30)
 1458  00001f98  20220001	addi	r2,r1,#1
 1459  00001f9c  afc20004	sw	4(r30),r2
 1460  00001fa0  20020030	addi	r2,r0,(#0x30)&0xff
 1461  00001fa4  a0220000	sb	(r1),r2
 1462  00001fa8  080000ec	j	L61_LF2
 1463  00001fac  54000000	nop; delay slot nop
 1464  00001fb0          	L62_LF2:
 1465  00001fb0  20010001	addi	r1,r0,#1
 1466  00001fb4  afc1fff4	sw	-12(r30),r1
 1467  00001fb8          	L64_LF2:
 1468  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1469  00001fbc  8fc20000	lw	r2,(r30)
 1470  00001fc0  0022082c	sle	r1,r1,r2
 1471  00001fc4  1420000c	bnez	r1,L66_LF2
 1472  00001fc8  54000000	nop; delay slot nop
 1473  00001fcc  08000024	j	L65_LF2
 1474  00001fd0  54000000	nop; delay slot nop
 1475  00001fd4          	L67_LF2:
 1476  00001fd4          	L66_LF2:
 1477  00001fd4  8fc1fff4	lw	r1,-12(r30)
 1478  00001fd8  00011820	add	r3,r0,r1
 1479  00001fdc  50620002	slli	r2,r3,#0x2
 1480  00001fe0  00411020	add	r2,r2,r1
 1481  00001fe4  50410001	slli	r1,r2,#0x1
 1482  00001fe8  afc1fff4	sw	-12(r30),r1
 1483  00001fec  0bffffc8	j	L64_LF2
 1484  00001ff0  54000000	nop; delay slot nop
 1485  00001ff4          	L65_LF2:
 1486  00001ff4  54000000	nop
 1487  00001ff8          	L68_LF2:
 1488  00001ff8  8fc1fff4	lw	r1,-12(r30)
 1489  00001ffc  2002000a	addi	r2,r0,#10
 1490  00002000  00200035	movi2fp	f0,r1
 1491  00002004  00400835	movi2fp	f1,r2
 1492  00002008  0401000f	div	f0,f0,f1
 1493  0000200c  00000834	movfp2i	r1,f0
 1494  00002010  afc1fff4	sw	-12(r30),r1
 1495  00002014  8fc10004	lw	r1,4(r30)
 1496  00002018  20220001	addi	r2,r1,#1
 1497  0000201c  afc20004	sw	4(r30),r2
 1498  00002020  8fc20000	lw	r2,(r30)
 1499  00002024  8fc3fff4	lw	r3,-12(r30)
 1500  00002028  00400035	movi2fp	f0,r2
 1501  0000202c  00600835	movi2fp	f1,r3
 1502  00002030  0401000f	div	f0,f0,f1
 1503  00002034  00001034	movfp2i	r2,f0
 1504  00002038  00021820	add	r3,r0,r2
 1505  0000203c  20620030	addi	r2,r3,#48
 1506  00002040  a0220000	sb	(r1),r2
 1507  00002044  8fc10000	lw	r1,(r30)
 1508  00002048  8fc3fff4	lw	r3,-12(r30)
 1509  0000204c  00200035	movi2fp	f0,r1
 1510  00002050  00600835	movi2fp	f1,r3
 1511  00002054  0401000f	div	f0,f0,f1
 1512  00002058  00001034	movfp2i	r2,f0
 1513  0000205c  8fc3fff4	lw	r3,-12(r30)
 1514  00002060  00400035	movi2fp	f0,r2
 1515  00002064  00600835	movi2fp	f1,r3
 1516  00002068  0401000e	mult	f0,f0,f1
 1517  0000206c  00001034	movfp2i	r2,f0
 1518  00002070  00220822	sub	r1,r1,r2
 1519  00002074  afc10000	sw	(r30),r1
 1520  00002078          	L70_LF2:
 1521  00002078  8fc1fff4	lw	r1,-12(r30)
 1522  0000207c  6c220001	sgti	r2,r1,#1
 1523  00002080  1440000c	bnez	r2,L71_LF2
 1524  00002084  54000000	nop; delay slot nop
 1525  00002088  0800000c	j	L61_LF2
 1526  0000208c  54000000	nop; delay slot nop
 1527  00002090          	L71_LF2:
 1528  00002090  0bffff64	j	L68_LF2
 1529  00002094  54000000	nop; delay slot nop
 1530  00002098          	L69_LF2:
 1531  00002098          	L63_LF2:
 1532  00002098          	L61_LF2:
 1533  00002098  8fc10004	lw	r1,4(r30)
 1534  0000209c  20020000	addi	r2,r0,(#0x0)&0xff
 1535  000020a0  a0220000	sb	(r1),r2
 1536  000020a4          	L59_LF2:
 1537  000020a4  8fa20000	lw	r2,0(r29)
 1538  000020a8  8fa30004	lw	r3,4(r29)
 1539  000020ac  8fdffff8	lw	r31,-8(r30)
 1540  000020b0  001ee820	add	r29,r0,r30
 1541  000020b4  8fdefffc	lw	r30,-4(r30)
 1542  000020b8  4be00000	jr	r31
 1543  000020bc  54000000	nop
 1544  000020c0          	.endproc _ditoa
 1545  000020c0          	.align 2
 1546  000020c0          	.proc _dstrtol
 1547  000020c0          	.global _dstrtol
 1548  000020c0          	_dstrtol:
 1549                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1550  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1551  000020c4  001df020	add	r30,r0,r29; fp = sp
 1552  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1553  000020cc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1554  000020d0  afa20000	sw	0(r29),r2
 1555  000020d4  20010000	addi	r1,r0,#0
 1556  000020d8  afc1fff4	sw	-12(r30),r1
 1557  000020dc          	L73_LF2:
 1558  000020dc  8fc10000	lw	r1,(r30)
 1559  000020e0  90220000	lbu	r2,(r1)
 1560  000020e4  60410020	seqi	r1,r2,#32
 1561  000020e8  14200034	bnez	r1,L75_LF2
 1562  000020ec  54000000	nop; delay slot nop
 1563  000020f0  8fc10000	lw	r1,(r30)
 1564  000020f4  90220000	lbu	r2,(r1)
 1565  000020f8  60410009	seqi	r1,r2,#9
 1566  000020fc  14200020	bnez	r1,L75_LF2
 1567  00002100  54000000	nop; delay slot nop
 1568  00002104  8fc10000	lw	r1,(r30)
 1569  00002108  90220000	lbu	r2,(r1)
 1570  0000210c  6041000a	seqi	r1,r2,#10
 1571  00002110  1420000c	bnez	r1,L75_LF2
 1572  00002114  54000000	nop; delay slot nop
 1573  00002118  0800001c	j	L74_LF2
 1574  0000211c  54000000	nop; delay slot nop
 1575  00002120          	L75_LF2:
 1576  00002120  8fc20000	lw	r2,(r30)
 1577  00002124  20410001	addi	r1,r2,#1
 1578  00002128  00011020	add	r2,r0,r1
 1579  0000212c  afc20000	sw	(r30),r2
 1580  00002130  0bffffa8	j	L73_LF2
 1581  00002134  54000000	nop; delay slot nop
 1582  00002138          	L74_LF2:
 1583  00002138  8fc10004	lw	r1,4(r30)
 1584  0000213c  64220000	snei	r2,r1,#0
 1585  00002140  10400010	beqz	r2,L76_LF2
 1586  00002144  54000000	nop; delay slot nop
 1587  00002148  8fc10004	lw	r1,4(r30)
 1588  0000214c  8fc20000	lw	r2,(r30)
 1589  00002150  ac220000	sw	(r1),r2
 1590  00002154          	L76_LF2:
 1591  00002154  8fc10000	lw	r1,(r30)
 1592  00002158  90220000	lbu	r2,(r1)
 1593  0000215c  64410000	snei	r1,r2,#0
 1594  00002160  14200010	bnez	r1,L77_LF2
 1595  00002164  54000000	nop; delay slot nop
 1596  00002168  8fc1fff4	lw	r1,-12(r30)
 1597  0000216c  08000294	j	L72_LF2
 1598  00002170  54000000	nop; delay slot nop
 1599  00002174          	L77_LF2:
 1600  00002174  8fc10000	lw	r1,(r30)
 1601  00002178  90220000	lbu	r2,(r1)
 1602  0000217c  6041002d	seqi	r1,r2,#45
 1603  00002180  10200024	beqz	r1,L78_LF2
 1604  00002184  54000000	nop; delay slot nop
 1605  00002188  2001ffff	addi	r1,r0,#-1
 1606  0000218c  afc1ffec	sw	-20(r30),r1
 1607  00002190  8fc20000	lw	r2,(r30)
 1608  00002194  20410001	addi	r1,r2,#1
 1609  00002198  00011020	add	r2,r0,r1
 1610  0000219c  afc20000	sw	(r30),r2
 1611  000021a0  0800000c	j	L79_LF2
 1612  000021a4  54000000	nop; delay slot nop
 1613  000021a8          	L78_LF2:
 1614  000021a8  20010001	addi	r1,r0,#1
 1615  000021ac  afc1ffec	sw	-20(r30),r1
 1616  000021b0          	L79_LF2:
 1617  000021b0  8fc10008	lw	r1,8(r30)
 1618  000021b4  64220000	snei	r2,r1,#0
 1619  000021b8  14400090	bnez	r2,L80_LF2
 1620  000021bc  54000000	nop; delay slot nop
 1621  000021c0  8fc10000	lw	r1,(r30)
 1622  000021c4  90220000	lbu	r2,(r1)
 1623  000021c8  60410030	seqi	r1,r2,#48
 1624  000021cc  10200074	beqz	r1,L81_LF2
 1625  000021d0  54000000	nop; delay slot nop
 1626  000021d4  8fc20000	lw	r2,(r30)
 1627  000021d8  20410001	addi	r1,r2,#1
 1628  000021dc  00011020	add	r2,r0,r1
 1629  000021e0  afc20000	sw	(r30),r2
 1630  000021e4  8fc10000	lw	r1,(r30)
 1631  000021e8  90220000	lbu	r2,(r1)
 1632  000021ec  60410078	seqi	r1,r2,#120
 1633  000021f0  14200020	bnez	r1,L83_LF2
 1634  000021f4  54000000	nop; delay slot nop
 1635  000021f8  8fc10000	lw	r1,(r30)
 1636  000021fc  90220000	lbu	r2,(r1)
 1637  00002200  60410058	seqi	r1,r2,#88
 1638  00002204  1420000c	bnez	r1,L83_LF2
 1639  00002208  54000000	nop; delay slot nop
 1640  0000220c  08000024	j	L82_LF2
 1641  00002210  54000000	nop; delay slot nop
 1642  00002214          	L83_LF2:
 1643  00002214  20010010	addi	r1,r0,#16
 1644  00002218  afc10008	sw	8(r30),r1
 1645  0000221c  8fc20000	lw	r2,(r30)
 1646  00002220  20410001	addi	r1,r2,#1
 1647  00002224  00011020	add	r2,r0,r1
 1648  00002228  afc20000	sw	(r30),r2
 1649  0000222c  0800000c	j	L84_LF2
 1650  00002230  54000000	nop; delay slot nop
 1651  00002234          	L82_LF2:
 1652  00002234  20010008	addi	r1,r0,#8
 1653  00002238  afc10008	sw	8(r30),r1
 1654  0000223c          	L84_LF2:
 1655  0000223c  0800000c	j	L80_LF2
 1656  00002240  54000000	nop; delay slot nop
 1657  00002244          	L81_LF2:
 1658  00002244  2001000a	addi	r1,r0,#10
 1659  00002248  afc10008	sw	8(r30),r1
 1660  0000224c          	L85_LF2:
 1661  0000224c          	L80_LF2:
 1662  0000224c  8fc10008	lw	r1,8(r30)
 1663  00002250  70220000	slei	r2,r1,#0
 1664  00002254  1440001c	bnez	r2,L87_LF2
 1665  00002258  54000000	nop; delay slot nop
 1666  0000225c  8fc10008	lw	r1,8(r30)
 1667  00002260  6c220010	sgti	r2,r1,#16
 1668  00002264  1440000c	bnez	r2,L87_LF2
 1669  00002268  54000000	nop; delay slot nop
 1670  0000226c  08000010	j	L86_LF2
 1671  00002270  54000000	nop; delay slot nop
 1672  00002274          	L87_LF2:
 1673  00002274  8fc1fff4	lw	r1,-12(r30)
 1674  00002278  08000188	j	L72_LF2
 1675  0000227c  54000000	nop; delay slot nop
 1676  00002280          	L86_LF2:
 1677  00002280  54000000	nop
 1678  00002284          	L88_LF2:
 1679  00002284  8fc10000	lw	r1,(r30)
 1680  00002288  90220000	lbu	r2,(r1)
 1681  0000228c  6c41002f	sgtui	r1,r2,#47
 1682  00002290  10200030	beqz	r1,L91_LF2
 1683  00002294  54000000	nop; delay slot nop
 1684  00002298  8fc10000	lw	r1,(r30)
 1685  0000229c  90220000	lbu	r2,(r1)
 1686  000022a0  70410039	sleui	r1,r2,#57
 1687  000022a4  1020001c	beqz	r1,L91_LF2
 1688  000022a8  54000000	nop; delay slot nop
 1689  000022ac  8fc10000	lw	r1,(r30)
 1690  000022b0  90220000	lbu	r2,(r1)
 1691  000022b4  2041ffd0	addi	r1,r2,#-48
 1692  000022b8  afc1fff0	sw	-16(r30),r1
 1693  000022bc  0800008c	j	L92_LF2
 1694  000022c0  54000000	nop; delay slot nop
 1695  000022c4          	L91_LF2:
 1696  000022c4  8fc10000	lw	r1,(r30)
 1697  000022c8  90220000	lbu	r2,(r1)
 1698  000022cc  6c410060	sgtui	r1,r2,#96
 1699  000022d0  10200030	beqz	r1,L93_LF2
 1700  000022d4  54000000	nop; delay slot nop
 1701  000022d8  8fc10000	lw	r1,(r30)
 1702  000022dc  90220000	lbu	r2,(r1)
 1703  000022e0  7041007a	sleui	r1,r2,#122
 1704  000022e4  1020001c	beqz	r1,L93_LF2
 1705  000022e8  54000000	nop; delay slot nop
 1706  000022ec  8fc10000	lw	r1,(r30)
 1707  000022f0  90220000	lbu	r2,(r1)
 1708  000022f4  2041ffa9	addi	r1,r2,#-87
 1709  000022f8  afc1fff0	sw	-16(r30),r1
 1710  000022fc  0800004c	j	L92_LF2
 1711  00002300  54000000	nop; delay slot nop
 1712  00002304          	L93_LF2:
 1713  00002304  8fc10000	lw	r1,(r30)
 1714  00002308  90220000	lbu	r2,(r1)
 1715  0000230c  6c410040	sgtui	r1,r2,#64
 1716  00002310  10200030	beqz	r1,L95_LF2
 1717  00002314  54000000	nop; delay slot nop
 1718  00002318  8fc10000	lw	r1,(r30)
 1719  0000231c  90220000	lbu	r2,(r1)
 1720  00002320  7041005a	sleui	r1,r2,#90
 1721  00002324  1020001c	beqz	r1,L95_LF2
 1722  00002328  54000000	nop; delay slot nop
 1723  0000232c  8fc10000	lw	r1,(r30)
 1724  00002330  90220000	lbu	r2,(r1)
 1725  00002334  2041ffc9	addi	r1,r2,#-55
 1726  00002338  afc1fff0	sw	-16(r30),r1
 1727  0000233c  0800000c	j	L92_LF2
 1728  00002340  54000000	nop; delay slot nop
 1729  00002344          	L95_LF2:
 1730  00002344  200103e8	addi	r1,r0,#1000
 1731  00002348  afc1fff0	sw	-16(r30),r1
 1732  0000234c          	L96_LF2:
 1733  0000234c          	L94_LF2:
 1734  0000234c          	L92_LF2:
 1735  0000234c  8fc1fff0	lw	r1,-16(r30)
 1736  00002350  8fc20008	lw	r2,8(r30)
 1737  00002354  0022082a	slt	r1,r1,r2
 1738  00002358  10200040	beqz	r1,L90_LF2
 1739  0000235c  54000000	nop; delay slot nop
 1740  00002360  8fc1fff4	lw	r1,-12(r30)
 1741  00002364  8fc20008	lw	r2,8(r30)
 1742  00002368  00200035	movi2fp	f0,r1
 1743  0000236c  00400835	movi2fp	f1,r2
 1744  00002370  0401000e	mult	f0,f0,f1
 1745  00002374  00000834	movfp2i	r1,f0
 1746  00002378  afc1fff4	sw	-12(r30),r1
 1747  0000237c  8fc1fff4	lw	r1,-12(r30)
 1748  00002380  8fc2fff0	lw	r2,-16(r30)
 1749  00002384  00220820	add	r1,r1,r2
 1750  00002388  afc1fff4	sw	-12(r30),r1
 1751  0000238c  8fc20000	lw	r2,(r30)
 1752  00002390  20410001	addi	r1,r2,#1
 1753  00002394  00011020	add	r2,r0,r1
 1754  00002398  afc20000	sw	(r30),r2
 1755  0000239c          	L97_LF2:
 1756  0000239c          	L90_LF2:
 1757  0000239c  8fc1fff0	lw	r1,-16(r30)
 1758  000023a0  8fc20008	lw	r2,8(r30)
 1759  000023a4  0022082a	slt	r1,r1,r2
 1760  000023a8  1420000c	bnez	r1,L98_LF2
 1761  000023ac  54000000	nop; delay slot nop
 1762  000023b0  0800000c	j	L89_LF2
 1763  000023b4  54000000	nop; delay slot nop
 1764  000023b8          	L98_LF2:
 1765  000023b8  0bfffec8	j	L88_LF2
 1766  000023bc  54000000	nop; delay slot nop
 1767  000023c0          	L89_LF2:
 1768  000023c0  8fc10004	lw	r1,4(r30)
 1769  000023c4  64220000	snei	r2,r1,#0
 1770  000023c8  10400010	beqz	r2,L99_LF2
 1771  000023cc  54000000	nop; delay slot nop
 1772  000023d0  8fc10004	lw	r1,4(r30)
 1773  000023d4  8fc20000	lw	r2,(r30)
 1774  000023d8  ac220000	sw	(r1),r2
 1775  000023dc          	L99_LF2:
 1776  000023dc  8fc1fff4	lw	r1,-12(r30)
 1777  000023e0  8fc2ffec	lw	r2,-20(r30)
 1778  000023e4  00200035	movi2fp	f0,r1
 1779  000023e8  00400835	movi2fp	f1,r2
 1780  000023ec  0401000e	mult	f0,f0,f1
 1781  000023f0  00000834	movfp2i	r1,f0
 1782  000023f4  afc1fff4	sw	-12(r30),r1
 1783  000023f8  8fc1fff4	lw	r1,-12(r30)
 1784  000023fc  08000004	j	L72_LF2
 1785  00002400  54000000	nop; delay slot nop
 1786  00002404          	L72_LF2:
 1787  00002404  8fa20000	lw	r2,0(r29)
 1788  00002408  8fdffff8	lw	r31,-8(r30)
 1789  0000240c  001ee820	add	r29,r0,r30
 1790  00002410  8fdefffc	lw	r30,-4(r30)
 1791  00002414  4be00000	jr	r31
 1792  00002418  54000000	nop
 1793  0000241c          	.endproc _dstrtol
 1794  0000241c          	.align 2
 1795  0000241c          	.proc _bcopy
 1796  0000241c          	.global _bcopy
 1797  0000241c          	_bcopy:
 1798                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1799  0000241c  afbefffc	sw	-4(r29),r30; push fp
 1800  00002420  001df020	add	r30,r0,r29; fp = sp
 1801  00002424  afbffff8	sw	-8(r29),r31; push ret addr
 1802  00002428  2fbd0010	subui	r29,r29,#16; alloc local storage
 1803  0000242c  afa20000	sw	0(r29),r2
 1804  00002430  afa30004	sw	4(r29),r3
 1805  00002434  54000000	nop
 1806  00002438          	L101_LF2:
 1807  00002438  8fc10008	lw	r1,8(r30)
 1808  0000243c  2022ffff	addi	r2,r1,#-1
 1809  00002440  afc20008	sw	8(r30),r2
 1810  00002444  6c210000	sgti	r1,r1,#0
 1811  00002448  1420000c	bnez	r1,L103_LF2
 1812  0000244c  54000000	nop; delay slot nop
 1813  00002450  0800002c	j	L102_LF2
 1814  00002454  54000000	nop; delay slot nop
 1815  00002458          	L103_LF2:
 1816  00002458  8fc10004	lw	r1,4(r30)
 1817  0000245c  20220001	addi	r2,r1,#1
 1818  00002460  afc20004	sw	4(r30),r2
 1819  00002464  8fc20000	lw	r2,(r30)
 1820  00002468  20430001	addi	r3,r2,#1
 1821  0000246c  afc30000	sw	(r30),r3
 1822  00002470  80420000	lb	r2,(r2)
 1823  00002474  a0220000	sb	(r1),r2
 1824  00002478  0bffffbc	j	L101_LF2
 1825  0000247c  54000000	nop; delay slot nop
 1826  00002480          	L102_LF2:
 1827  00002480          	L100_LF2:
 1828  00002480  8fa20000	lw	r2,0(r29)
 1829  00002484  8fa30004	lw	r3,4(r29)
 1830  00002488  8fdffff8	lw	r31,-8(r30)
 1831  0000248c  001ee820	add	r29,r0,r30
 1832  00002490  8fdefffc	lw	r30,-4(r30)
 1833  00002494  4be00000	jr	r31
 1834  00002498  54000000	nop
 1835  0000249c          	.endproc _bcopy
 1836  0000249c          	.align 2
 1837  0000249c          	.proc _bzero
 1838  0000249c          	.global _bzero
 1839  0000249c          	_bzero:
 1840                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1841  0000249c  afbefffc	sw	-4(r29),r30; push fp
 1842  000024a0  001df020	add	r30,r0,r29; fp = sp
 1843  000024a4  afbffff8	sw	-8(r29),r31; push ret addr
 1844  000024a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1845  000024ac  afa20000	sw	0(r29),r2
 1846  000024b0  54000000	nop
 1847  000024b4          	L105_LF2:
 1848  000024b4  8fc10004	lw	r1,4(r30)
 1849  000024b8  2022ffff	addi	r2,r1,#-1
 1850  000024bc  afc20004	sw	4(r30),r2
 1851  000024c0  6c210000	sgti	r1,r1,#0
 1852  000024c4  1420000c	bnez	r1,L107_LF2
 1853  000024c8  54000000	nop; delay slot nop
 1854  000024cc  08000020	j	L106_LF2
 1855  000024d0  54000000	nop; delay slot nop
 1856  000024d4          	L107_LF2:
 1857  000024d4  8fc10000	lw	r1,(r30)
 1858  000024d8  20220001	addi	r2,r1,#1
 1859  000024dc  afc20000	sw	(r30),r2
 1860  000024e0  20020000	addi	r2,r0,(#0x0)&0xff
 1861  000024e4  a0220000	sb	(r1),r2
 1862  000024e8  0bffffc8	j	L105_LF2
 1863  000024ec  54000000	nop; delay slot nop
 1864  000024f0          	L106_LF2:
 1865  000024f0          	L104_LF2:
 1866  000024f0  8fa20000	lw	r2,0(r29)
 1867  000024f4  8fdffff8	lw	r31,-8(r30)
 1868  000024f8  001ee820	add	r29,r0,r30
 1869  000024fc  8fdefffc	lw	r30,-4(r30)
 1870  00002500  4be00000	jr	r31
 1871  00002504  54000000	nop
 1872  00002508          	.endproc _bzero
 1873  00002508          	.align 2
 1874  00002508          	.proc _min
 1875  00002508          	.global _min
 1876  00002508          	_min:
 1877                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1878  00002508  afbefffc	sw	-4(r29),r30; push fp
 1879  0000250c  001df020	add	r30,r0,r29; fp = sp
 1880  00002510  afbffff8	sw	-8(r29),r31; push ret addr
 1881  00002514  2fbd0010	subui	r29,r29,#16; alloc local storage
 1882  00002518  afa20000	sw	0(r29),r2
 1883  0000251c  afa30004	sw	4(r29),r3
 1884  00002520  8fc10000	lw	r1,(r30)
 1885  00002524  8fc20004	lw	r2,4(r30)
 1886  00002528  0022182c	sle	r3,r1,r2
 1887  0000252c  14600008	bnez	r3,L109_LF2
 1888  00002530  54000000	nop; delay slot nop
 1889  00002534  8fc10004	lw	r1,4(r30)
 1890  00002538          	L109_LF2:
 1891  00002538  08000004	j	L108_LF2
 1892  0000253c  54000000	nop; delay slot nop
 1893  00002540          	L108_LF2:
 1894  00002540  8fa20000	lw	r2,0(r29)
 1895  00002544  8fa30004	lw	r3,4(r29)
 1896  00002548  8fdffff8	lw	r31,-8(r30)
 1897  0000254c  001ee820	add	r29,r0,r30
 1898  00002550  8fdefffc	lw	r30,-4(r30)
 1899  00002554  4be00000	jr	r31
 1900  00002558  54000000	nop
 1901  0000255c          	.endproc _min
 1902  0000255c          	.align 2
 1903  0000255c          	.proc _max
 1904  0000255c          	.global _max
 1905  0000255c          	_max:
 1906                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1907  0000255c  afbefffc	sw	-4(r29),r30; push fp
 1908  00002560  001df020	add	r30,r0,r29; fp = sp
 1909  00002564  afbffff8	sw	-8(r29),r31; push ret addr
 1910  00002568  2fbd0010	subui	r29,r29,#16; alloc local storage
 1911  0000256c  afa20000	sw	0(r29),r2
 1912  00002570  afa30004	sw	4(r29),r3
 1913  00002574  8fc10000	lw	r1,(r30)
 1914  00002578  8fc20004	lw	r2,4(r30)
 1915  0000257c  0022182d	sge	r3,r1,r2
 1916  00002580  14600008	bnez	r3,L111_LF2
 1917  00002584  54000000	nop; delay slot nop
 1918  00002588  8fc10004	lw	r1,4(r30)
 1919  0000258c          	L111_LF2:
 1920  0000258c  08000004	j	L110_LF2
 1921  00002590  54000000	nop; delay slot nop
 1922  00002594          	L110_LF2:
 1923  00002594  8fa20000	lw	r2,0(r29)
 1924  00002598  8fa30004	lw	r3,4(r29)
 1925  0000259c  8fdffff8	lw	r31,-8(r30)
 1926  000025a0  001ee820	add	r29,r0,r30
 1927  000025a4  8fdefffc	lw	r30,-4(r30)
 1928  000025a8  4be00000	jr	r31
 1929  000025ac  54000000	nop
 1930  000025b0          	.endproc _max
 1931                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1932                      ;;;
 1933                      ;;; Most of the traps are called in files from libtraps.
 1936  000025b0          	.align 2
 1937  000025b0          	.proc _exit
 1938  000025b0          	.global _exit
 1939  000025b0          	_exit:
 1940  000025b0  44000300	trap	#0x300
 1941  000025b4  4be00000	jr	r31
 1942  000025b8  54000000	nop
 1943  000025bc          	.endproc _exit
 1945                      ; for the benefit of gcc.
 1946  000025bc          	.proc ___main
 1947  000025bc          	.global ___main
 1948  000025bc          	___main:
 1949  000025bc  4be00000	jr	r31
 1950  000025c0  54000000	nop
 1951  000025c4          	.endproc ___main
 1952  000025c4          	.text
 1953  000025c4          	.global _etext
 1954  000025c4          	_etext:
 1955  000025c4          	.align 3
 1956  000025c8          	.data
 1957  00008170          	.global _edata
 1958  00008170          	_edata:
