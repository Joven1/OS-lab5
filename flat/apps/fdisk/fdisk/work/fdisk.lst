 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20832
    4                      ; Text size: 5332
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  0a0a3d3d	.ascii "\n\n======FDISK START======\n\n\000"
   94  00003010  3d3d3d3d	
   94  00003014  46444953	
   94  00003018  4b205354	
   94  0000301c  4152543d	
   94  00003020  3d3d3d3d	
   94  00003024  3d0a0a00	
   95  00003028          	.align 2
   96  00003028          	LC1_LF0:
   97  00003028  4552524f	.ascii "ERROR: No Input\n\n\000"
   97  0000302c  523a204e	
   97  00003030  6f20496e	
   97  00003034  7075740a	
   97  00003038  0a00    	
   98  0000303a          	.align 2
   99  0000303c          	LC2_LF0:
  100  0000303c  4572726f	.ascii "Error: DFS Inode is not 96 bytes!\n\000"
  100  00003040  723a2044	
  100  00003044  46532049	
  100  00003048  6e6f6465	
  100  0000304c  20697320	
  100  00003050  6e6f7420	
  100  00003054  39362062	
  100  00003058  79746573	
  100  0000305c  210a00  	
  101  0000305f          	.align 2
  102  00003060          	LC3_LF0:
  103  00003060  53756363	.ascii "Success: DFS Inode is 96 bytes!\n\000"
  103  00003064  6573733a	
  103  00003068  20444653	
  103  0000306c  20496e6f	
  103  00003070  64652069	
  103  00003074  73203936	
  103  00003078  20627974	
  103  0000307c  6573210a	
  103  00003080  00      	
  104  00003081          	.align 2
  105  00003084          	LC4_LF0:
  106  00003084  54686520	.ascii "The size of the dfs_inode is %d\n\000"
  106  00003088  73697a65	
  106  0000308c  206f6620	
  106  00003090  74686520	
  106  00003094  6466735f	
  106  00003098  696e6f64	
  106  0000309c  65206973	
  106  000030a0  2025640a	
  106  000030a4  00      	
  107  000030a5          	.align 2
  108  000030a8          	LC5_LF0:
  109  000030a8  4572726f	.ascii "Error: Disk does not exist!\n\000"
  109  000030ac  723a2044	
  109  000030b0  69736b20	
  109  000030b4  646f6573	
  109  000030b8  206e6f74	
  109  000030bc  20657869	
  109  000030c0  7374210a	
  109  000030c4  00      	
  110  000030c5          	.align 2
  111  000030c8          	LC6_LF0:
  112  000030c8  52756e6e	.ascii "Running writing into the super block\n\000"
  112  000030cc  696e6720	
  112  000030d0  77726974	
  112  000030d4  696e6720	
  112  000030d8  696e746f	
  112  000030dc  20746865	
  112  000030e0  20737570	
  112  000030e4  65722062	
  112  000030e8  6c6f636b	
  112  000030ec  0a00    	
  113  000030ee          	.align 2
  114  000030f0          	LC7_LF0:
  115  000030f0  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  115  000030f4  6b202825	
  115  000030f8  64293a20	
  115  000030fc  466f726d	
  115  00003100  61747465	
  115  00003104  64204446	
  115  00003108  53206469	
  115  0000310c  736b2066	
  115  00003110  6f722025	
  115  00003114  64206279	
  115  00003118  7465732e	
  115  0000311c  0a00    	
  116  0000311e          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  126  000010e4  8fc20000	lw	r2,(r30)
  127  000010e8  0c0013e0	jal	___main
  128  000010ec  54000000	nop; not filled.
  129  000010f0  23bdfff8	addi	r29,r29,#-8
  130  000010f4  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  131  000010f8  2529300c	addui	r9,r9,(LC0_LF0)&0xffff
  132  000010fc  afa90000	sw	(r29),r9
  133  00001100  0c000488	jal	_Printf
  134  00001104  54000000	nop; not filled.
  135  00001108  23bd0008	addi	r29,r29,#8
  136  0000110c  64410001	snei	r1,r2,#1
  137  00001110  10200028	beqz	r1,L14_LF0
  138  00001114  54000000	nop; not filled.
  139  00001118  23bdfff8	addi	r29,r29,#-8
  140  0000111c  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  141  00001120  25293028	addui	r9,r9,(LC1_LF0)&0xffff
  142  00001124  afa90000	sw	(r29),r9
  143  00001128  0c000460	jal	_Printf
  144  0000112c  54000000	nop; not filled.
  145  00001130  0c0005f0	jal	_Exit
  146  00001134  54000000	nop; not filled.
  147  00001138  23bd0008	addi	r29,r29,#8
  148  0000113c          	L14_LF0:
  149  0000113c  0c000584	jal	_dfs_invalidate
  150  00001140  54000000	nop; not filled.
  151  00001144  23bdfff8	addi	r29,r29,#-8
  152  00001148  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  153  0000114c  25293060	addui	r9,r9,(LC3_LF0)&0xffff
  154  00001150  afa90000	sw	(r29),r9
  155  00001154  0c000434	jal	_Printf
  156  00001158  54000000	nop; not filled.
  157  0000115c  23bd0008	addi	r29,r29,#8
  158  00001160  23bdfff8	addi	r29,r29,#-8
  159  00001164  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  160  00001168  25293084	addui	r9,r9,(LC4_LF0)&0xffff
  161  0000116c  afa90000	sw	(r29),r9
  162  00001170  20090060	addi	r9,r0,#96
  163  00001174  afa90004	sw	4(r29),r9
  164  00001178  0c000410	jal	_Printf
  165  0000117c  54000000	nop; not filled.
  166  00001180  0c00051c	jal	_disk_size
  167  00001184  54000000	nop; not filled.
  168  00001188  3c020000	lhi	r2,((_disksize)>>16)&0xffff
  169  0000118c  24423004	addui	r2,r2,(_disksize)&0xffff
  170  00001190  ac410000	sw	(r2),r1
  171  00001194  0c000514	jal	_disk_blocksize
  172  00001198  54000000	nop; not filled.
  173  0000119c  3c020000	lhi	r2,((_diskblocksize)>>16)&0xffff
  174  000011a0  24423000	addui	r2,r2,(_diskblocksize)&0xffff
  175  000011a4  ac410000	sw	(r2),r1
  176  000011a8  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  177  000011ac  24213008	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  178  000011b0  20094000	addi	r9,r0,#16384
  179  000011b4  ac290000	sw	(r1),r9
  180  000011b8  3c010000	lhi	r1,((_sb)>>16)&0xffff
  181  000011bc  24213144	addui	r1,r1,(_sb)&0xffff
  182  000011c0  20090400	addi	r9,r0,#1024
  183  000011c4  ac290004	sw	4(r1),r9
  184  000011c8  20094000	addi	r9,r0,#16384
  185  000011cc  ac290008	sw	8(r1),r9
  186  000011d0  20090001	addi	r9,r0,#1
  187  000011d4  ac29000c	sw	12(r1),r9
  188  000011d8  200900c0	addi	r9,r0,#192
  189  000011dc  ac290010	sw	16(r1),r9
  190  000011e0  20090013	addi	r9,r0,#19
  191  000011e4  ac290014	sw	20(r1),r9
  192  000011e8  20090015	addi	r9,r0,#21
  193  000011ec  ac290018	sw	24(r1),r9
  194  000011f0  0c0004c4	jal	_disk_create
  195  000011f4  54000000	nop; not filled.
  196  000011f8  23bd0008	addi	r29,r29,#8
  197  000011fc  6021ffff	seqi	r1,r1,#-1
  198  00001200  10200028	beqz	r1,L17_LF0
  199  00001204  54000000	nop; not filled.
  200  00001208  23bdfff8	addi	r29,r29,#-8
  201  0000120c  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  202  00001210  252930a8	addui	r9,r9,(LC5_LF0)&0xffff
  203  00001214  afa90000	sw	(r29),r9
  204  00001218  0c000370	jal	_Printf
  205  0000121c  54000000	nop; not filled.
  206  00001220  0c000500	jal	_Exit
  207  00001224  54000000	nop; not filled.
  208  00001228  23bd0008	addi	r29,r29,#8
  209  0000122c          	L17_LF0:
  210  0000122c  3c030000	lhi	r3,((_inodes)>>16)&0xffff
  211  00001230  24633160	addui	r3,r3,(_inodes)&0xffff
  212  00001234  206447a0	addi	r4,r3,#18336
  213  00001238          	L21_LF0:
  214  00001238  20090000	addi	r9,r0,#0
  215  0000123c  ac690000	sw	(r3),r9
  216  00001240  ac690004	sw	4(r3),r9
  217  00001244  20090000	addi	r9,r0,(#0x0)&0xff
  218  00001248  a0690008	sb	8(r3),r9
  219  0000124c  00031020	add	r2,r0,r3
  220  00001250  207f0024	addi	r31,r3,#36
  221  00001254          	L25_LF0:
  222  00001254  20090000	addi	r9,r0,#0
  223  00001258  ac490034	sw	52(r2),r9
  224  0000125c  20420004	addi	r2,r2,#4
  225  00001260  005f082c	sle	r1,r2,r31
  226  00001264  1420ffec	bnez	r1,L25_LF0
  227  00001268  54000000	nop; not filled.
  228  0000126c  ac69005c	sw	92(r3),r9
  229  00001270  20630060	addi	r3,r3,#96
  230  00001274  0064082c	sle	r1,r3,r4
  231  00001278  1420ffbc	bnez	r1,L21_LF0
  232  0000127c  54000000	nop; not filled.
  233  00001280  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  234  00001284  24427960	addui	r2,r2,(_fbv)&0xffff
  235  00001288  204307fc	addi	r3,r2,#2044
  236  0000128c          	L31_LF0:
  237  0000128c  20090000	addi	r9,r0,#0
  238  00001290  ac490000	sw	(r2),r9
  239  00001294  20420004	addi	r2,r2,#4
  240  00001298  0043082c	sle	r1,r2,r3
  241  0000129c  1420ffec	bnez	r1,L31_LF0
  242  000012a0  54000000	nop; not filled.
  243  000012a4  3c010000	lhi	r1,((_fbv)>>16)&0xffff
  244  000012a8  24217960	addui	r1,r1,(_fbv)&0xffff
  245  000012ac  2009f800	addi	r9,r0,#-2048
  246  000012b0  ac290000	sw	(r1),r9
  247  000012b4  00012020	add	r4,r0,r1
  248  000012b8  3c010000	lhi	r1,((_sb+20)>>16)&0xffff
  249  000012bc  24213158	addui	r1,r1,(_sb+20)&0xffff
  250  000012c0  8c230000	lw	r3,(r1)
  251  000012c4  20250004	addi	r5,r1,#4
  252  000012c8  8ca10000	lw	r1,(r5)
  253  000012cc  0061082a	sltu	r1,r3,r1
  254  000012d0  102000a4	beqz	r1,L34_LF0
  255  000012d4  54000000	nop; not filled.
  256  000012d8  23c2fbf8	addi	r2,r30,#-1032
  257  000012dc  3c070000	lhi	r7,((_diskblocksize)>>16)&0xffff
  258  000012e0  24e73000	addui	r7,r7,(_diskblocksize)&0xffff
  259  000012e4  00054020	add	r8,r0,r5
  260  000012e8  50610001	slli	r1,r3,#0x1
  261  000012ec  20260001	addi	r6,r1,#1
  262  000012f0  50650001	slli	r5,r3,#0x1
  263  000012f4          	L36_LF0:
  264  000012f4  23bdfff0	addi	r29,r29,#-16
  265  000012f8  afa40000	sw	(r29),r4
  266  000012fc  afa20004	sw	4(r29),r2
  267  00001300  8ce90000	lw	r9,(r7)
  268  00001304  afa90008	sw	8(r29),r9
  269  00001308  0c001020	jal	_bcopy
  270  0000130c  54000000	nop; not filled.
  271  00001310  afa50000	sw	(r29),r5
  272  00001314  afa20004	sw	4(r29),r2
  273  00001318  0c0001a8	jal	_FdiskWriteBlock
  274  0000131c  54000000	nop; not filled.
  275  00001320  8ce10000	lw	r1,(r7)
  276  00001324  00812020	add	r4,r4,r1
  277  00001328  afa40000	sw	(r29),r4
  278  0000132c  afa20004	sw	4(r29),r2
  279  00001330  8ce90000	lw	r9,(r7)
  280  00001334  afa90008	sw	8(r29),r9
  281  00001338  0c000ff0	jal	_bcopy
  282  0000133c  54000000	nop; not filled.
  283  00001340  afa60000	sw	(r29),r6
  284  00001344  afa20004	sw	4(r29),r2
  285  00001348  0c000178	jal	_FdiskWriteBlock
  286  0000134c  54000000	nop; not filled.
  287  00001350  8ce10000	lw	r1,(r7)
  288  00001354  00812020	add	r4,r4,r1
  289  00001358  23bd0010	addi	r29,r29,#16
  290  0000135c  20c60002	addi	r6,r6,#2
  291  00001360  20a50002	addi	r5,r5,#2
  292  00001364  20630001	addi	r3,r3,#1
  293  00001368  8d010000	lw	r1,(r8)
  294  0000136c  0061082a	sltu	r1,r3,r1
  295  00001370  1420ff80	bnez	r1,L36_LF0
  296  00001374  54000000	nop; not filled.
  297  00001378          	L34_LF0:
  298  00001378  3c030000	lhi	r3,((_sb)>>16)&0xffff
  299  0000137c  24633144	addui	r3,r3,(_sb)&0xffff
  300  00001380  20090001	addi	r9,r0,#1
  301  00001384  ac690000	sw	(r3),r9
  302  00001388  23bdfff8	addi	r29,r29,#-8
  303  0000138c  23c2fbf8	addi	r2,r30,#-1032
  304  00001390  afa20000	sw	(r29),r2
  305  00001394  20090400	addi	r9,r0,#1024
  306  00001398  afa90004	sw	4(r29),r9
  307  0000139c  0c00100c	jal	_bzero
  308  000013a0  54000000	nop; not filled.
  309  000013a4  23bdfff8	addi	r29,r29,#-8
  310  000013a8  afa30000	sw	(r29),r3
  311  000013ac  afa20004	sw	4(r29),r2
  312  000013b0  2009001c	addi	r9,r0,#28
  313  000013b4  afa90008	sw	8(r29),r9
  314  000013b8  0c000f70	jal	_bcopy
  315  000013bc  54000000	nop; not filled.
  316  000013c0  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  317  000013c4  252930c8	addui	r9,r9,(LC6_LF0)&0xffff
  318  000013c8  afa90000	sw	(r29),r9
  319  000013cc  0c0001bc	jal	_Printf
  320  000013d0  54000000	nop; not filled.
  321  000013d4  20090001	addi	r9,r0,#1
  322  000013d8  afa90000	sw	(r29),r9
  323  000013dc  afa20004	sw	4(r29),r2
  324  000013e0  0c0000e0	jal	_FdiskWriteBlock
  325  000013e4  54000000	nop; not filled.
  326  000013e8  3c040000	lhi	r4,((_inodes)>>16)&0xffff
  327  000013ec  24843160	addui	r4,r4,(_inodes)&0xffff
  328  000013f0  20030000	addi	r3,r0,#0
  329  000013f4  23bd0010	addi	r29,r29,#16
  330  000013f8  00022820	add	r5,r0,r2
  331  000013fc  3c060000	lhi	r6,((_diskblocksize)>>16)&0xffff
  332  00001400  24c63000	addui	r6,r6,(_diskblocksize)&0xffff
  333  00001404          	L41_LF0:
  334  00001404  23bdfff0	addi	r29,r29,#-16
  335  00001408  afa40000	sw	(r29),r4
  336  0000140c  afa50004	sw	4(r29),r5
  337  00001410  8cc90000	lw	r9,(r6)
  338  00001414  afa90008	sw	8(r29),r9
  339  00001418  0c000f10	jal	_bcopy
  340  0000141c  54000000	nop; not filled.
  341  00001420  20630001	addi	r3,r3,#1
  342  00001424  50620001	slli	r2,r3,#0x1
  343  00001428  afa20000	sw	(r29),r2
  344  0000142c  afa50004	sw	4(r29),r5
  345  00001430  0c000090	jal	_FdiskWriteBlock
  346  00001434  54000000	nop; not filled.
  347  00001438  8cc10000	lw	r1,(r6)
  348  0000143c  00812020	add	r4,r4,r1
  349  00001440  afa40000	sw	(r29),r4
  350  00001444  afa50004	sw	4(r29),r5
  351  00001448  8cc90000	lw	r9,(r6)
  352  0000144c  afa90008	sw	8(r29),r9
  353  00001450  0c000ed8	jal	_bcopy
  354  00001454  54000000	nop; not filled.
  355  00001458  20410001	addi	r1,r2,#1
  356  0000145c  afa10000	sw	(r29),r1
  357  00001460  afa50004	sw	4(r29),r5
  358  00001464  0c00005c	jal	_FdiskWriteBlock
  359  00001468  54000000	nop; not filled.
  360  0000146c  8cc10000	lw	r1,(r6)
  361  00001470  00812020	add	r4,r4,r1
  362  00001474  23bd0010	addi	r29,r29,#16
  363  00001478  70610011	slei	r1,r3,#17
  364  0000147c  1420ff84	bnez	r1,L41_LF0
  365  00001480  54000000	nop; not filled.
  366  00001484  0c000110	jal	_getpid
  367  00001488  54000000	nop; not filled.
  368  0000148c  23bdfff0	addi	r29,r29,#-16
  369  00001490  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  370  00001494  252930f0	addui	r9,r9,(LC7_LF0)&0xffff
  371  00001498  afa90000	sw	(r29),r9
  372  0000149c  afa10004	sw	4(r29),r1
  373  000014a0  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  374  000014a4  24213004	addui	r1,r1,(_disksize)&0xffff
  375  000014a8  8c210000	lw	r1,(r1)
  376  000014ac  afa10008	sw	8(r29),r1
  377  000014b0  0c0000d8	jal	_Printf
  378  000014b4  54000000	nop; not filled.
  379  000014b8  23bd0010	addi	r29,r29,#16
  380  000014bc  0c001000	jal	_exit
  381  000014c0  54000000	nop
  382  000014c4          	.endproc _main
  383  000014c4          	.data
  384  0000311e          	.align 2
  385  00003120          	LC8_LF0:
  386  00003120  4661696c	.ascii "Failed to write block onto disk\n\000"
  386  00003124  65642074	
  386  00003128  6f207772	
  386  0000312c  69746520	
  386  00003130  626c6f63	
  386  00003134  6b206f6e	
  386  00003138  746f2064	
  386  0000313c  69736b0a	
  386  00003140  00      	
  387  00003141          	.text
  388  000014c4          	.align 2
  389  000014c4          	.proc _FdiskWriteBlock
  390  000014c4          	.global _FdiskWriteBlock
  391  000014c4          	_FdiskWriteBlock:
  392                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 1 regs to save.
  393  000014c4  afbefffc	sw	-4(r29),r30; push fp
  394  000014c8  001df020	add	r30,r0,r29; fp = sp
  395  000014cc  afbffff8	sw	-8(r29),r31; push ret addr
  396  000014d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  397  000014d4  afa20000	sw	0(r29),r2
  398  000014d8  8fc10004	lw	r1,4(r30)
  399  000014dc  23bdfff8	addi	r29,r29,#-8
  400  000014e0  8fc20000	lw	r2,(r30)
  401  000014e4  afa20000	sw	(r29),r2
  402  000014e8  afa10004	sw	4(r29),r1
  403  000014ec  0c0001a4	jal	_disk_write_block
  404  000014f0  54000000	nop; not filled.
  405  000014f4  23bd0008	addi	r29,r29,#8
  406  000014f8  6021ffff	seqi	r1,r1,#-1
  407  000014fc  10200028	beqz	r1,L46_LF0
  408  00001500  54000000	nop; not filled.
  409  00001504  23bdfff8	addi	r29,r29,#-8
  410  00001508  3c020000	lhi	r2,((LC8_LF0)>>16)&0xffff
  411  0000150c  24423120	addui	r2,r2,(LC8_LF0)&0xffff
  412  00001510  afa20000	sw	(r29),r2
  413  00001514  0c000074	jal	_Printf
  414  00001518  54000000	nop; not filled.
  415  0000151c  0c000204	jal	_Exit
  416  00001520  54000000	nop; not filled.
  417  00001524  23bd0008	addi	r29,r29,#8
  418  00001528          	L46_LF0:
  419  00001528  20010001	addi	r1,r0,#1
  420  0000152c  8fa20000	lw	r2,0(r29)
  421  00001530  8fdffff8	lw	r31,-8(r30)
  422  00001534  001ee820	add	r29,r0,r30
  423  00001538  8fdefffc	lw	r30,-4(r30)
  424  0000153c  4be00000	jr	r31
  425  00001540  54000000	nop
  426  00001544          	.endproc _FdiskWriteBlock
  427  00001544          	.data
  428  00003141          	.align 2
  429  00003144          	.global _sb
  430  00003144          	_sb:
  431  00003144          	.space 28
  432  00003160          	.align 2
  433  00003160          	.global _inodes
  434  00003160          	_inodes:
  435  00003160          	.space 18432
  436  00007960          	.align 2
  437  00007960          	.global _fbv
  438  00007960          	_fbv:
  439  00007960          	.space 2048
  440                      ;;;
  441                      ;;; Stub functions for DLX traps.
  442                      ;;;
  443                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  444                      ;;;
  445                      ;;; The traps such as Open and Close
  446                      ;;; (note the capital letters) are for use by user programs.  The traps
  447                      ;;; with names such as open and close (lower case) are for use by the OS.
  448                      ;;;
  450  00008160          	.text
  451  00001544          	.align 2
  453                      ;;; The following are the traps to be used by user-level programs
  454                      ;;;
  456  00001544          	.align 2
  457  00001544          	.proc _Open
  458  00001544          	.global _Open
  459  00001544          	_Open:
  460                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  461                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  462                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  463  00001544  44000213	trap	#0x213
  464  00001548  4be00000	jr	r31
  465  0000154c  54000000	nop
  466  00001550          	.endproc _Open
  468  00001550          	.proc _Close
  469  00001550          	.global _Close
  470  00001550          	_Close:
  471  00001550  44000214	trap	#0x214
  472  00001554  4be00000	jr	r31
  473  00001558  54000000	nop
  474  0000155c          	.endproc _Close
  476  0000155c          	.proc _Read
  477  0000155c          	.global _Read
  478  0000155c          	_Read:
  479  0000155c  44000210	trap	#0x210
  480  00001560  4be00000	jr	r31
  481  00001564  54000000	nop
  482  00001568          	.endproc _Read
  484  00001568          	.proc _Write
  485  00001568          	.global _Write
  486  00001568          	_Write:
  487  00001568  44000211	trap	#0x211
  488  0000156c  4be00000	jr	r31
  489  00001570  54000000	nop
  490  00001574          	.endproc _Write
  492  00001574          	.proc _Lseek
  493  00001574          	.global _Lseek
  494  00001574          	_Lseek:
  495  00001574  44000212	trap	#0x212
  496  00001578  4be00000	jr	r31
  497  0000157c  54000000	nop
  498  00001580          	.endproc _Lseek
  500  00001580          	.proc _Putchar
  501  00001580          	.global _Putchar
  502  00001580          	_Putchar:
  503  00001580  44000280	trap	#0x280
  504  00001584  4be00000	jr	r31
  505  00001588  54000000	nop
  506  0000158c          	.endproc _Putchar
  508  0000158c          	.proc _Printf
  509  0000158c          	.global _Printf
  510  0000158c          	_Printf:
  511  0000158c  44000201	trap	#0x201
  512  00001590  4be00000	jr	r31
  513  00001594  54000000	nop
  514  00001598          	.endproc _Printf
  516  00001598          	.proc _getpid
  517  00001598          	.global _getpid
  518  00001598          	_getpid:
  519  00001598  44000431	trap	#0x431
  520  0000159c  4be00000	jr	r31
  521  000015a0  54000000	nop
  522  000015a4          	.endproc _getpid
  524  000015a4          	.proc _process_create
  525  000015a4          	.global _process_create
  526  000015a4          	_process_create:
  527  000015a4  44000432	trap	#0x432
  528  000015a8  4be00000	jr	r31
  529  000015ac  54000000	nop
  530  000015b0          	.endproc _process_create
  532  000015b0          	.proc _shmget
  533  000015b0          	.global _shmget
  534  000015b0          	_shmget:
  535  000015b0  44000440	trap	#0x440
  536  000015b4  4be00000	jr	r31
  537  000015b8  54000000	nop
  538  000015bc          	.endproc _shmget
  540  000015bc          	.proc _shmat
  541  000015bc          	.global _shmat
  542  000015bc          	_shmat:
  543  000015bc  44000441	trap	#0x441
  544  000015c0  4be00000	jr	r31
  545  000015c4  54000000	nop
  546  000015c8          	.endproc _shmat
  548  000015c8          	.proc _sem_create
  549  000015c8          	.global _sem_create
  550  000015c8          	_sem_create:
  551  000015c8  44000450	trap	#0x450
  552  000015cc  4be00000	jr	r31
  553  000015d0  54000000	nop
  554  000015d4          	.endproc _sem_create
  556  000015d4          	.proc _sem_wait
  557  000015d4          	.global _sem_wait
  558  000015d4          	_sem_wait:
  559  000015d4  44000451	trap	#0x451
  560  000015d8  4be00000	jr	r31
  561  000015dc  54000000	nop
  562  000015e0          	.endproc _sem_wait
  564  000015e0          	.proc _sem_signal
  565  000015e0          	.global _sem_signal
  566  000015e0          	_sem_signal:
  567  000015e0  44000452	trap	#0x452
  568  000015e4  4be00000	jr	r31
  569  000015e8  54000000	nop
  570  000015ec          	.endproc _sem_signal
  572  000015ec          	.proc _lock_create
  573  000015ec          	.global _lock_create
  574  000015ec          	_lock_create:
  575  000015ec  44000453	trap	#0x453
  576  000015f0  4be00000	jr	r31
  577  000015f4  54000000	nop
  578  000015f8          	.endproc _lock_create
  580  000015f8          	.proc _lock_acquire
  581  000015f8          	.global _lock_acquire
  582  000015f8          	_lock_acquire:
  583  000015f8  44000454	trap	#0x454
  584  000015fc  4be00000	jr	r31
  585  00001600  54000000	nop
  586  00001604          	.endproc _lock_acquire
  588  00001604          	.proc _lock_release
  589  00001604          	.global _lock_release
  590  00001604          	_lock_release:
  591  00001604  44000455	trap	#0x455
  592  00001608  4be00000	jr	r31
  593  0000160c  54000000	nop
  594  00001610          	.endproc _lock_release
  596  00001610          	.proc _cond_create
  597  00001610          	.global _cond_create
  598  00001610          	_cond_create:
  599  00001610  44000456	trap	#0x456
  600  00001614  4be00000	jr	r31
  601  00001618  54000000	nop
  602  0000161c          	.endproc _cond_create
  604  0000161c          	.proc _cond_wait
  605  0000161c          	.global _cond_wait
  606  0000161c          	_cond_wait:
  607  0000161c  44000457	trap	#0x457
  608  00001620  4be00000	jr	r31
  609  00001624  54000000	nop
  610  00001628          	.endproc _cond_wait
  612  00001628          	.proc _cond_signal
  613  00001628          	.global _cond_signal
  614  00001628          	_cond_signal:
  615  00001628  44000458	trap	#0x458
  616  0000162c  4be00000	jr	r31
  617  00001630  54000000	nop
  618  00001634          	.endproc _cond_signal
  620  00001634          	.proc _cond_broadcast
  621  00001634          	.global _cond_broadcast
  622  00001634          	_cond_broadcast:
  623  00001634  44000459	trap	#0x459
  624  00001638  4be00000	jr	r31
  625  0000163c  54000000	nop
  626  00001640          	.endproc _cond_broadcast
  628  00001640          	.proc _mbox_create
  629  00001640          	.global _mbox_create
  630  00001640          	_mbox_create:
  631  00001640  44000460	trap	#0x460
  632  00001644  4be00000	jr	r31
  633  00001648  54000000	nop
  634  0000164c          	.endproc _mbox_create
  636  0000164c          	.proc _mbox_open
  637  0000164c          	.global _mbox_open
  638  0000164c          	_mbox_open:
  639  0000164c  44000461	trap	#0x461
  640  00001650  4be00000	jr	r31
  641  00001654  54000000	nop
  642  00001658          	.endproc _mbox_open
  644  00001658          	.proc _mbox_close
  645  00001658          	.global _mbox_close
  646  00001658          	_mbox_close:
  647  00001658  44000462	trap	#0x462
  648  0000165c  4be00000	jr	r31
  649  00001660  54000000	nop
  650  00001664          	.endproc _mbox_close
  652  00001664          	.proc _mbox_send
  653  00001664          	.global _mbox_send
  654  00001664          	_mbox_send:
  655  00001664  44000463	trap	#0x463
  656  00001668  4be00000	jr	r31
  657  0000166c  54000000	nop
  658  00001670          	.endproc _mbox_send
  660  00001670          	.proc _mbox_recv
  661  00001670          	.global _mbox_recv
  662  00001670          	_mbox_recv:
  663  00001670  44000464	trap	#0x464
  664  00001674  4be00000	jr	r31
  665  00001678  54000000	nop
  666  0000167c          	.endproc _mbox_recv
  668  0000167c          	.proc _sleep
  669  0000167c          	.global _sleep
  670  0000167c          	_sleep:
  671  0000167c  44000465	trap	#0x465
  672  00001680  4be00000	jr	r31
  673  00001684  54000000	nop
  674  00001688          	.endproc _sleep
  676  00001688          	.proc _yield
  677  00001688          	.global _yield
  678  00001688          	_yield:
  679  00001688  44000466	trap	#0x466
  680  0000168c  4be00000	jr	r31
  681  00001690  54000000	nop
  682  00001694          	.endproc _yield
  684  00001694          	.proc _disk_write_block
  685  00001694          	.global _disk_write_block
  686  00001694          	_disk_write_block:
  687  00001694  44000467	trap	#0x467
  688  00001698  4be00000	jr	r31
  689  0000169c  54000000	nop
  690  000016a0          	.endproc _disk_write_block
  692  000016a0          	.proc _disk_size
  693  000016a0          	.global _disk_size
  694  000016a0          	_disk_size:
  695  000016a0  44000468	trap	#0x468
  696  000016a4  4be00000	jr	r31
  697  000016a8  54000000	nop
  698  000016ac          	.endproc _disk_size
  700  000016ac          	.proc _disk_blocksize
  701  000016ac          	.global _disk_blocksize
  702  000016ac          	_disk_blocksize:
  703  000016ac  44000469	trap	#0x469
  704  000016b0  4be00000	jr	r31
  705  000016b4  54000000	nop
  706  000016b8          	.endproc _disk_blocksize
  708  000016b8          	.proc _disk_create
  709  000016b8          	.global _disk_create
  710  000016b8          	_disk_create:
  711  000016b8  44000470	trap	#0x470
  712  000016bc  4be00000	jr	r31
  713  000016c0  54000000	nop
  714  000016c4          	.endproc _disk_create
  716  000016c4          	.proc _dfs_invalidate
  717  000016c4          	.global _dfs_invalidate
  718  000016c4          	_dfs_invalidate:
  719  000016c4  44000471	trap	#0x471
  720  000016c8  4be00000	jr	r31
  721  000016cc  54000000	nop
  722  000016d0          	.endproc _dfs_invalidate
  724  000016d0          	.proc _file_open
  725  000016d0          	.global _file_open
  726  000016d0          	_file_open:
  727  000016d0  44000472	trap	#0x472
  728  000016d4  4be00000	jr	r31
  729  000016d8  54000000	nop
  730  000016dc          	.endproc _file_open
  732  000016dc          	.proc _file_close
  733  000016dc          	.global _file_close
  734  000016dc          	_file_close:
  735  000016dc  44000473	trap	#0x473
  736  000016e0  4be00000	jr	r31
  737  000016e4  54000000	nop
  738  000016e8          	.endproc _file_close
  740  000016e8          	.proc _file_delete
  741  000016e8          	.global _file_delete
  742  000016e8          	_file_delete:
  743  000016e8  44000474	trap	#0x474
  744  000016ec  4be00000	jr	r31
  745  000016f0  54000000	nop
  746  000016f4          	.endproc _file_delete
  748  000016f4          	.proc _file_read
  749  000016f4          	.global _file_read
  750  000016f4          	_file_read:
  751  000016f4  44000475	trap	#0x475
  752  000016f8  4be00000	jr	r31
  753  000016fc  54000000	nop
  754  00001700          	.endproc _file_read
  756  00001700          	.proc _file_write
  757  00001700          	.global _file_write
  758  00001700          	_file_write:
  759  00001700  44000476	trap	#0x476
  760  00001704  4be00000	jr	r31
  761  00001708  54000000	nop
  762  0000170c          	.endproc _file_write
  764  0000170c          	.proc _file_seek
  765  0000170c          	.global _file_seek
  766  0000170c          	_file_seek:
  767  0000170c  44000477	trap	#0x477
  768  00001710  4be00000	jr	r31
  769  00001714  54000000	nop
  770  00001718          	.endproc _file_seek
  772  00001718          	.proc _run_os_tests
  773  00001718          	.global _run_os_tests
  774  00001718          	_run_os_tests:
  775  00001718  440004ff	trap	#0x4FF
  776  0000171c  4be00000	jr	r31
  777  00001720  54000000	nop
  778  00001724          	.endproc _run_os_tests
  781  00001724          	.proc _Exit
  782  00001724          	.global _Exit
  783  00001724          	_Exit:
  784  00001724  44000500	trap	#0x500
  785  00001728  4be00000	jr	r31
  786  0000172c  54000000	nop
  787  00001730          	.endproc _Exit
  788                      ; Compiled by GCC
  790  00001730          	.align 2
  791  00001730          	.proc _isspace
  792  00001730          	.global _isspace
  793  00001730          	_isspace:
  794                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  795  00001730  afbefffc	sw	-4(r29),r30; push fp
  796  00001734  001df020	add	r30,r0,r29; fp = sp
  797  00001738  afbffff8	sw	-8(r29),r31; push ret addr
  798  0000173c  2fbd0018	subui	r29,r29,#24; alloc local storage
  799  00001740  afa20000	sw	0(r29),r2
  800  00001744  afa30004	sw	4(r29),r3
  801  00001748  afa40008	sw	8(r29),r4
  802  0000174c  83c20003	lb	r2,3(r30)
  803  00001750  20010000	addi	r1,r0,#0
  804  00001754  304300ff	andi	r3,r2,#0x00ff
  805  00001758  60640020	seqi	r4,r3,#32
  806  0000175c  1480002c	bnez	r4,L3_LF2
  807  00001760  54000000	nop; delay slot nop
  808  00001764  304300ff	andi	r3,r2,#0x00ff
  809  00001768  60640009	seqi	r4,r3,#9
  810  0000176c  1480001c	bnez	r4,L3_LF2
  811  00001770  54000000	nop; delay slot nop
  812  00001774  304300ff	andi	r3,r2,#0x00ff
  813  00001778  6064000a	seqi	r4,r3,#10
  814  0000177c  1480000c	bnez	r4,L3_LF2
  815  00001780  54000000	nop; delay slot nop
  816  00001784  08000008	j	L2_LF2
  817  00001788  54000000	nop; delay slot nop
  818  0000178c          	L3_LF2:
  819  0000178c  20010001	addi	r1,r0,#1
  820  00001790          	L2_LF2:
  821  00001790  08000004	j	L1_LF2
  822  00001794  54000000	nop; delay slot nop
  823  00001798          	L1_LF2:
  824  00001798  8fa20000	lw	r2,0(r29)
  825  0000179c  8fa30004	lw	r3,4(r29)
  826  000017a0  8fa40008	lw	r4,8(r29)
  827  000017a4  8fdffff8	lw	r31,-8(r30)
  828  000017a8  001ee820	add	r29,r0,r30
  829  000017ac  8fdefffc	lw	r30,-4(r30)
  830  000017b0  4be00000	jr	r31
  831  000017b4  54000000	nop
  832  000017b8          	.endproc _isspace
  833  000017b8          	.align 2
  834  000017b8          	.proc _isxdigit
  835  000017b8          	.global _isxdigit
  836  000017b8          	_isxdigit:
  837                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  838  000017b8  afbefffc	sw	-4(r29),r30; push fp
  839  000017bc  001df020	add	r30,r0,r29; fp = sp
  840  000017c0  afbffff8	sw	-8(r29),r31; push ret addr
  841  000017c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  842  000017c8  afa20000	sw	0(r29),r2
  843  000017cc  afa30004	sw	4(r29),r3
  844  000017d0  afa40008	sw	8(r29),r4
  845  000017d4  83c20003	lb	r2,3(r30)
  846  000017d8  20010000	addi	r1,r0,#0
  847  000017dc  304300ff	andi	r3,r2,#0x00ff
  848  000017e0  6c64002f	sgtui	r4,r3,#47
  849  000017e4  1080001c	beqz	r4,L7_LF2
  850  000017e8  54000000	nop; delay slot nop
  851  000017ec  304300ff	andi	r3,r2,#0x00ff
  852  000017f0  70640039	sleui	r4,r3,#57
  853  000017f4  1480005c	bnez	r4,L6_LF2
  854  000017f8  54000000	nop; delay slot nop
  855  000017fc  08000004	j	L7_LF2
  856  00001800  54000000	nop; delay slot nop
  857  00001804          	L7_LF2:
  858  00001804  304300ff	andi	r3,r2,#0x00ff
  859  00001808  6c640060	sgtui	r4,r3,#96
  860  0000180c  1080001c	beqz	r4,L8_LF2
  861  00001810  54000000	nop; delay slot nop
  862  00001814  304300ff	andi	r3,r2,#0x00ff
  863  00001818  70640066	sleui	r4,r3,#102
  864  0000181c  14800034	bnez	r4,L6_LF2
  865  00001820  54000000	nop; delay slot nop
  866  00001824  08000004	j	L8_LF2
  867  00001828  54000000	nop; delay slot nop
  868  0000182c          	L8_LF2:
  869  0000182c  304300ff	andi	r3,r2,#0x00ff
  870  00001830  6c640040	sgtui	r4,r3,#64
  871  00001834  10800020	beqz	r4,L5_LF2
  872  00001838  54000000	nop; delay slot nop
  873  0000183c  304300ff	andi	r3,r2,#0x00ff
  874  00001840  70640041	sleui	r4,r3,#65
  875  00001844  1480000c	bnez	r4,L6_LF2
  876  00001848  54000000	nop; delay slot nop
  877  0000184c  08000008	j	L5_LF2
  878  00001850  54000000	nop; delay slot nop
  879  00001854          	L6_LF2:
  880  00001854  20010001	addi	r1,r0,#1
  881  00001858          	L5_LF2:
  882  00001858  08000004	j	L4_LF2
  883  0000185c  54000000	nop; delay slot nop
  884  00001860          	L4_LF2:
  885  00001860  8fa20000	lw	r2,0(r29)
  886  00001864  8fa30004	lw	r3,4(r29)
  887  00001868  8fa40008	lw	r4,8(r29)
  888  0000186c  8fdffff8	lw	r31,-8(r30)
  889  00001870  001ee820	add	r29,r0,r30
  890  00001874  8fdefffc	lw	r30,-4(r30)
  891  00001878  4be00000	jr	r31
  892  0000187c  54000000	nop
  893  00001880          	.endproc _isxdigit
  894  00001880          	.align 2
  895  00001880          	.proc _dstrcpy
  896  00001880          	.global _dstrcpy
  897  00001880          	_dstrcpy:
  898                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  899  00001880  afbefffc	sw	-4(r29),r30; push fp
  900  00001884  001df020	add	r30,r0,r29; fp = sp
  901  00001888  afbffff8	sw	-8(r29),r31; push ret addr
  902  0000188c  2fbd0018	subui	r29,r29,#24; alloc local storage
  903  00001890  afa20000	sw	0(r29),r2
  904  00001894  afa30004	sw	4(r29),r3
  905  00001898  8fc10000	lw	r1,(r30)
  906  0000189c  afc1fff4	sw	-12(r30),r1
  907  000018a0          	L10_LF2:
  908  000018a0  8fc10000	lw	r1,(r30)
  909  000018a4  20220001	addi	r2,r1,#1
  910  000018a8  afc20000	sw	(r30),r2
  911  000018ac  8fc20004	lw	r2,4(r30)
  912  000018b0  20430001	addi	r3,r2,#1
  913  000018b4  afc30004	sw	4(r30),r3
  914  000018b8  80420000	lb	r2,(r2)
  915  000018bc  a0220000	sb	(r1),r2
  916  000018c0  a3c2fff3	sb	-13(r30),r2
  917  000018c4          	L12_LF2:
  918  000018c4  93c1fff3	lbu	r1,-13(r30)
  919  000018c8  64220000	snei	r2,r1,#0
  920  000018cc  1440000c	bnez	r2,L13_LF2
  921  000018d0  54000000	nop; delay slot nop
  922  000018d4  0800000c	j	L11_LF2
  923  000018d8  54000000	nop; delay slot nop
  924  000018dc          	L13_LF2:
  925  000018dc  0bffffc0	j	L10_LF2
  926  000018e0  54000000	nop; delay slot nop
  927  000018e4          	L11_LF2:
  928  000018e4  8fc1fff4	lw	r1,-12(r30)
  929  000018e8  08000004	j	L9_LF2
  930  000018ec  54000000	nop; delay slot nop
  931  000018f0          	L9_LF2:
  932  000018f0  8fa20000	lw	r2,0(r29)
  933  000018f4  8fa30004	lw	r3,4(r29)
  934  000018f8  8fdffff8	lw	r31,-8(r30)
  935  000018fc  001ee820	add	r29,r0,r30
  936  00001900  8fdefffc	lw	r30,-4(r30)
  937  00001904  4be00000	jr	r31
  938  00001908  54000000	nop
  939  0000190c          	.endproc _dstrcpy
  940  0000190c          	.align 2
  941  0000190c          	.proc _dstrncpy
  942  0000190c          	.global _dstrncpy
  943  0000190c          	_dstrncpy:
  944                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  945  0000190c  afbefffc	sw	-4(r29),r30; push fp
  946  00001910  001df020	add	r30,r0,r29; fp = sp
  947  00001914  afbffff8	sw	-8(r29),r31; push ret addr
  948  00001918  2fbd0018	subui	r29,r29,#24; alloc local storage
  949  0000191c  afa20000	sw	0(r29),r2
  950  00001920  afa30004	sw	4(r29),r3
  951  00001924  8fc10000	lw	r1,(r30)
  952  00001928  afc1fff4	sw	-12(r30),r1
  953  0000192c          	L15_LF2:
  954  0000192c  8fc10008	lw	r1,8(r30)
  955  00001930  2022ffff	addi	r2,r1,#-1
  956  00001934  afc20008	sw	8(r30),r2
  957  00001938  70210000	slei	r1,r1,#0
  958  0000193c  1020000c	beqz	r1,L18_LF2
  959  00001940  54000000	nop; delay slot nop
  960  00001944  08000048	j	L16_LF2
  961  00001948  54000000	nop; delay slot nop
  962  0000194c          	L18_LF2:
  963  0000194c  8fc10000	lw	r1,(r30)
  964  00001950  20220001	addi	r2,r1,#1
  965  00001954  afc20000	sw	(r30),r2
  966  00001958  8fc20004	lw	r2,4(r30)
  967  0000195c  20430001	addi	r3,r2,#1
  968  00001960  afc30004	sw	4(r30),r3
  969  00001964  80420000	lb	r2,(r2)
  970  00001968  a0220000	sb	(r1),r2
  971  0000196c  a3c2fff3	sb	-13(r30),r2
  972  00001970          	L17_LF2:
  973  00001970  93c1fff3	lbu	r1,-13(r30)
  974  00001974  64220000	snei	r2,r1,#0
  975  00001978  1440000c	bnez	r2,L19_LF2
  976  0000197c  54000000	nop; delay slot nop
  977  00001980  0800000c	j	L16_LF2
  978  00001984  54000000	nop; delay slot nop
  979  00001988          	L19_LF2:
  980  00001988  0bffffa0	j	L15_LF2
  981  0000198c  54000000	nop; delay slot nop
  982  00001990          	L16_LF2:
  983  00001990  8fc1fff4	lw	r1,-12(r30)
  984  00001994  08000004	j	L14_LF2
  985  00001998  54000000	nop; delay slot nop
  986  0000199c          	L14_LF2:
  987  0000199c  8fa20000	lw	r2,0(r29)
  988  000019a0  8fa30004	lw	r3,4(r29)
  989  000019a4  8fdffff8	lw	r31,-8(r30)
  990  000019a8  001ee820	add	r29,r0,r30
  991  000019ac  8fdefffc	lw	r30,-4(r30)
  992  000019b0  4be00000	jr	r31
  993  000019b4  54000000	nop
  994  000019b8          	.endproc _dstrncpy
  995  000019b8          	.align 2
  996  000019b8          	.proc _dstrcat
  997  000019b8          	.global _dstrcat
  998  000019b8          	_dstrcat:
  999                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1000  000019b8  afbefffc	sw	-4(r29),r30; push fp
 1001  000019bc  001df020	add	r30,r0,r29; fp = sp
 1002  000019c0  afbffff8	sw	-8(r29),r31; push ret addr
 1003  000019c4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1004  000019c8  afa20000	sw	0(r29),r2
 1005  000019cc  8fc10000	lw	r1,(r30)
 1006  000019d0  afc1fff4	sw	-12(r30),r1
 1007  000019d4          	L21_LF2:
 1008  000019d4  8fc10000	lw	r1,(r30)
 1009  000019d8  90220000	lbu	r2,(r1)
 1010  000019dc  64410000	snei	r1,r2,#0
 1011  000019e0  1420000c	bnez	r1,L23_LF2
 1012  000019e4  54000000	nop; delay slot nop
 1013  000019e8  0800001c	j	L22_LF2
 1014  000019ec  54000000	nop; delay slot nop
 1015  000019f0          	L23_LF2:
 1016  000019f0  8fc20000	lw	r2,(r30)
 1017  000019f4  20410001	addi	r1,r2,#1
 1018  000019f8  00011020	add	r2,r0,r1
 1019  000019fc  afc20000	sw	(r30),r2
 1020  00001a00  0bffffd0	j	L21_LF2
 1021  00001a04  54000000	nop; delay slot nop
 1022  00001a08          	L22_LF2:
 1023  00001a08  23bdfff8	addi	r29,r29,#-8
 1024  00001a0c  001d0820	add	r1,r0,r29
 1025  00001a10  8fc20000	lw	r2,(r30)
 1026  00001a14  ac220000	sw	(r1),r2
 1027  00001a18  8fc20004	lw	r2,4(r30)
 1028  00001a1c  ac220004	sw	4(r1),r2
 1029  00001a20  0ffffe5c	jal	_dstrcpy
 1030  00001a24  54000000	nop; delay slot nop
 1031  00001a28  23bd0008	addi	r29,r29,#8
 1032  00001a2c  8fc1fff4	lw	r1,-12(r30)
 1033  00001a30  08000004	j	L20_LF2
 1034  00001a34  54000000	nop; delay slot nop
 1035  00001a38          	L20_LF2:
 1036  00001a38  8fa20000	lw	r2,0(r29)
 1037  00001a3c  8fdffff8	lw	r31,-8(r30)
 1038  00001a40  001ee820	add	r29,r0,r30
 1039  00001a44  8fdefffc	lw	r30,-4(r30)
 1040  00001a48  4be00000	jr	r31
 1041  00001a4c  54000000	nop
 1042  00001a50          	.endproc _dstrcat
 1043  00001a50          	.align 2
 1044  00001a50          	.proc _dstrncmp
 1045  00001a50          	.global _dstrncmp
 1046  00001a50          	_dstrncmp:
 1047                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1048  00001a50  afbefffc	sw	-4(r29),r30; push fp
 1049  00001a54  001df020	add	r30,r0,r29; fp = sp
 1050  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001a5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1052  00001a60  afa20000	sw	0(r29),r2
 1053  00001a64  afa30004	sw	4(r29),r3
 1054  00001a68  54000000	nop
 1055  00001a6c  20010000	addi	r1,r0,#0
 1056  00001a70  afc1fff4	sw	-12(r30),r1
 1057  00001a74          	L25_LF2:
 1058  00001a74  8fc1fff4	lw	r1,-12(r30)
 1059  00001a78  8fc20008	lw	r2,8(r30)
 1060  00001a7c  0022082a	slt	r1,r1,r2
 1061  00001a80  1420000c	bnez	r1,L28_LF2
 1062  00001a84  54000000	nop; delay slot nop
 1063  00001a88  08000088	j	L26_LF2
 1064  00001a8c  54000000	nop; delay slot nop
 1065  00001a90          	L28_LF2:
 1066  00001a90  8fc10004	lw	r1,4(r30)
 1067  00001a94  90220000	lbu	r2,(r1)
 1068  00001a98  64410000	snei	r1,r2,#0
 1069  00001a9c  14200018	bnez	r1,L29_LF2
 1070  00001aa0  54000000	nop; delay slot nop
 1071  00001aa4  20010000	addi	r1,r0,#0
 1072  00001aa8  080000d8	j	L24_LF2
 1073  00001aac  54000000	nop; delay slot nop
 1074  00001ab0  08000028	j	L30_LF2
 1075  00001ab4  54000000	nop; delay slot nop
 1076  00001ab8          	L29_LF2:
 1077  00001ab8  8fc10000	lw	r1,(r30)
 1078  00001abc  8fc20004	lw	r2,4(r30)
 1079  00001ac0  90210000	lbu	r1,(r1)
 1080  00001ac4  90420000	lbu	r2,(r2)
 1081  00001ac8  00220829	sne	r1,r1,r2
 1082  00001acc  1020000c	beqz	r1,L30_LF2
 1083  00001ad0  54000000	nop; delay slot nop
 1084  00001ad4  0800003c	j	L26_LF2
 1085  00001ad8  54000000	nop; delay slot nop
 1086  00001adc          	L31_LF2:
 1087  00001adc          	L30_LF2:
 1088  00001adc  8fc20000	lw	r2,(r30)
 1089  00001ae0  20410001	addi	r1,r2,#1
 1090  00001ae4  00011020	add	r2,r0,r1
 1091  00001ae8  afc20000	sw	(r30),r2
 1092  00001aec  8fc20004	lw	r2,4(r30)
 1093  00001af0  20410001	addi	r1,r2,#1
 1094  00001af4  00011020	add	r2,r0,r1
 1095  00001af8  afc20004	sw	4(r30),r2
 1096  00001afc          	L27_LF2:
 1097  00001afc  8fc2fff4	lw	r2,-12(r30)
 1098  00001b00  20410001	addi	r1,r2,#1
 1099  00001b04  00011020	add	r2,r0,r1
 1100  00001b08  afc2fff4	sw	-12(r30),r2
 1101  00001b0c  0bffff64	j	L25_LF2
 1102  00001b10  54000000	nop; delay slot nop
 1103  00001b14          	L26_LF2:
 1104  00001b14  8fc1fff4	lw	r1,-12(r30)
 1105  00001b18  8fc20008	lw	r2,8(r30)
 1106  00001b1c  00220828	seq	r1,r1,r2
 1107  00001b20  10200018	beqz	r1,L32_LF2
 1108  00001b24  54000000	nop; delay slot nop
 1109  00001b28  20010000	addi	r1,r0,#0
 1110  00001b2c  08000054	j	L24_LF2
 1111  00001b30  54000000	nop; delay slot nop
 1112  00001b34  0800004c	j	L33_LF2
 1113  00001b38  54000000	nop; delay slot nop
 1114  00001b3c          	L32_LF2:
 1115  00001b3c  8fc20000	lw	r2,(r30)
 1116  00001b40  90410000	lbu	r1,(r2)
 1117  00001b44  8fc20004	lw	r2,4(r30)
 1118  00001b48  90430000	lbu	r3,(r2)
 1119  00001b4c  00230822	sub	r1,r1,r3
 1120  00001b50  74220000	sgei	r2,r1,#0
 1121  00001b54  10400020	beqz	r2,L34_LF2
 1122  00001b58  54000000	nop; delay slot nop
 1123  00001b5c  8fc10000	lw	r1,(r30)
 1124  00001b60  8fc20004	lw	r2,4(r30)
 1125  00001b64  90210000	lbu	r1,(r1)
 1126  00001b68  90420000	lbu	r2,(r2)
 1127  00001b6c  00220829	sne	r1,r1,r2
 1128  00001b70  08000008	j	L35_LF2
 1129  00001b74  54000000	nop; delay slot nop
 1130  00001b78          	L34_LF2:
 1131  00001b78  2001ffff	addi	r1,r0,#-1
 1132  00001b7c          	L35_LF2:
 1133  00001b7c  08000004	j	L24_LF2
 1134  00001b80  54000000	nop; delay slot nop
 1135  00001b84          	L33_LF2:
 1136  00001b84          	L24_LF2:
 1137  00001b84  8fa20000	lw	r2,0(r29)
 1138  00001b88  8fa30004	lw	r3,4(r29)
 1139  00001b8c  8fdffff8	lw	r31,-8(r30)
 1140  00001b90  001ee820	add	r29,r0,r30
 1141  00001b94  8fdefffc	lw	r30,-4(r30)
 1142  00001b98  4be00000	jr	r31
 1143  00001b9c  54000000	nop
 1144  00001ba0          	.endproc _dstrncmp
 1145  00001ba0          	.align 2
 1146  00001ba0          	.proc _dstrlen
 1147  00001ba0          	.global _dstrlen
 1148  00001ba0          	_dstrlen:
 1149                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1150  00001ba0  afbefffc	sw	-4(r29),r30; push fp
 1151  00001ba4  001df020	add	r30,r0,r29; fp = sp
 1152  00001ba8  afbffff8	sw	-8(r29),r31; push ret addr
 1153  00001bac  2fbd0018	subui	r29,r29,#24; alloc local storage
 1154  00001bb0  afa20000	sw	0(r29),r2
 1155  00001bb4  20010000	addi	r1,r0,#0
 1156  00001bb8  afc1fff4	sw	-12(r30),r1
 1157  00001bbc          	L37_LF2:
 1158  00001bbc  8fc10000	lw	r1,(r30)
 1159  00001bc0  20220001	addi	r2,r1,#1
 1160  00001bc4  afc20000	sw	(r30),r2
 1161  00001bc8  90210000	lbu	r1,(r1)
 1162  00001bcc  64220000	snei	r2,r1,#0
 1163  00001bd0  1440000c	bnez	r2,L39_LF2
 1164  00001bd4  54000000	nop; delay slot nop
 1165  00001bd8  0800001c	j	L38_LF2
 1166  00001bdc  54000000	nop; delay slot nop
 1167  00001be0          	L39_LF2:
 1168  00001be0  8fc2fff4	lw	r2,-12(r30)
 1169  00001be4  20410001	addi	r1,r2,#1
 1170  00001be8  00011020	add	r2,r0,r1
 1171  00001bec  afc2fff4	sw	-12(r30),r2
 1172  00001bf0  0bffffc8	j	L37_LF2
 1173  00001bf4  54000000	nop; delay slot nop
 1174  00001bf8          	L38_LF2:
 1175  00001bf8  8fc1fff4	lw	r1,-12(r30)
 1176  00001bfc  08000004	j	L36_LF2
 1177  00001c00  54000000	nop; delay slot nop
 1178  00001c04          	L36_LF2:
 1179  00001c04  8fa20000	lw	r2,0(r29)
 1180  00001c08  8fdffff8	lw	r31,-8(r30)
 1181  00001c0c  001ee820	add	r29,r0,r30
 1182  00001c10  8fdefffc	lw	r30,-4(r30)
 1183  00001c14  4be00000	jr	r31
 1184  00001c18  54000000	nop
 1185  00001c1c          	.endproc _dstrlen
 1186  00001c1c          	.align 2
 1187  00001c1c          	.proc _dstrstr
 1188  00001c1c          	.global _dstrstr
 1189  00001c1c          	_dstrstr:
 1190                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1191  00001c1c  afbefffc	sw	-4(r29),r30; push fp
 1192  00001c20  001df020	add	r30,r0,r29; fp = sp
 1193  00001c24  afbffff8	sw	-8(r29),r31; push ret addr
 1194  00001c28  2fbd0018	subui	r29,r29,#24; alloc local storage
 1195  00001c2c  afa20000	sw	0(r29),r2
 1196  00001c30  23bdfff8	addi	r29,r29,#-8
 1197  00001c34  001d0820	add	r1,r0,r29
 1198  00001c38  8fc20004	lw	r2,4(r30)
 1199  00001c3c  ac220000	sw	(r1),r2
 1200  00001c40  0fffff5c	jal	_dstrlen
 1201  00001c44  54000000	nop; delay slot nop
 1202  00001c48  23bd0008	addi	r29,r29,#8
 1203  00001c4c  afc1fff4	sw	-12(r30),r1
 1204  00001c50          	L41_LF2:
 1205  00001c50  8fc10000	lw	r1,(r30)
 1206  00001c54  90220000	lbu	r2,(r1)
 1207  00001c58  64410000	snei	r1,r2,#0
 1208  00001c5c  1420000c	bnez	r1,L43_LF2
 1209  00001c60  54000000	nop; delay slot nop
 1210  00001c64  08000060	j	L42_LF2
 1211  00001c68  54000000	nop; delay slot nop
 1212  00001c6c          	L43_LF2:
 1213  00001c6c  23bdfff0	addi	r29,r29,#-16
 1214  00001c70  001d0820	add	r1,r0,r29
 1215  00001c74  8fc20000	lw	r2,(r30)
 1216  00001c78  ac220000	sw	(r1),r2
 1217  00001c7c  8fc20004	lw	r2,4(r30)
 1218  00001c80  ac220004	sw	4(r1),r2
 1219  00001c84  8fc2fff4	lw	r2,-12(r30)
 1220  00001c88  ac220008	sw	8(r1),r2
 1221  00001c8c  0ffffdc0	jal	_dstrncmp
 1222  00001c90  54000000	nop; delay slot nop
 1223  00001c94  23bd0010	addi	r29,r29,#16
 1224  00001c98  64220000	snei	r2,r1,#0
 1225  00001c9c  14400010	bnez	r2,L44_LF2
 1226  00001ca0  54000000	nop; delay slot nop
 1227  00001ca4  8fc10000	lw	r1,(r30)
 1228  00001ca8  08000028	j	L40_LF2
 1229  00001cac  54000000	nop; delay slot nop
 1230  00001cb0          	L44_LF2:
 1231  00001cb0  8fc20000	lw	r2,(r30)
 1232  00001cb4  20410001	addi	r1,r2,#1
 1233  00001cb8  00011020	add	r2,r0,r1
 1234  00001cbc  afc20000	sw	(r30),r2
 1235  00001cc0  0bffff8c	j	L41_LF2
 1236  00001cc4  54000000	nop; delay slot nop
 1237  00001cc8          	L42_LF2:
 1238  00001cc8  20010000	addi	r1,r0,#0
 1239  00001ccc  08000004	j	L40_LF2
 1240  00001cd0  54000000	nop; delay slot nop
 1241  00001cd4          	L40_LF2:
 1242  00001cd4  8fa20000	lw	r2,0(r29)
 1243  00001cd8  8fdffff8	lw	r31,-8(r30)
 1244  00001cdc  001ee820	add	r29,r0,r30
 1245  00001ce0  8fdefffc	lw	r30,-4(r30)
 1246  00001ce4  4be00000	jr	r31
 1247  00001ce8  54000000	nop
 1248  00001cec          	.endproc _dstrstr
 1249  00001cec          	.align 2
 1250  00001cec          	.proc _dmindex
 1251  00001cec          	.global _dmindex
 1252  00001cec          	_dmindex:
 1253                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1254  00001cec  afbefffc	sw	-4(r29),r30; push fp
 1255  00001cf0  001df020	add	r30,r0,r29; fp = sp
 1256  00001cf4  afbffff8	sw	-8(r29),r31; push ret addr
 1257  00001cf8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1258  00001cfc  afa20000	sw	0(r29),r2
 1259  00001d00  54000000	nop
 1260  00001d04          	L46_LF2:
 1261  00001d04  8fc10000	lw	r1,(r30)
 1262  00001d08  90220000	lbu	r2,(r1)
 1263  00001d0c  64410000	snei	r1,r2,#0
 1264  00001d10  1420000c	bnez	r1,L48_LF2
 1265  00001d14  54000000	nop; delay slot nop
 1266  00001d18  08000070	j	L47_LF2
 1267  00001d1c  54000000	nop; delay slot nop
 1268  00001d20          	L48_LF2:
 1269  00001d20  8fc10004	lw	r1,4(r30)
 1270  00001d24  afc1fff4	sw	-12(r30),r1
 1271  00001d28          	L49_LF2:
 1272  00001d28  8fc1fff4	lw	r1,-12(r30)
 1273  00001d2c  90220000	lbu	r2,(r1)
 1274  00001d30  64410000	snei	r1,r2,#0
 1275  00001d34  1420000c	bnez	r1,L52_LF2
 1276  00001d38  54000000	nop; delay slot nop
 1277  00001d3c  08000044	j	L50_LF2
 1278  00001d40  54000000	nop; delay slot nop
 1279  00001d44          	L52_LF2:
 1280  00001d44  8fc10000	lw	r1,(r30)
 1281  00001d48  8fc2fff4	lw	r2,-12(r30)
 1282  00001d4c  90210000	lbu	r1,(r1)
 1283  00001d50  90420000	lbu	r2,(r2)
 1284  00001d54  00220828	seq	r1,r1,r2
 1285  00001d58  10200010	beqz	r1,L51_LF2
 1286  00001d5c  54000000	nop; delay slot nop
 1287  00001d60  8fc10000	lw	r1,(r30)
 1288  00001d64  08000030	j	L45_LF2
 1289  00001d68  54000000	nop; delay slot nop
 1290  00001d6c          	L53_LF2:
 1291  00001d6c          	L51_LF2:
 1292  00001d6c  8fc2fff4	lw	r2,-12(r30)
 1293  00001d70  20410001	addi	r1,r2,#1
 1294  00001d74  00011020	add	r2,r0,r1
 1295  00001d78  afc2fff4	sw	-12(r30),r2
 1296  00001d7c  0bffffa8	j	L49_LF2
 1297  00001d80  54000000	nop; delay slot nop
 1298  00001d84          	L50_LF2:
 1299  00001d84  0bffff7c	j	L46_LF2
 1300  00001d88  54000000	nop; delay slot nop
 1301  00001d8c          	L47_LF2:
 1302  00001d8c  20010000	addi	r1,r0,#0
 1303  00001d90  08000004	j	L45_LF2
 1304  00001d94  54000000	nop; delay slot nop
 1305  00001d98          	L45_LF2:
 1306  00001d98  8fa20000	lw	r2,0(r29)
 1307  00001d9c  8fdffff8	lw	r31,-8(r30)
 1308  00001da0  001ee820	add	r29,r0,r30
 1309  00001da4  8fdefffc	lw	r30,-4(r30)
 1310  00001da8  4be00000	jr	r31
 1311  00001dac  54000000	nop
 1312  00001db0          	.endproc _dmindex
 1313  00001db0          	.align 2
 1314  00001db0          	.proc _dindex
 1315  00001db0          	.global _dindex
 1316  00001db0          	_dindex:
 1317                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1318  00001db0  afbefffc	sw	-4(r29),r30; push fp
 1319  00001db4  001df020	add	r30,r0,r29; fp = sp
 1320  00001db8  afbffff8	sw	-8(r29),r31; push ret addr
 1321  00001dbc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1322  00001dc0  afa20000	sw	0(r29),r2
 1323  00001dc4  54000000	nop
 1324  00001dc8          	L55_LF2:
 1325  00001dc8  8fc10000	lw	r1,(r30)
 1326  00001dcc  90220000	lbu	r2,(r1)
 1327  00001dd0  64410000	snei	r1,r2,#0
 1328  00001dd4  1420000c	bnez	r1,L57_LF2
 1329  00001dd8  54000000	nop; delay slot nop
 1330  00001ddc  08000040	j	L56_LF2
 1331  00001de0  54000000	nop; delay slot nop
 1332  00001de4          	L57_LF2:
 1333  00001de4  8fc10000	lw	r1,(r30)
 1334  00001de8  90220000	lbu	r2,(r1)
 1335  00001dec  8fc10004	lw	r1,4(r30)
 1336  00001df0  00411028	seq	r2,r2,r1
 1337  00001df4  10400010	beqz	r2,L58_LF2
 1338  00001df8  54000000	nop; delay slot nop
 1339  00001dfc  8fc10000	lw	r1,(r30)
 1340  00001e00  08000028	j	L54_LF2
 1341  00001e04  54000000	nop; delay slot nop
 1342  00001e08          	L58_LF2:
 1343  00001e08  8fc20000	lw	r2,(r30)
 1344  00001e0c  20410001	addi	r1,r2,#1
 1345  00001e10  00011020	add	r2,r0,r1
 1346  00001e14  afc20000	sw	(r30),r2
 1347  00001e18  0bffffac	j	L55_LF2
 1348  00001e1c  54000000	nop; delay slot nop
 1349  00001e20          	L56_LF2:
 1350  00001e20  20010000	addi	r1,r0,#0
 1351  00001e24  08000004	j	L54_LF2
 1352  00001e28  54000000	nop; delay slot nop
 1353  00001e2c          	L54_LF2:
 1354  00001e2c  8fa20000	lw	r2,0(r29)
 1355  00001e30  8fdffff8	lw	r31,-8(r30)
 1356  00001e34  001ee820	add	r29,r0,r30
 1357  00001e38  8fdefffc	lw	r30,-4(r30)
 1358  00001e3c  4be00000	jr	r31
 1359  00001e40  54000000	nop
 1360  00001e44          	.endproc _dindex
 1361  00001e44          	.align 2
 1362  00001e44          	.proc _ditoa
 1363  00001e44          	.global _ditoa
 1364  00001e44          	_ditoa:
 1365                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1366  00001e44  afbefffc	sw	-4(r29),r30; push fp
 1367  00001e48  001df020	add	r30,r0,r29; fp = sp
 1368  00001e4c  afbffff8	sw	-8(r29),r31; push ret addr
 1369  00001e50  2fbd0018	subui	r29,r29,#24; alloc local storage
 1370  00001e54  afa20000	sw	0(r29),r2
 1371  00001e58  afa30004	sw	4(r29),r3
 1372  00001e5c  8fc10000	lw	r1,(r30)
 1373  00001e60  68220000	slti	r2,r1,#0
 1374  00001e64  1040002c	beqz	r2,L60_LF2
 1375  00001e68  54000000	nop; delay slot nop
 1376  00001e6c  8fc10004	lw	r1,4(r30)
 1377  00001e70  20220001	addi	r2,r1,#1
 1378  00001e74  afc20004	sw	4(r30),r2
 1379  00001e78  2002002d	addi	r2,r0,(#0x2d)&0xff
 1380  00001e7c  a0220000	sb	(r1),r2
 1381  00001e80  8fc10000	lw	r1,(r30)
 1382  00001e84  00011022	sub	r2,r0,r1
 1383  00001e88  afc20000	sw	(r30),r2
 1384  00001e8c  08000118	j	L61_LF2
 1385  00001e90  54000000	nop; delay slot nop
 1386  00001e94          	L60_LF2:
 1387  00001e94  8fc10000	lw	r1,(r30)
 1388  00001e98  64220000	snei	r2,r1,#0
 1389  00001e9c  14400020	bnez	r2,L62_LF2
 1390  00001ea0  54000000	nop; delay slot nop
 1391  00001ea4  8fc10004	lw	r1,4(r30)
 1392  00001ea8  20220001	addi	r2,r1,#1
 1393  00001eac  afc20004	sw	4(r30),r2
 1394  00001eb0  20020030	addi	r2,r0,(#0x30)&0xff
 1395  00001eb4  a0220000	sb	(r1),r2
 1396  00001eb8  080000ec	j	L61_LF2
 1397  00001ebc  54000000	nop; delay slot nop
 1398  00001ec0          	L62_LF2:
 1399  00001ec0  20010001	addi	r1,r0,#1
 1400  00001ec4  afc1fff4	sw	-12(r30),r1
 1401  00001ec8          	L64_LF2:
 1402  00001ec8  8fc1fff4	lw	r1,-12(r30)
 1403  00001ecc  8fc20000	lw	r2,(r30)
 1404  00001ed0  0022082c	sle	r1,r1,r2
 1405  00001ed4  1420000c	bnez	r1,L66_LF2
 1406  00001ed8  54000000	nop; delay slot nop
 1407  00001edc  08000024	j	L65_LF2
 1408  00001ee0  54000000	nop; delay slot nop
 1409  00001ee4          	L67_LF2:
 1410  00001ee4          	L66_LF2:
 1411  00001ee4  8fc1fff4	lw	r1,-12(r30)
 1412  00001ee8  00011820	add	r3,r0,r1
 1413  00001eec  50620002	slli	r2,r3,#0x2
 1414  00001ef0  00411020	add	r2,r2,r1
 1415  00001ef4  50410001	slli	r1,r2,#0x1
 1416  00001ef8  afc1fff4	sw	-12(r30),r1
 1417  00001efc  0bffffc8	j	L64_LF2
 1418  00001f00  54000000	nop; delay slot nop
 1419  00001f04          	L65_LF2:
 1420  00001f04  54000000	nop
 1421  00001f08          	L68_LF2:
 1422  00001f08  8fc1fff4	lw	r1,-12(r30)
 1423  00001f0c  2002000a	addi	r2,r0,#10
 1424  00001f10  00200035	movi2fp	f0,r1
 1425  00001f14  00400835	movi2fp	f1,r2
 1426  00001f18  0401000f	div	f0,f0,f1
 1427  00001f1c  00000834	movfp2i	r1,f0
 1428  00001f20  afc1fff4	sw	-12(r30),r1
 1429  00001f24  8fc10004	lw	r1,4(r30)
 1430  00001f28  20220001	addi	r2,r1,#1
 1431  00001f2c  afc20004	sw	4(r30),r2
 1432  00001f30  8fc20000	lw	r2,(r30)
 1433  00001f34  8fc3fff4	lw	r3,-12(r30)
 1434  00001f38  00400035	movi2fp	f0,r2
 1435  00001f3c  00600835	movi2fp	f1,r3
 1436  00001f40  0401000f	div	f0,f0,f1
 1437  00001f44  00001034	movfp2i	r2,f0
 1438  00001f48  00021820	add	r3,r0,r2
 1439  00001f4c  20620030	addi	r2,r3,#48
 1440  00001f50  a0220000	sb	(r1),r2
 1441  00001f54  8fc10000	lw	r1,(r30)
 1442  00001f58  8fc3fff4	lw	r3,-12(r30)
 1443  00001f5c  00200035	movi2fp	f0,r1
 1444  00001f60  00600835	movi2fp	f1,r3
 1445  00001f64  0401000f	div	f0,f0,f1
 1446  00001f68  00001034	movfp2i	r2,f0
 1447  00001f6c  8fc3fff4	lw	r3,-12(r30)
 1448  00001f70  00400035	movi2fp	f0,r2
 1449  00001f74  00600835	movi2fp	f1,r3
 1450  00001f78  0401000e	mult	f0,f0,f1
 1451  00001f7c  00001034	movfp2i	r2,f0
 1452  00001f80  00220822	sub	r1,r1,r2
 1453  00001f84  afc10000	sw	(r30),r1
 1454  00001f88          	L70_LF2:
 1455  00001f88  8fc1fff4	lw	r1,-12(r30)
 1456  00001f8c  6c220001	sgti	r2,r1,#1
 1457  00001f90  1440000c	bnez	r2,L71_LF2
 1458  00001f94  54000000	nop; delay slot nop
 1459  00001f98  0800000c	j	L61_LF2
 1460  00001f9c  54000000	nop; delay slot nop
 1461  00001fa0          	L71_LF2:
 1462  00001fa0  0bffff64	j	L68_LF2
 1463  00001fa4  54000000	nop; delay slot nop
 1464  00001fa8          	L69_LF2:
 1465  00001fa8          	L63_LF2:
 1466  00001fa8          	L61_LF2:
 1467  00001fa8  8fc10004	lw	r1,4(r30)
 1468  00001fac  20020000	addi	r2,r0,(#0x0)&0xff
 1469  00001fb0  a0220000	sb	(r1),r2
 1470  00001fb4          	L59_LF2:
 1471  00001fb4  8fa20000	lw	r2,0(r29)
 1472  00001fb8  8fa30004	lw	r3,4(r29)
 1473  00001fbc  8fdffff8	lw	r31,-8(r30)
 1474  00001fc0  001ee820	add	r29,r0,r30
 1475  00001fc4  8fdefffc	lw	r30,-4(r30)
 1476  00001fc8  4be00000	jr	r31
 1477  00001fcc  54000000	nop
 1478  00001fd0          	.endproc _ditoa
 1479  00001fd0          	.align 2
 1480  00001fd0          	.proc _dstrtol
 1481  00001fd0          	.global _dstrtol
 1482  00001fd0          	_dstrtol:
 1483                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1484  00001fd0  afbefffc	sw	-4(r29),r30; push fp
 1485  00001fd4  001df020	add	r30,r0,r29; fp = sp
 1486  00001fd8  afbffff8	sw	-8(r29),r31; push ret addr
 1487  00001fdc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1488  00001fe0  afa20000	sw	0(r29),r2
 1489  00001fe4  20010000	addi	r1,r0,#0
 1490  00001fe8  afc1fff4	sw	-12(r30),r1
 1491  00001fec          	L73_LF2:
 1492  00001fec  8fc10000	lw	r1,(r30)
 1493  00001ff0  90220000	lbu	r2,(r1)
 1494  00001ff4  60410020	seqi	r1,r2,#32
 1495  00001ff8  14200034	bnez	r1,L75_LF2
 1496  00001ffc  54000000	nop; delay slot nop
 1497  00002000  8fc10000	lw	r1,(r30)
 1498  00002004  90220000	lbu	r2,(r1)
 1499  00002008  60410009	seqi	r1,r2,#9
 1500  0000200c  14200020	bnez	r1,L75_LF2
 1501  00002010  54000000	nop; delay slot nop
 1502  00002014  8fc10000	lw	r1,(r30)
 1503  00002018  90220000	lbu	r2,(r1)
 1504  0000201c  6041000a	seqi	r1,r2,#10
 1505  00002020  1420000c	bnez	r1,L75_LF2
 1506  00002024  54000000	nop; delay slot nop
 1507  00002028  0800001c	j	L74_LF2
 1508  0000202c  54000000	nop; delay slot nop
 1509  00002030          	L75_LF2:
 1510  00002030  8fc20000	lw	r2,(r30)
 1511  00002034  20410001	addi	r1,r2,#1
 1512  00002038  00011020	add	r2,r0,r1
 1513  0000203c  afc20000	sw	(r30),r2
 1514  00002040  0bffffa8	j	L73_LF2
 1515  00002044  54000000	nop; delay slot nop
 1516  00002048          	L74_LF2:
 1517  00002048  8fc10004	lw	r1,4(r30)
 1518  0000204c  64220000	snei	r2,r1,#0
 1519  00002050  10400010	beqz	r2,L76_LF2
 1520  00002054  54000000	nop; delay slot nop
 1521  00002058  8fc10004	lw	r1,4(r30)
 1522  0000205c  8fc20000	lw	r2,(r30)
 1523  00002060  ac220000	sw	(r1),r2
 1524  00002064          	L76_LF2:
 1525  00002064  8fc10000	lw	r1,(r30)
 1526  00002068  90220000	lbu	r2,(r1)
 1527  0000206c  64410000	snei	r1,r2,#0
 1528  00002070  14200010	bnez	r1,L77_LF2
 1529  00002074  54000000	nop; delay slot nop
 1530  00002078  8fc1fff4	lw	r1,-12(r30)
 1531  0000207c  08000294	j	L72_LF2
 1532  00002080  54000000	nop; delay slot nop
 1533  00002084          	L77_LF2:
 1534  00002084  8fc10000	lw	r1,(r30)
 1535  00002088  90220000	lbu	r2,(r1)
 1536  0000208c  6041002d	seqi	r1,r2,#45
 1537  00002090  10200024	beqz	r1,L78_LF2
 1538  00002094  54000000	nop; delay slot nop
 1539  00002098  2001ffff	addi	r1,r0,#-1
 1540  0000209c  afc1ffec	sw	-20(r30),r1
 1541  000020a0  8fc20000	lw	r2,(r30)
 1542  000020a4  20410001	addi	r1,r2,#1
 1543  000020a8  00011020	add	r2,r0,r1
 1544  000020ac  afc20000	sw	(r30),r2
 1545  000020b0  0800000c	j	L79_LF2
 1546  000020b4  54000000	nop; delay slot nop
 1547  000020b8          	L78_LF2:
 1548  000020b8  20010001	addi	r1,r0,#1
 1549  000020bc  afc1ffec	sw	-20(r30),r1
 1550  000020c0          	L79_LF2:
 1551  000020c0  8fc10008	lw	r1,8(r30)
 1552  000020c4  64220000	snei	r2,r1,#0
 1553  000020c8  14400090	bnez	r2,L80_LF2
 1554  000020cc  54000000	nop; delay slot nop
 1555  000020d0  8fc10000	lw	r1,(r30)
 1556  000020d4  90220000	lbu	r2,(r1)
 1557  000020d8  60410030	seqi	r1,r2,#48
 1558  000020dc  10200074	beqz	r1,L81_LF2
 1559  000020e0  54000000	nop; delay slot nop
 1560  000020e4  8fc20000	lw	r2,(r30)
 1561  000020e8  20410001	addi	r1,r2,#1
 1562  000020ec  00011020	add	r2,r0,r1
 1563  000020f0  afc20000	sw	(r30),r2
 1564  000020f4  8fc10000	lw	r1,(r30)
 1565  000020f8  90220000	lbu	r2,(r1)
 1566  000020fc  60410078	seqi	r1,r2,#120
 1567  00002100  14200020	bnez	r1,L83_LF2
 1568  00002104  54000000	nop; delay slot nop
 1569  00002108  8fc10000	lw	r1,(r30)
 1570  0000210c  90220000	lbu	r2,(r1)
 1571  00002110  60410058	seqi	r1,r2,#88
 1572  00002114  1420000c	bnez	r1,L83_LF2
 1573  00002118  54000000	nop; delay slot nop
 1574  0000211c  08000024	j	L82_LF2
 1575  00002120  54000000	nop; delay slot nop
 1576  00002124          	L83_LF2:
 1577  00002124  20010010	addi	r1,r0,#16
 1578  00002128  afc10008	sw	8(r30),r1
 1579  0000212c  8fc20000	lw	r2,(r30)
 1580  00002130  20410001	addi	r1,r2,#1
 1581  00002134  00011020	add	r2,r0,r1
 1582  00002138  afc20000	sw	(r30),r2
 1583  0000213c  0800000c	j	L84_LF2
 1584  00002140  54000000	nop; delay slot nop
 1585  00002144          	L82_LF2:
 1586  00002144  20010008	addi	r1,r0,#8
 1587  00002148  afc10008	sw	8(r30),r1
 1588  0000214c          	L84_LF2:
 1589  0000214c  0800000c	j	L80_LF2
 1590  00002150  54000000	nop; delay slot nop
 1591  00002154          	L81_LF2:
 1592  00002154  2001000a	addi	r1,r0,#10
 1593  00002158  afc10008	sw	8(r30),r1
 1594  0000215c          	L85_LF2:
 1595  0000215c          	L80_LF2:
 1596  0000215c  8fc10008	lw	r1,8(r30)
 1597  00002160  70220000	slei	r2,r1,#0
 1598  00002164  1440001c	bnez	r2,L87_LF2
 1599  00002168  54000000	nop; delay slot nop
 1600  0000216c  8fc10008	lw	r1,8(r30)
 1601  00002170  6c220010	sgti	r2,r1,#16
 1602  00002174  1440000c	bnez	r2,L87_LF2
 1603  00002178  54000000	nop; delay slot nop
 1604  0000217c  08000010	j	L86_LF2
 1605  00002180  54000000	nop; delay slot nop
 1606  00002184          	L87_LF2:
 1607  00002184  8fc1fff4	lw	r1,-12(r30)
 1608  00002188  08000188	j	L72_LF2
 1609  0000218c  54000000	nop; delay slot nop
 1610  00002190          	L86_LF2:
 1611  00002190  54000000	nop
 1612  00002194          	L88_LF2:
 1613  00002194  8fc10000	lw	r1,(r30)
 1614  00002198  90220000	lbu	r2,(r1)
 1615  0000219c  6c41002f	sgtui	r1,r2,#47
 1616  000021a0  10200030	beqz	r1,L91_LF2
 1617  000021a4  54000000	nop; delay slot nop
 1618  000021a8  8fc10000	lw	r1,(r30)
 1619  000021ac  90220000	lbu	r2,(r1)
 1620  000021b0  70410039	sleui	r1,r2,#57
 1621  000021b4  1020001c	beqz	r1,L91_LF2
 1622  000021b8  54000000	nop; delay slot nop
 1623  000021bc  8fc10000	lw	r1,(r30)
 1624  000021c0  90220000	lbu	r2,(r1)
 1625  000021c4  2041ffd0	addi	r1,r2,#-48
 1626  000021c8  afc1fff0	sw	-16(r30),r1
 1627  000021cc  0800008c	j	L92_LF2
 1628  000021d0  54000000	nop; delay slot nop
 1629  000021d4          	L91_LF2:
 1630  000021d4  8fc10000	lw	r1,(r30)
 1631  000021d8  90220000	lbu	r2,(r1)
 1632  000021dc  6c410060	sgtui	r1,r2,#96
 1633  000021e0  10200030	beqz	r1,L93_LF2
 1634  000021e4  54000000	nop; delay slot nop
 1635  000021e8  8fc10000	lw	r1,(r30)
 1636  000021ec  90220000	lbu	r2,(r1)
 1637  000021f0  7041007a	sleui	r1,r2,#122
 1638  000021f4  1020001c	beqz	r1,L93_LF2
 1639  000021f8  54000000	nop; delay slot nop
 1640  000021fc  8fc10000	lw	r1,(r30)
 1641  00002200  90220000	lbu	r2,(r1)
 1642  00002204  2041ffa9	addi	r1,r2,#-87
 1643  00002208  afc1fff0	sw	-16(r30),r1
 1644  0000220c  0800004c	j	L92_LF2
 1645  00002210  54000000	nop; delay slot nop
 1646  00002214          	L93_LF2:
 1647  00002214  8fc10000	lw	r1,(r30)
 1648  00002218  90220000	lbu	r2,(r1)
 1649  0000221c  6c410040	sgtui	r1,r2,#64
 1650  00002220  10200030	beqz	r1,L95_LF2
 1651  00002224  54000000	nop; delay slot nop
 1652  00002228  8fc10000	lw	r1,(r30)
 1653  0000222c  90220000	lbu	r2,(r1)
 1654  00002230  7041005a	sleui	r1,r2,#90
 1655  00002234  1020001c	beqz	r1,L95_LF2
 1656  00002238  54000000	nop; delay slot nop
 1657  0000223c  8fc10000	lw	r1,(r30)
 1658  00002240  90220000	lbu	r2,(r1)
 1659  00002244  2041ffc9	addi	r1,r2,#-55
 1660  00002248  afc1fff0	sw	-16(r30),r1
 1661  0000224c  0800000c	j	L92_LF2
 1662  00002250  54000000	nop; delay slot nop
 1663  00002254          	L95_LF2:
 1664  00002254  200103e8	addi	r1,r0,#1000
 1665  00002258  afc1fff0	sw	-16(r30),r1
 1666  0000225c          	L96_LF2:
 1667  0000225c          	L94_LF2:
 1668  0000225c          	L92_LF2:
 1669  0000225c  8fc1fff0	lw	r1,-16(r30)
 1670  00002260  8fc20008	lw	r2,8(r30)
 1671  00002264  0022082a	slt	r1,r1,r2
 1672  00002268  10200040	beqz	r1,L90_LF2
 1673  0000226c  54000000	nop; delay slot nop
 1674  00002270  8fc1fff4	lw	r1,-12(r30)
 1675  00002274  8fc20008	lw	r2,8(r30)
 1676  00002278  00200035	movi2fp	f0,r1
 1677  0000227c  00400835	movi2fp	f1,r2
 1678  00002280  0401000e	mult	f0,f0,f1
 1679  00002284  00000834	movfp2i	r1,f0
 1680  00002288  afc1fff4	sw	-12(r30),r1
 1681  0000228c  8fc1fff4	lw	r1,-12(r30)
 1682  00002290  8fc2fff0	lw	r2,-16(r30)
 1683  00002294  00220820	add	r1,r1,r2
 1684  00002298  afc1fff4	sw	-12(r30),r1
 1685  0000229c  8fc20000	lw	r2,(r30)
 1686  000022a0  20410001	addi	r1,r2,#1
 1687  000022a4  00011020	add	r2,r0,r1
 1688  000022a8  afc20000	sw	(r30),r2
 1689  000022ac          	L97_LF2:
 1690  000022ac          	L90_LF2:
 1691  000022ac  8fc1fff0	lw	r1,-16(r30)
 1692  000022b0  8fc20008	lw	r2,8(r30)
 1693  000022b4  0022082a	slt	r1,r1,r2
 1694  000022b8  1420000c	bnez	r1,L98_LF2
 1695  000022bc  54000000	nop; delay slot nop
 1696  000022c0  0800000c	j	L89_LF2
 1697  000022c4  54000000	nop; delay slot nop
 1698  000022c8          	L98_LF2:
 1699  000022c8  0bfffec8	j	L88_LF2
 1700  000022cc  54000000	nop; delay slot nop
 1701  000022d0          	L89_LF2:
 1702  000022d0  8fc10004	lw	r1,4(r30)
 1703  000022d4  64220000	snei	r2,r1,#0
 1704  000022d8  10400010	beqz	r2,L99_LF2
 1705  000022dc  54000000	nop; delay slot nop
 1706  000022e0  8fc10004	lw	r1,4(r30)
 1707  000022e4  8fc20000	lw	r2,(r30)
 1708  000022e8  ac220000	sw	(r1),r2
 1709  000022ec          	L99_LF2:
 1710  000022ec  8fc1fff4	lw	r1,-12(r30)
 1711  000022f0  8fc2ffec	lw	r2,-20(r30)
 1712  000022f4  00200035	movi2fp	f0,r1
 1713  000022f8  00400835	movi2fp	f1,r2
 1714  000022fc  0401000e	mult	f0,f0,f1
 1715  00002300  00000834	movfp2i	r1,f0
 1716  00002304  afc1fff4	sw	-12(r30),r1
 1717  00002308  8fc1fff4	lw	r1,-12(r30)
 1718  0000230c  08000004	j	L72_LF2
 1719  00002310  54000000	nop; delay slot nop
 1720  00002314          	L72_LF2:
 1721  00002314  8fa20000	lw	r2,0(r29)
 1722  00002318  8fdffff8	lw	r31,-8(r30)
 1723  0000231c  001ee820	add	r29,r0,r30
 1724  00002320  8fdefffc	lw	r30,-4(r30)
 1725  00002324  4be00000	jr	r31
 1726  00002328  54000000	nop
 1727  0000232c          	.endproc _dstrtol
 1728  0000232c          	.align 2
 1729  0000232c          	.proc _bcopy
 1730  0000232c          	.global _bcopy
 1731  0000232c          	_bcopy:
 1732                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1733  0000232c  afbefffc	sw	-4(r29),r30; push fp
 1734  00002330  001df020	add	r30,r0,r29; fp = sp
 1735  00002334  afbffff8	sw	-8(r29),r31; push ret addr
 1736  00002338  2fbd0010	subui	r29,r29,#16; alloc local storage
 1737  0000233c  afa20000	sw	0(r29),r2
 1738  00002340  afa30004	sw	4(r29),r3
 1739  00002344  54000000	nop
 1740  00002348          	L101_LF2:
 1741  00002348  8fc10008	lw	r1,8(r30)
 1742  0000234c  2022ffff	addi	r2,r1,#-1
 1743  00002350  afc20008	sw	8(r30),r2
 1744  00002354  6c210000	sgti	r1,r1,#0
 1745  00002358  1420000c	bnez	r1,L103_LF2
 1746  0000235c  54000000	nop; delay slot nop
 1747  00002360  0800002c	j	L102_LF2
 1748  00002364  54000000	nop; delay slot nop
 1749  00002368          	L103_LF2:
 1750  00002368  8fc10004	lw	r1,4(r30)
 1751  0000236c  20220001	addi	r2,r1,#1
 1752  00002370  afc20004	sw	4(r30),r2
 1753  00002374  8fc20000	lw	r2,(r30)
 1754  00002378  20430001	addi	r3,r2,#1
 1755  0000237c  afc30000	sw	(r30),r3
 1756  00002380  80420000	lb	r2,(r2)
 1757  00002384  a0220000	sb	(r1),r2
 1758  00002388  0bffffbc	j	L101_LF2
 1759  0000238c  54000000	nop; delay slot nop
 1760  00002390          	L102_LF2:
 1761  00002390          	L100_LF2:
 1762  00002390  8fa20000	lw	r2,0(r29)
 1763  00002394  8fa30004	lw	r3,4(r29)
 1764  00002398  8fdffff8	lw	r31,-8(r30)
 1765  0000239c  001ee820	add	r29,r0,r30
 1766  000023a0  8fdefffc	lw	r30,-4(r30)
 1767  000023a4  4be00000	jr	r31
 1768  000023a8  54000000	nop
 1769  000023ac          	.endproc _bcopy
 1770  000023ac          	.align 2
 1771  000023ac          	.proc _bzero
 1772  000023ac          	.global _bzero
 1773  000023ac          	_bzero:
 1774                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1775  000023ac  afbefffc	sw	-4(r29),r30; push fp
 1776  000023b0  001df020	add	r30,r0,r29; fp = sp
 1777  000023b4  afbffff8	sw	-8(r29),r31; push ret addr
 1778  000023b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1779  000023bc  afa20000	sw	0(r29),r2
 1780  000023c0  54000000	nop
 1781  000023c4          	L105_LF2:
 1782  000023c4  8fc10004	lw	r1,4(r30)
 1783  000023c8  2022ffff	addi	r2,r1,#-1
 1784  000023cc  afc20004	sw	4(r30),r2
 1785  000023d0  6c210000	sgti	r1,r1,#0
 1786  000023d4  1420000c	bnez	r1,L107_LF2
 1787  000023d8  54000000	nop; delay slot nop
 1788  000023dc  08000020	j	L106_LF2
 1789  000023e0  54000000	nop; delay slot nop
 1790  000023e4          	L107_LF2:
 1791  000023e4  8fc10000	lw	r1,(r30)
 1792  000023e8  20220001	addi	r2,r1,#1
 1793  000023ec  afc20000	sw	(r30),r2
 1794  000023f0  20020000	addi	r2,r0,(#0x0)&0xff
 1795  000023f4  a0220000	sb	(r1),r2
 1796  000023f8  0bffffc8	j	L105_LF2
 1797  000023fc  54000000	nop; delay slot nop
 1798  00002400          	L106_LF2:
 1799  00002400          	L104_LF2:
 1800  00002400  8fa20000	lw	r2,0(r29)
 1801  00002404  8fdffff8	lw	r31,-8(r30)
 1802  00002408  001ee820	add	r29,r0,r30
 1803  0000240c  8fdefffc	lw	r30,-4(r30)
 1804  00002410  4be00000	jr	r31
 1805  00002414  54000000	nop
 1806  00002418          	.endproc _bzero
 1807  00002418          	.align 2
 1808  00002418          	.proc _min
 1809  00002418          	.global _min
 1810  00002418          	_min:
 1811                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1812  00002418  afbefffc	sw	-4(r29),r30; push fp
 1813  0000241c  001df020	add	r30,r0,r29; fp = sp
 1814  00002420  afbffff8	sw	-8(r29),r31; push ret addr
 1815  00002424  2fbd0010	subui	r29,r29,#16; alloc local storage
 1816  00002428  afa20000	sw	0(r29),r2
 1817  0000242c  afa30004	sw	4(r29),r3
 1818  00002430  8fc10000	lw	r1,(r30)
 1819  00002434  8fc20004	lw	r2,4(r30)
 1820  00002438  0022182c	sle	r3,r1,r2
 1821  0000243c  14600008	bnez	r3,L109_LF2
 1822  00002440  54000000	nop; delay slot nop
 1823  00002444  8fc10004	lw	r1,4(r30)
 1824  00002448          	L109_LF2:
 1825  00002448  08000004	j	L108_LF2
 1826  0000244c  54000000	nop; delay slot nop
 1827  00002450          	L108_LF2:
 1828  00002450  8fa20000	lw	r2,0(r29)
 1829  00002454  8fa30004	lw	r3,4(r29)
 1830  00002458  8fdffff8	lw	r31,-8(r30)
 1831  0000245c  001ee820	add	r29,r0,r30
 1832  00002460  8fdefffc	lw	r30,-4(r30)
 1833  00002464  4be00000	jr	r31
 1834  00002468  54000000	nop
 1835  0000246c          	.endproc _min
 1836  0000246c          	.align 2
 1837  0000246c          	.proc _max
 1838  0000246c          	.global _max
 1839  0000246c          	_max:
 1840                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1841  0000246c  afbefffc	sw	-4(r29),r30; push fp
 1842  00002470  001df020	add	r30,r0,r29; fp = sp
 1843  00002474  afbffff8	sw	-8(r29),r31; push ret addr
 1844  00002478  2fbd0010	subui	r29,r29,#16; alloc local storage
 1845  0000247c  afa20000	sw	0(r29),r2
 1846  00002480  afa30004	sw	4(r29),r3
 1847  00002484  8fc10000	lw	r1,(r30)
 1848  00002488  8fc20004	lw	r2,4(r30)
 1849  0000248c  0022182d	sge	r3,r1,r2
 1850  00002490  14600008	bnez	r3,L111_LF2
 1851  00002494  54000000	nop; delay slot nop
 1852  00002498  8fc10004	lw	r1,4(r30)
 1853  0000249c          	L111_LF2:
 1854  0000249c  08000004	j	L110_LF2
 1855  000024a0  54000000	nop; delay slot nop
 1856  000024a4          	L110_LF2:
 1857  000024a4  8fa20000	lw	r2,0(r29)
 1858  000024a8  8fa30004	lw	r3,4(r29)
 1859  000024ac  8fdffff8	lw	r31,-8(r30)
 1860  000024b0  001ee820	add	r29,r0,r30
 1861  000024b4  8fdefffc	lw	r30,-4(r30)
 1862  000024b8  4be00000	jr	r31
 1863  000024bc  54000000	nop
 1864  000024c0          	.endproc _max
 1865                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1866                      ;;;
 1867                      ;;; Most of the traps are called in files from libtraps.
 1870  000024c0          	.align 2
 1871  000024c0          	.proc _exit
 1872  000024c0          	.global _exit
 1873  000024c0          	_exit:
 1874  000024c0  44000300	trap	#0x300
 1875  000024c4  4be00000	jr	r31
 1876  000024c8  54000000	nop
 1877  000024cc          	.endproc _exit
 1879                      ; for the benefit of gcc.
 1880  000024cc          	.proc ___main
 1881  000024cc          	.global ___main
 1882  000024cc          	___main:
 1883  000024cc  4be00000	jr	r31
 1884  000024d0  54000000	nop
 1885  000024d4          	.endproc ___main
 1886  000024d4          	.text
 1887  000024d4          	.global _etext
 1888  000024d4          	_etext:
 1889  000024d4          	.align 3
 1890  000024d8          	.data
 1891  00008160          	.global _edata
 1892  00008160          	_edata:
