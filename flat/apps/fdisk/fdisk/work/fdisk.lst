 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 45056
    3                      ; Data size: 20756
    4                      ; Text size: 5468
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  0a0a3d3d	.ascii "\n\n======FDISK START======\n\n\000"
   94  00003010  3d3d3d3d	
   94  00003014  46444953	
   94  00003018  4b205354	
   94  0000301c  4152543d	
   94  00003020  3d3d3d3d	
   94  00003024  3d0a0a00	
   95  00003028          	.align 2
   96  00003028          	LC1_LF0:
   97  00003028  4552524f	.ascii "ERROR: No Input\n\n\000"
   97  0000302c  523a204e	
   97  00003030  6f20496e	
   97  00003034  7075740a	
   97  00003038  0a00    	
   98  0000303a          	.align 2
   99  0000303c          	LC2_LF0:
  100  0000303c  4572726f	.ascii "Error: DFS Inode is not 96 bytes!\n\000"
  100  00003040  723a2044	
  100  00003044  46532049	
  100  00003048  6e6f6465	
  100  0000304c  20697320	
  100  00003050  6e6f7420	
  100  00003054  39362062	
  100  00003058  79746573	
  100  0000305c  210a00  	
  101  0000305f          	.align 2
  102  00003060          	LC3_LF0:
  103  00003060  53756363	.ascii "Success: DFS Inode is 96 bytes!\n\000"
  103  00003064  6573733a	
  103  00003068  20444653	
  103  0000306c  20496e6f	
  103  00003070  64652069	
  103  00003074  73203936	
  103  00003078  20627974	
  103  0000307c  6573210a	
  103  00003080  00      	
  104  00003081          	.align 2
  105  00003084          	LC4_LF0:
  106  00003084  4572726f	.ascii "Error: Disk does not exist!\n\000"
  106  00003088  723a2044	
  106  0000308c  69736b20	
  106  00003090  646f6573	
  106  00003094  206e6f74	
  106  00003098  20657869	
  106  0000309c  7374210a	
  106  000030a0  00      	
  107  000030a1          	.align 2
  108  000030a4          	LC5_LF0:
  109  000030a4  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  109  000030a8  6b202825	
  109  000030ac  64293a20	
  109  000030b0  466f726d	
  109  000030b4  61747465	
  109  000030b8  64204446	
  109  000030bc  53206469	
  109  000030c0  736b2066	
  109  000030c4  6f722025	
  109  000030c8  64206279	
  109  000030cc  7465732e	
  109  000030d0  0a00    	
  110  000030d2          	.text
  111  000010d4          	.align 2
  112  000010d4          	.proc _main
  113  000010d4          	.global _main
  114  000010d4          	_main:
  115                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  116  000010d4  afbefffc	sw	-4(r29),r30; push fp
  117  000010d8  001df020	add	r30,r0,r29; fp = sp
  118  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  119  000010e0  2fbd0408	subui	r29,r29,#1032; alloc local storage
  120  000010e4  8fc20000	lw	r2,(r30)
  121  000010e8  0c001468	jal	___main
  122  000010ec  54000000	nop; not filled.
  123  000010f0  23bdfff8	addi	r29,r29,#-8
  124  000010f4  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  125  000010f8  254a300c	addui	r10,r10,(LC0_LF0)&0xffff
  126  000010fc  afaa0000	sw	(r29),r10
  127  00001100  0c000510	jal	_Printf
  128  00001104  54000000	nop; not filled.
  129  00001108  23bd0008	addi	r29,r29,#8
  130  0000110c  64410001	snei	r1,r2,#1
  131  00001110  10200028	beqz	r1,L14_LF0
  132  00001114  54000000	nop; not filled.
  133  00001118  23bdfff8	addi	r29,r29,#-8
  134  0000111c  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  135  00001120  254a3028	addui	r10,r10,(LC1_LF0)&0xffff
  136  00001124  afaa0000	sw	(r29),r10
  137  00001128  0c0004e8	jal	_Printf
  138  0000112c  54000000	nop; not filled.
  139  00001130  0c000678	jal	_Exit
  140  00001134  54000000	nop; not filled.
  141  00001138  23bd0008	addi	r29,r29,#8
  142  0000113c          	L14_LF0:
  143  0000113c  0c00060c	jal	_dfs_invalidate
  144  00001140  54000000	nop; not filled.
  145  00001144  23bdfff8	addi	r29,r29,#-8
  146  00001148  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  147  0000114c  254a3060	addui	r10,r10,(LC3_LF0)&0xffff
  148  00001150  afaa0000	sw	(r29),r10
  149  00001154  0c0004bc	jal	_Printf
  150  00001158  54000000	nop; not filled.
  151  0000115c  23bd0008	addi	r29,r29,#8
  152  00001160  0c0005c4	jal	_disk_size
  153  00001164  54000000	nop; not filled.
  154  00001168  3c020000	lhi	r2,((_disksize)>>16)&0xffff
  155  0000116c  24423004	addui	r2,r2,(_disksize)&0xffff
  156  00001170  ac410000	sw	(r2),r1
  157  00001174  0c0005bc	jal	_disk_blocksize
  158  00001178  54000000	nop; not filled.
  159  0000117c  00011020	add	r2,r0,r1
  160  00001180  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  161  00001184  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  162  00001188  ac220000	sw	(r1),r2
  163  0000118c  3c010000	lhi	r1,((_num_filesystem_blocks)>>16)&0xffff
  164  00001190  24213008	addui	r1,r1,(_num_filesystem_blocks)&0xffff
  165  00001194  200a4000	addi	r10,r0,#16384
  166  00001198  ac2a0000	sw	(r1),r10
  167  0000119c  3c030000	lhi	r3,((_sb)>>16)&0xffff
  168  000011a0  246330f8	addui	r3,r3,(_sb)&0xffff
  169  000011a4  200a0400	addi	r10,r0,#1024
  170  000011a8  ac6a0004	sw	4(r3),r10
  171  000011ac  200a4000	addi	r10,r0,#16384
  172  000011b0  ac6a0008	sw	8(r3),r10
  173  000011b4  200a0001	addi	r10,r0,#1
  174  000011b8  ac6a000c	sw	12(r3),r10
  175  000011bc  200a00c0	addi	r10,r0,#192
  176  000011c0  ac6a0010	sw	16(r3),r10
  177  000011c4  200a0013	addi	r10,r0,#19
  178  000011c8  ac6a0014	sw	20(r3),r10
  179  000011cc  200a0015	addi	r10,r0,#21
  180  000011d0  ac6a0018	sw	24(r3),r10
  181  000011d4  8c610004	lw	r1,4(r3)
  182  000011d8  00200035	movi2fp	f0,r1
  183  000011dc  00400835	movi2fp	f1,r2
  184  000011e0  04010017	divu	f0,f0,f1
  185  000011e4  00004034	movfp2i	r8,f0
  186  000011e8  0c000554	jal	_disk_create
  187  000011ec  54000000	nop; not filled.
  188  000011f0  6021ffff	seqi	r1,r1,#-1
  189  000011f4  10200028	beqz	r1,L17_LF0
  190  000011f8  54000000	nop; not filled.
  191  000011fc  23bdfff8	addi	r29,r29,#-8
  192  00001200  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  193  00001204  254a3084	addui	r10,r10,(LC4_LF0)&0xffff
  194  00001208  afaa0000	sw	(r29),r10
  195  0000120c  0c000404	jal	_Printf
  196  00001210  54000000	nop; not filled.
  197  00001214  0c000594	jal	_Exit
  198  00001218  54000000	nop; not filled.
  199  0000121c  23bd0008	addi	r29,r29,#8
  200  00001220          	L17_LF0:
  201  00001220  20040000	addi	r4,r0,#0
  202  00001224  20620010	addi	r2,r3,#16
  203  00001228  8c410000	lw	r1,(r2)
  204  0000122c  0081082a	sltu	r1,r4,r1
  205  00001230  10200068	beqz	r1,L53_LF0
  206  00001234  54000000	nop; not filled.
  207  00001238  00022820	add	r5,r0,r2
  208  0000123c  3c1f0000	lhi	r31,((_inodes)>>16)&0xffff
  209  00001240  27ff3114	addui	r31,r31,(_inodes)&0xffff
  210  00001244          	L21_LF0:
  211  00001244  200a0000	addi	r10,r0,#0
  212  00001248  afea0000	sw	(r31),r10
  213  0000124c  afea0004	sw	4(r31),r10
  214  00001250  200a0000	addi	r10,r0,(#0x0)&0xff
  215  00001254  a3ea0008	sb	8(r31),r10
  216  00001258  20030000	addi	r3,r0,#0
  217  0000125c  001f1020	add	r2,r0,r31
  218  00001260          	L25_LF0:
  219  00001260  200a0000	addi	r10,r0,#0
  220  00001264  ac4a0034	sw	52(r2),r10
  221  00001268  20420004	addi	r2,r2,#4
  222  0000126c  20630001	addi	r3,r3,#1
  223  00001270  70610009	slei	r1,r3,#9
  224  00001274  1420ffe8	bnez	r1,L25_LF0
  225  00001278  54000000	nop; not filled.
  226  0000127c  afea005c	sw	92(r31),r10
  227  00001280  23ff0060	addi	r31,r31,#96
  228  00001284  20840001	addi	r4,r4,#1
  229  00001288  8ca10000	lw	r1,(r5)
  230  0000128c  0081082a	sltu	r1,r4,r1
  231  00001290  1420ffb0	bnez	r1,L21_LF0
  232  00001294  54000000	nop; not filled.
  233  00001298  20040000	addi	r4,r0,#0
  234  0000129c          	L53_LF0:
  235  0000129c  3c030000	lhi	r3,((_sb+8)>>16)&0xffff
  236  000012a0  24633100	addui	r3,r3,(_sb+8)&0xffff
  237  000012a4  8c610000	lw	r1,(r3)
  238  000012a8  58210005	srli	r1,r1,#0x5
  239  000012ac  0081082a	sltu	r1,r4,r1
  240  000012b0  10200030	beqz	r1,L29_LF0
  241  000012b4  54000000	nop; not filled.
  242  000012b8  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  243  000012bc  24427914	addui	r2,r2,(_fbv)&0xffff
  244  000012c0          	L31_LF0:
  245  000012c0  200a0000	addi	r10,r0,#0
  246  000012c4  ac4a0000	sw	(r2),r10
  247  000012c8  20420004	addi	r2,r2,#4
  248  000012cc  20840001	addi	r4,r4,#1
  249  000012d0  8c610000	lw	r1,(r3)
  250  000012d4  58210005	srli	r1,r1,#0x5
  251  000012d8  0081082a	sltu	r1,r4,r1
  252  000012dc  1420ffe0	bnez	r1,L31_LF0
  253  000012e0  54000000	nop; not filled.
  254  000012e4          	L29_LF0:
  255  000012e4  3c010000	lhi	r1,((_fbv)>>16)&0xffff
  256  000012e8  24217914	addui	r1,r1,(_fbv)&0xffff
  257  000012ec  200af800	addi	r10,r0,#-2048
  258  000012f0  ac2a0000	sw	(r1),r10
  259  000012f4  00012820	add	r5,r0,r1
  260  000012f8  3c010000	lhi	r1,((_sb+20)>>16)&0xffff
  261  000012fc  2421310c	addui	r1,r1,(_sb+20)&0xffff
  262  00001300  8c240000	lw	r4,(r1)
  263  00001304  8c210004	lw	r1,4(r1)
  264  00001308  0081082a	sltu	r1,r4,r1
  265  0000130c  102000a0	beqz	r1,L34_LF0
  266  00001310  54000000	nop; not filled.
  267  00001314  23c7fbf8	addi	r7,r30,#-1032
  268  00001318  3c090000	lhi	r9,((_diskblocksize)>>16)&0xffff
  269  0000131c  25293000	addui	r9,r9,(_diskblocksize)&0xffff
  270  00001320  00800035	movi2fp	f0,r4
  271  00001324  01000835	movi2fp	f1,r8
  272  00001328  0401000e	mult	f0,f0,f1
  273  0000132c  00003034	movfp2i	r6,f0
  274  00001330          	L36_LF0:
  275  00001330  20030000	addi	r3,r0,#0
  276  00001334  0068082a	sltu	r1,r3,r8
  277  00001338  10200054	beqz	r1,L35_LF0
  278  0000133c  54000000	nop; not filled.
  279  00001340  00061020	add	r2,r0,r6
  280  00001344          	L40_LF0:
  281  00001344  23bdfff0	addi	r29,r29,#-16
  282  00001348  afa50000	sw	(r29),r5
  283  0000134c  afa70004	sw	4(r29),r7
  284  00001350  8d2a0000	lw	r10,(r9)
  285  00001354  afaa0008	sw	8(r29),r10
  286  00001358  0c001058	jal	_bcopy
  287  0000135c  54000000	nop; not filled.
  288  00001360  afa20000	sw	(r29),r2
  289  00001364  afa70004	sw	4(r29),r7
  290  00001368  0c0001e0	jal	_FdiskWriteBlock
  291  0000136c  54000000	nop; not filled.
  292  00001370  8d210000	lw	r1,(r9)
  293  00001374  00a12820	add	r5,r5,r1
  294  00001378  23bd0010	addi	r29,r29,#16
  295  0000137c  20420001	addi	r2,r2,#1
  296  00001380  20630001	addi	r3,r3,#1
  297  00001384  0068082a	sltu	r1,r3,r8
  298  00001388  1420ffb8	bnez	r1,L40_LF0
  299  0000138c  54000000	nop; not filled.
  300  00001390          	L35_LF0:
  301  00001390  00c83020	add	r6,r6,r8
  302  00001394  20840001	addi	r4,r4,#1
  303  00001398  3c010000	lhi	r1,((_sb+24)>>16)&0xffff
  304  0000139c  24213110	addui	r1,r1,(_sb+24)&0xffff
  305  000013a0  8c210000	lw	r1,(r1)
  306  000013a4  0081082a	sltu	r1,r4,r1
  307  000013a8  1420ff84	bnez	r1,L36_LF0
  308  000013ac  54000000	nop; not filled.
  309  000013b0          	L34_LF0:
  310  000013b0  3c090000	lhi	r9,((_sb)>>16)&0xffff
  311  000013b4  252930f8	addui	r9,r9,(_sb)&0xffff
  312  000013b8  200a0001	addi	r10,r0,#1
  313  000013bc  ad2a0000	sw	(r9),r10
  314  000013c0  23bdfff8	addi	r29,r29,#-8
  315  000013c4  23c3fbf8	addi	r3,r30,#-1032
  316  000013c8  afa30000	sw	(r29),r3
  317  000013cc  200a0400	addi	r10,r0,#1024
  318  000013d0  afaa0004	sw	4(r29),r10
  319  000013d4  0c00105c	jal	_bzero
  320  000013d8  54000000	nop; not filled.
  321  000013dc  23bdfff8	addi	r29,r29,#-8
  322  000013e0  afa90000	sw	(r29),r9
  323  000013e4  afa30004	sw	4(r29),r3
  324  000013e8  200a001c	addi	r10,r0,#28
  325  000013ec  afaa0008	sw	8(r29),r10
  326  000013f0  0c000fc0	jal	_bcopy
  327  000013f4  54000000	nop; not filled.
  328  000013f8  200a0001	addi	r10,r0,#1
  329  000013fc  afaa0000	sw	(r29),r10
  330  00001400  afa30004	sw	4(r29),r3
  331  00001404  0c000144	jal	_FdiskWriteBlock
  332  00001408  54000000	nop; not filled.
  333  0000140c  3c050000	lhi	r5,((_inodes)>>16)&0xffff
  334  00001410  24a53114	addui	r5,r5,(_inodes)&0xffff
  335  00001414  20040000	addi	r4,r0,#0
  336  00001418  23bd0010	addi	r29,r29,#16
  337  0000141c  8d220010	lw	r2,16(r9)
  338  00001420  50410001	slli	r1,r2,#0x1
  339  00001424  00220820	add	r1,r1,r2
  340  00001428  50220005	slli	r2,r1,#0x5
  341  0000142c  8d210004	lw	r1,4(r9)
  342  00001430  00400035	movi2fp	f0,r2
  343  00001434  00200835	movi2fp	f1,r1
  344  00001438  04010017	divu	f0,f0,f1
  345  0000143c  00000834	movfp2i	r1,f0
  346  00001440  0081082a	sltu	r1,r4,r1
  347  00001444  102000c4	beqz	r1,L44_LF0
  348  00001448  54000000	nop; not filled.
  349  0000144c  00033020	add	r6,r0,r3
  350  00001450  3c070000	lhi	r7,((_diskblocksize)>>16)&0xffff
  351  00001454  24e73000	addui	r7,r7,(_diskblocksize)&0xffff
  352  00001458  2129000c	addi	r9,r9,#12
  353  0000145c          	L46_LF0:
  354  0000145c  20030000	addi	r3,r0,#0
  355  00001460  0068082a	sltu	r1,r3,r8
  356  00001464  10200068	beqz	r1,L45_LF0
  357  00001468  54000000	nop; not filled.
  358  0000146c          	L50_LF0:
  359  0000146c  23bdfff0	addi	r29,r29,#-16
  360  00001470  afa50000	sw	(r29),r5
  361  00001474  afa60004	sw	4(r29),r6
  362  00001478  8cea0000	lw	r10,(r7)
  363  0000147c  afaa0008	sw	8(r29),r10
  364  00001480  0c000f30	jal	_bcopy
  365  00001484  54000000	nop; not filled.
  366  00001488  8d210000	lw	r1,(r9)
  367  0000148c  00240820	add	r1,r1,r4
  368  00001490  01000035	movi2fp	f0,r8
  369  00001494  00200835	movi2fp	f1,r1
  370  00001498  0401000e	mult	f0,f0,f1
  371  0000149c  00000834	movfp2i	r1,f0
  372  000014a0  00230820	add	r1,r1,r3
  373  000014a4  afa10000	sw	(r29),r1
  374  000014a8  afa60004	sw	4(r29),r6
  375  000014ac  0c00009c	jal	_FdiskWriteBlock
  376  000014b0  54000000	nop; not filled.
  377  000014b4  8ce10000	lw	r1,(r7)
  378  000014b8  00a12820	add	r5,r5,r1
  379  000014bc  23bd0010	addi	r29,r29,#16
  380  000014c0  20630001	addi	r3,r3,#1
  381  000014c4  0068082a	sltu	r1,r3,r8
  382  000014c8  1420ffa0	bnez	r1,L50_LF0
  383  000014cc  54000000	nop; not filled.
  384  000014d0          	L45_LF0:
  385  000014d0  20840001	addi	r4,r4,#1
  386  000014d4  3c030000	lhi	r3,((_sb+16)>>16)&0xffff
  387  000014d8  24633108	addui	r3,r3,(_sb+16)&0xffff
  388  000014dc  8c620000	lw	r2,(r3)
  389  000014e0  50410001	slli	r1,r2,#0x1
  390  000014e4  00220820	add	r1,r1,r2
  391  000014e8  50220005	slli	r2,r1,#0x5
  392  000014ec  8c61fff4	lw	r1,-12(r3)
  393  000014f0  00400035	movi2fp	f0,r2
  394  000014f4  00200835	movi2fp	f1,r1
  395  000014f8  04010017	divu	f0,f0,f1
  396  000014fc  00000834	movfp2i	r1,f0
  397  00001500  0081082a	sltu	r1,r4,r1
  398  00001504  1420ff54	bnez	r1,L46_LF0
  399  00001508  54000000	nop; not filled.
  400  0000150c          	L44_LF0:
  401  0000150c  0c000110	jal	_getpid
  402  00001510  54000000	nop; not filled.
  403  00001514  23bdfff0	addi	r29,r29,#-16
  404  00001518  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  405  0000151c  254a30a4	addui	r10,r10,(LC5_LF0)&0xffff
  406  00001520  afaa0000	sw	(r29),r10
  407  00001524  afa10004	sw	4(r29),r1
  408  00001528  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  409  0000152c  24213004	addui	r1,r1,(_disksize)&0xffff
  410  00001530  8c210000	lw	r1,(r1)
  411  00001534  afa10008	sw	8(r29),r1
  412  00001538  0c0000d8	jal	_Printf
  413  0000153c  54000000	nop; not filled.
  414  00001540  23bd0010	addi	r29,r29,#16
  415  00001544  0c001000	jal	_exit
  416  00001548  54000000	nop
  417  0000154c          	.endproc _main
  418  0000154c          	.data
  419  000030d2          	.align 2
  420  000030d4          	LC6_LF0:
  421  000030d4  4661696c	.ascii "Failed to write block onto disk\n\000"
  421  000030d8  65642074	
  421  000030dc  6f207772	
  421  000030e0  69746520	
  421  000030e4  626c6f63	
  421  000030e8  6b206f6e	
  421  000030ec  746f2064	
  421  000030f0  69736b0a	
  421  000030f4  00      	
  422  000030f5          	.text
  423  0000154c          	.align 2
  424  0000154c          	.proc _FdiskWriteBlock
  425  0000154c          	.global _FdiskWriteBlock
  426  0000154c          	_FdiskWriteBlock:
  427                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 1 regs to save.
  428  0000154c  afbefffc	sw	-4(r29),r30; push fp
  429  00001550  001df020	add	r30,r0,r29; fp = sp
  430  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  431  00001558  2fbd0010	subui	r29,r29,#16; alloc local storage
  432  0000155c  afa20000	sw	0(r29),r2
  433  00001560  8fc10004	lw	r1,4(r30)
  434  00001564  23bdfff8	addi	r29,r29,#-8
  435  00001568  8fc20000	lw	r2,(r30)
  436  0000156c  afa20000	sw	(r29),r2
  437  00001570  afa10004	sw	4(r29),r1
  438  00001574  0c0001a4	jal	_disk_write_block
  439  00001578  54000000	nop; not filled.
  440  0000157c  23bd0008	addi	r29,r29,#8
  441  00001580  6021ffff	seqi	r1,r1,#-1
  442  00001584  10200028	beqz	r1,L57_LF0
  443  00001588  54000000	nop; not filled.
  444  0000158c  23bdfff8	addi	r29,r29,#-8
  445  00001590  3c020000	lhi	r2,((LC6_LF0)>>16)&0xffff
  446  00001594  244230d4	addui	r2,r2,(LC6_LF0)&0xffff
  447  00001598  afa20000	sw	(r29),r2
  448  0000159c  0c000074	jal	_Printf
  449  000015a0  54000000	nop; not filled.
  450  000015a4  0c000204	jal	_Exit
  451  000015a8  54000000	nop; not filled.
  452  000015ac  23bd0008	addi	r29,r29,#8
  453  000015b0          	L57_LF0:
  454  000015b0  20010001	addi	r1,r0,#1
  455  000015b4  8fa20000	lw	r2,0(r29)
  456  000015b8  8fdffff8	lw	r31,-8(r30)
  457  000015bc  001ee820	add	r29,r0,r30
  458  000015c0  8fdefffc	lw	r30,-4(r30)
  459  000015c4  4be00000	jr	r31
  460  000015c8  54000000	nop
  461  000015cc          	.endproc _FdiskWriteBlock
  462  000015cc          	.data
  463  000030f5          	.align 2
  464  000030f8          	.global _sb
  465  000030f8          	_sb:
  466  000030f8          	.space 28
  467  00003114          	.align 2
  468  00003114          	.global _inodes
  469  00003114          	_inodes:
  470  00003114          	.space 18432
  471  00007914          	.align 2
  472  00007914          	.global _fbv
  473  00007914          	_fbv:
  474  00007914          	.space 2048
  475                      ;;;
  476                      ;;; Stub functions for DLX traps.
  477                      ;;;
  478                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  479                      ;;;
  480                      ;;; The traps such as Open and Close
  481                      ;;; (note the capital letters) are for use by user programs.  The traps
  482                      ;;; with names such as open and close (lower case) are for use by the OS.
  483                      ;;;
  485  00008114          	.text
  486  000015cc          	.align 2
  488                      ;;; The following are the traps to be used by user-level programs
  489                      ;;;
  491  000015cc          	.align 2
  492  000015cc          	.proc _Open
  493  000015cc          	.global _Open
  494  000015cc          	_Open:
  495                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  496                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  497                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  498  000015cc  44000213	trap	#0x213
  499  000015d0  4be00000	jr	r31
  500  000015d4  54000000	nop
  501  000015d8          	.endproc _Open
  503  000015d8          	.proc _Close
  504  000015d8          	.global _Close
  505  000015d8          	_Close:
  506  000015d8  44000214	trap	#0x214
  507  000015dc  4be00000	jr	r31
  508  000015e0  54000000	nop
  509  000015e4          	.endproc _Close
  511  000015e4          	.proc _Read
  512  000015e4          	.global _Read
  513  000015e4          	_Read:
  514  000015e4  44000210	trap	#0x210
  515  000015e8  4be00000	jr	r31
  516  000015ec  54000000	nop
  517  000015f0          	.endproc _Read
  519  000015f0          	.proc _Write
  520  000015f0          	.global _Write
  521  000015f0          	_Write:
  522  000015f0  44000211	trap	#0x211
  523  000015f4  4be00000	jr	r31
  524  000015f8  54000000	nop
  525  000015fc          	.endproc _Write
  527  000015fc          	.proc _Lseek
  528  000015fc          	.global _Lseek
  529  000015fc          	_Lseek:
  530  000015fc  44000212	trap	#0x212
  531  00001600  4be00000	jr	r31
  532  00001604  54000000	nop
  533  00001608          	.endproc _Lseek
  535  00001608          	.proc _Putchar
  536  00001608          	.global _Putchar
  537  00001608          	_Putchar:
  538  00001608  44000280	trap	#0x280
  539  0000160c  4be00000	jr	r31
  540  00001610  54000000	nop
  541  00001614          	.endproc _Putchar
  543  00001614          	.proc _Printf
  544  00001614          	.global _Printf
  545  00001614          	_Printf:
  546  00001614  44000201	trap	#0x201
  547  00001618  4be00000	jr	r31
  548  0000161c  54000000	nop
  549  00001620          	.endproc _Printf
  551  00001620          	.proc _getpid
  552  00001620          	.global _getpid
  553  00001620          	_getpid:
  554  00001620  44000431	trap	#0x431
  555  00001624  4be00000	jr	r31
  556  00001628  54000000	nop
  557  0000162c          	.endproc _getpid
  559  0000162c          	.proc _process_create
  560  0000162c          	.global _process_create
  561  0000162c          	_process_create:
  562  0000162c  44000432	trap	#0x432
  563  00001630  4be00000	jr	r31
  564  00001634  54000000	nop
  565  00001638          	.endproc _process_create
  567  00001638          	.proc _shmget
  568  00001638          	.global _shmget
  569  00001638          	_shmget:
  570  00001638  44000440	trap	#0x440
  571  0000163c  4be00000	jr	r31
  572  00001640  54000000	nop
  573  00001644          	.endproc _shmget
  575  00001644          	.proc _shmat
  576  00001644          	.global _shmat
  577  00001644          	_shmat:
  578  00001644  44000441	trap	#0x441
  579  00001648  4be00000	jr	r31
  580  0000164c  54000000	nop
  581  00001650          	.endproc _shmat
  583  00001650          	.proc _sem_create
  584  00001650          	.global _sem_create
  585  00001650          	_sem_create:
  586  00001650  44000450	trap	#0x450
  587  00001654  4be00000	jr	r31
  588  00001658  54000000	nop
  589  0000165c          	.endproc _sem_create
  591  0000165c          	.proc _sem_wait
  592  0000165c          	.global _sem_wait
  593  0000165c          	_sem_wait:
  594  0000165c  44000451	trap	#0x451
  595  00001660  4be00000	jr	r31
  596  00001664  54000000	nop
  597  00001668          	.endproc _sem_wait
  599  00001668          	.proc _sem_signal
  600  00001668          	.global _sem_signal
  601  00001668          	_sem_signal:
  602  00001668  44000452	trap	#0x452
  603  0000166c  4be00000	jr	r31
  604  00001670  54000000	nop
  605  00001674          	.endproc _sem_signal
  607  00001674          	.proc _lock_create
  608  00001674          	.global _lock_create
  609  00001674          	_lock_create:
  610  00001674  44000453	trap	#0x453
  611  00001678  4be00000	jr	r31
  612  0000167c  54000000	nop
  613  00001680          	.endproc _lock_create
  615  00001680          	.proc _lock_acquire
  616  00001680          	.global _lock_acquire
  617  00001680          	_lock_acquire:
  618  00001680  44000454	trap	#0x454
  619  00001684  4be00000	jr	r31
  620  00001688  54000000	nop
  621  0000168c          	.endproc _lock_acquire
  623  0000168c          	.proc _lock_release
  624  0000168c          	.global _lock_release
  625  0000168c          	_lock_release:
  626  0000168c  44000455	trap	#0x455
  627  00001690  4be00000	jr	r31
  628  00001694  54000000	nop
  629  00001698          	.endproc _lock_release
  631  00001698          	.proc _cond_create
  632  00001698          	.global _cond_create
  633  00001698          	_cond_create:
  634  00001698  44000456	trap	#0x456
  635  0000169c  4be00000	jr	r31
  636  000016a0  54000000	nop
  637  000016a4          	.endproc _cond_create
  639  000016a4          	.proc _cond_wait
  640  000016a4          	.global _cond_wait
  641  000016a4          	_cond_wait:
  642  000016a4  44000457	trap	#0x457
  643  000016a8  4be00000	jr	r31
  644  000016ac  54000000	nop
  645  000016b0          	.endproc _cond_wait
  647  000016b0          	.proc _cond_signal
  648  000016b0          	.global _cond_signal
  649  000016b0          	_cond_signal:
  650  000016b0  44000458	trap	#0x458
  651  000016b4  4be00000	jr	r31
  652  000016b8  54000000	nop
  653  000016bc          	.endproc _cond_signal
  655  000016bc          	.proc _cond_broadcast
  656  000016bc          	.global _cond_broadcast
  657  000016bc          	_cond_broadcast:
  658  000016bc  44000459	trap	#0x459
  659  000016c0  4be00000	jr	r31
  660  000016c4  54000000	nop
  661  000016c8          	.endproc _cond_broadcast
  663  000016c8          	.proc _mbox_create
  664  000016c8          	.global _mbox_create
  665  000016c8          	_mbox_create:
  666  000016c8  44000460	trap	#0x460
  667  000016cc  4be00000	jr	r31
  668  000016d0  54000000	nop
  669  000016d4          	.endproc _mbox_create
  671  000016d4          	.proc _mbox_open
  672  000016d4          	.global _mbox_open
  673  000016d4          	_mbox_open:
  674  000016d4  44000461	trap	#0x461
  675  000016d8  4be00000	jr	r31
  676  000016dc  54000000	nop
  677  000016e0          	.endproc _mbox_open
  679  000016e0          	.proc _mbox_close
  680  000016e0          	.global _mbox_close
  681  000016e0          	_mbox_close:
  682  000016e0  44000462	trap	#0x462
  683  000016e4  4be00000	jr	r31
  684  000016e8  54000000	nop
  685  000016ec          	.endproc _mbox_close
  687  000016ec          	.proc _mbox_send
  688  000016ec          	.global _mbox_send
  689  000016ec          	_mbox_send:
  690  000016ec  44000463	trap	#0x463
  691  000016f0  4be00000	jr	r31
  692  000016f4  54000000	nop
  693  000016f8          	.endproc _mbox_send
  695  000016f8          	.proc _mbox_recv
  696  000016f8          	.global _mbox_recv
  697  000016f8          	_mbox_recv:
  698  000016f8  44000464	trap	#0x464
  699  000016fc  4be00000	jr	r31
  700  00001700  54000000	nop
  701  00001704          	.endproc _mbox_recv
  703  00001704          	.proc _sleep
  704  00001704          	.global _sleep
  705  00001704          	_sleep:
  706  00001704  44000465	trap	#0x465
  707  00001708  4be00000	jr	r31
  708  0000170c  54000000	nop
  709  00001710          	.endproc _sleep
  711  00001710          	.proc _yield
  712  00001710          	.global _yield
  713  00001710          	_yield:
  714  00001710  44000466	trap	#0x466
  715  00001714  4be00000	jr	r31
  716  00001718  54000000	nop
  717  0000171c          	.endproc _yield
  719  0000171c          	.proc _disk_write_block
  720  0000171c          	.global _disk_write_block
  721  0000171c          	_disk_write_block:
  722  0000171c  44000467	trap	#0x467
  723  00001720  4be00000	jr	r31
  724  00001724  54000000	nop
  725  00001728          	.endproc _disk_write_block
  727  00001728          	.proc _disk_size
  728  00001728          	.global _disk_size
  729  00001728          	_disk_size:
  730  00001728  44000468	trap	#0x468
  731  0000172c  4be00000	jr	r31
  732  00001730  54000000	nop
  733  00001734          	.endproc _disk_size
  735  00001734          	.proc _disk_blocksize
  736  00001734          	.global _disk_blocksize
  737  00001734          	_disk_blocksize:
  738  00001734  44000469	trap	#0x469
  739  00001738  4be00000	jr	r31
  740  0000173c  54000000	nop
  741  00001740          	.endproc _disk_blocksize
  743  00001740          	.proc _disk_create
  744  00001740          	.global _disk_create
  745  00001740          	_disk_create:
  746  00001740  44000470	trap	#0x470
  747  00001744  4be00000	jr	r31
  748  00001748  54000000	nop
  749  0000174c          	.endproc _disk_create
  751  0000174c          	.proc _dfs_invalidate
  752  0000174c          	.global _dfs_invalidate
  753  0000174c          	_dfs_invalidate:
  754  0000174c  44000471	trap	#0x471
  755  00001750  4be00000	jr	r31
  756  00001754  54000000	nop
  757  00001758          	.endproc _dfs_invalidate
  759  00001758          	.proc _file_open
  760  00001758          	.global _file_open
  761  00001758          	_file_open:
  762  00001758  44000472	trap	#0x472
  763  0000175c  4be00000	jr	r31
  764  00001760  54000000	nop
  765  00001764          	.endproc _file_open
  767  00001764          	.proc _file_close
  768  00001764          	.global _file_close
  769  00001764          	_file_close:
  770  00001764  44000473	trap	#0x473
  771  00001768  4be00000	jr	r31
  772  0000176c  54000000	nop
  773  00001770          	.endproc _file_close
  775  00001770          	.proc _file_delete
  776  00001770          	.global _file_delete
  777  00001770          	_file_delete:
  778  00001770  44000474	trap	#0x474
  779  00001774  4be00000	jr	r31
  780  00001778  54000000	nop
  781  0000177c          	.endproc _file_delete
  783  0000177c          	.proc _file_read
  784  0000177c          	.global _file_read
  785  0000177c          	_file_read:
  786  0000177c  44000475	trap	#0x475
  787  00001780  4be00000	jr	r31
  788  00001784  54000000	nop
  789  00001788          	.endproc _file_read
  791  00001788          	.proc _file_write
  792  00001788          	.global _file_write
  793  00001788          	_file_write:
  794  00001788  44000476	trap	#0x476
  795  0000178c  4be00000	jr	r31
  796  00001790  54000000	nop
  797  00001794          	.endproc _file_write
  799  00001794          	.proc _file_seek
  800  00001794          	.global _file_seek
  801  00001794          	_file_seek:
  802  00001794  44000477	trap	#0x477
  803  00001798  4be00000	jr	r31
  804  0000179c  54000000	nop
  805  000017a0          	.endproc _file_seek
  807  000017a0          	.proc _run_os_tests
  808  000017a0          	.global _run_os_tests
  809  000017a0          	_run_os_tests:
  810  000017a0  440004ff	trap	#0x4FF
  811  000017a4  4be00000	jr	r31
  812  000017a8  54000000	nop
  813  000017ac          	.endproc _run_os_tests
  816  000017ac          	.proc _Exit
  817  000017ac          	.global _Exit
  818  000017ac          	_Exit:
  819  000017ac  44000500	trap	#0x500
  820  000017b0  4be00000	jr	r31
  821  000017b4  54000000	nop
  822  000017b8          	.endproc _Exit
  823                      ; Compiled by GCC
  825  000017b8          	.align 2
  826  000017b8          	.proc _isspace
  827  000017b8          	.global _isspace
  828  000017b8          	_isspace:
  829                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  830  000017b8  afbefffc	sw	-4(r29),r30; push fp
  831  000017bc  001df020	add	r30,r0,r29; fp = sp
  832  000017c0  afbffff8	sw	-8(r29),r31; push ret addr
  833  000017c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  834  000017c8  afa20000	sw	0(r29),r2
  835  000017cc  afa30004	sw	4(r29),r3
  836  000017d0  afa40008	sw	8(r29),r4
  837  000017d4  83c20003	lb	r2,3(r30)
  838  000017d8  20010000	addi	r1,r0,#0
  839  000017dc  304300ff	andi	r3,r2,#0x00ff
  840  000017e0  60640020	seqi	r4,r3,#32
  841  000017e4  1480002c	bnez	r4,L3_LF2
  842  000017e8  54000000	nop; delay slot nop
  843  000017ec  304300ff	andi	r3,r2,#0x00ff
  844  000017f0  60640009	seqi	r4,r3,#9
  845  000017f4  1480001c	bnez	r4,L3_LF2
  846  000017f8  54000000	nop; delay slot nop
  847  000017fc  304300ff	andi	r3,r2,#0x00ff
  848  00001800  6064000a	seqi	r4,r3,#10
  849  00001804  1480000c	bnez	r4,L3_LF2
  850  00001808  54000000	nop; delay slot nop
  851  0000180c  08000008	j	L2_LF2
  852  00001810  54000000	nop; delay slot nop
  853  00001814          	L3_LF2:
  854  00001814  20010001	addi	r1,r0,#1
  855  00001818          	L2_LF2:
  856  00001818  08000004	j	L1_LF2
  857  0000181c  54000000	nop; delay slot nop
  858  00001820          	L1_LF2:
  859  00001820  8fa20000	lw	r2,0(r29)
  860  00001824  8fa30004	lw	r3,4(r29)
  861  00001828  8fa40008	lw	r4,8(r29)
  862  0000182c  8fdffff8	lw	r31,-8(r30)
  863  00001830  001ee820	add	r29,r0,r30
  864  00001834  8fdefffc	lw	r30,-4(r30)
  865  00001838  4be00000	jr	r31
  866  0000183c  54000000	nop
  867  00001840          	.endproc _isspace
  868  00001840          	.align 2
  869  00001840          	.proc _isxdigit
  870  00001840          	.global _isxdigit
  871  00001840          	_isxdigit:
  872                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  873  00001840  afbefffc	sw	-4(r29),r30; push fp
  874  00001844  001df020	add	r30,r0,r29; fp = sp
  875  00001848  afbffff8	sw	-8(r29),r31; push ret addr
  876  0000184c  2fbd0018	subui	r29,r29,#24; alloc local storage
  877  00001850  afa20000	sw	0(r29),r2
  878  00001854  afa30004	sw	4(r29),r3
  879  00001858  afa40008	sw	8(r29),r4
  880  0000185c  83c20003	lb	r2,3(r30)
  881  00001860  20010000	addi	r1,r0,#0
  882  00001864  304300ff	andi	r3,r2,#0x00ff
  883  00001868  6c64002f	sgtui	r4,r3,#47
  884  0000186c  1080001c	beqz	r4,L7_LF2
  885  00001870  54000000	nop; delay slot nop
  886  00001874  304300ff	andi	r3,r2,#0x00ff
  887  00001878  70640039	sleui	r4,r3,#57
  888  0000187c  1480005c	bnez	r4,L6_LF2
  889  00001880  54000000	nop; delay slot nop
  890  00001884  08000004	j	L7_LF2
  891  00001888  54000000	nop; delay slot nop
  892  0000188c          	L7_LF2:
  893  0000188c  304300ff	andi	r3,r2,#0x00ff
  894  00001890  6c640060	sgtui	r4,r3,#96
  895  00001894  1080001c	beqz	r4,L8_LF2
  896  00001898  54000000	nop; delay slot nop
  897  0000189c  304300ff	andi	r3,r2,#0x00ff
  898  000018a0  70640066	sleui	r4,r3,#102
  899  000018a4  14800034	bnez	r4,L6_LF2
  900  000018a8  54000000	nop; delay slot nop
  901  000018ac  08000004	j	L8_LF2
  902  000018b0  54000000	nop; delay slot nop
  903  000018b4          	L8_LF2:
  904  000018b4  304300ff	andi	r3,r2,#0x00ff
  905  000018b8  6c640040	sgtui	r4,r3,#64
  906  000018bc  10800020	beqz	r4,L5_LF2
  907  000018c0  54000000	nop; delay slot nop
  908  000018c4  304300ff	andi	r3,r2,#0x00ff
  909  000018c8  70640041	sleui	r4,r3,#65
  910  000018cc  1480000c	bnez	r4,L6_LF2
  911  000018d0  54000000	nop; delay slot nop
  912  000018d4  08000008	j	L5_LF2
  913  000018d8  54000000	nop; delay slot nop
  914  000018dc          	L6_LF2:
  915  000018dc  20010001	addi	r1,r0,#1
  916  000018e0          	L5_LF2:
  917  000018e0  08000004	j	L4_LF2
  918  000018e4  54000000	nop; delay slot nop
  919  000018e8          	L4_LF2:
  920  000018e8  8fa20000	lw	r2,0(r29)
  921  000018ec  8fa30004	lw	r3,4(r29)
  922  000018f0  8fa40008	lw	r4,8(r29)
  923  000018f4  8fdffff8	lw	r31,-8(r30)
  924  000018f8  001ee820	add	r29,r0,r30
  925  000018fc  8fdefffc	lw	r30,-4(r30)
  926  00001900  4be00000	jr	r31
  927  00001904  54000000	nop
  928  00001908          	.endproc _isxdigit
  929  00001908          	.align 2
  930  00001908          	.proc _dstrcpy
  931  00001908          	.global _dstrcpy
  932  00001908          	_dstrcpy:
  933                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  934  00001908  afbefffc	sw	-4(r29),r30; push fp
  935  0000190c  001df020	add	r30,r0,r29; fp = sp
  936  00001910  afbffff8	sw	-8(r29),r31; push ret addr
  937  00001914  2fbd0018	subui	r29,r29,#24; alloc local storage
  938  00001918  afa20000	sw	0(r29),r2
  939  0000191c  afa30004	sw	4(r29),r3
  940  00001920  8fc10000	lw	r1,(r30)
  941  00001924  afc1fff4	sw	-12(r30),r1
  942  00001928          	L10_LF2:
  943  00001928  8fc10000	lw	r1,(r30)
  944  0000192c  20220001	addi	r2,r1,#1
  945  00001930  afc20000	sw	(r30),r2
  946  00001934  8fc20004	lw	r2,4(r30)
  947  00001938  20430001	addi	r3,r2,#1
  948  0000193c  afc30004	sw	4(r30),r3
  949  00001940  80420000	lb	r2,(r2)
  950  00001944  a0220000	sb	(r1),r2
  951  00001948  a3c2fff3	sb	-13(r30),r2
  952  0000194c          	L12_LF2:
  953  0000194c  93c1fff3	lbu	r1,-13(r30)
  954  00001950  64220000	snei	r2,r1,#0
  955  00001954  1440000c	bnez	r2,L13_LF2
  956  00001958  54000000	nop; delay slot nop
  957  0000195c  0800000c	j	L11_LF2
  958  00001960  54000000	nop; delay slot nop
  959  00001964          	L13_LF2:
  960  00001964  0bffffc0	j	L10_LF2
  961  00001968  54000000	nop; delay slot nop
  962  0000196c          	L11_LF2:
  963  0000196c  8fc1fff4	lw	r1,-12(r30)
  964  00001970  08000004	j	L9_LF2
  965  00001974  54000000	nop; delay slot nop
  966  00001978          	L9_LF2:
  967  00001978  8fa20000	lw	r2,0(r29)
  968  0000197c  8fa30004	lw	r3,4(r29)
  969  00001980  8fdffff8	lw	r31,-8(r30)
  970  00001984  001ee820	add	r29,r0,r30
  971  00001988  8fdefffc	lw	r30,-4(r30)
  972  0000198c  4be00000	jr	r31
  973  00001990  54000000	nop
  974  00001994          	.endproc _dstrcpy
  975  00001994          	.align 2
  976  00001994          	.proc _dstrncpy
  977  00001994          	.global _dstrncpy
  978  00001994          	_dstrncpy:
  979                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  980  00001994  afbefffc	sw	-4(r29),r30; push fp
  981  00001998  001df020	add	r30,r0,r29; fp = sp
  982  0000199c  afbffff8	sw	-8(r29),r31; push ret addr
  983  000019a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  984  000019a4  afa20000	sw	0(r29),r2
  985  000019a8  afa30004	sw	4(r29),r3
  986  000019ac  8fc10000	lw	r1,(r30)
  987  000019b0  afc1fff4	sw	-12(r30),r1
  988  000019b4          	L15_LF2:
  989  000019b4  8fc10008	lw	r1,8(r30)
  990  000019b8  2022ffff	addi	r2,r1,#-1
  991  000019bc  afc20008	sw	8(r30),r2
  992  000019c0  70210000	slei	r1,r1,#0
  993  000019c4  1020000c	beqz	r1,L18_LF2
  994  000019c8  54000000	nop; delay slot nop
  995  000019cc  08000048	j	L16_LF2
  996  000019d0  54000000	nop; delay slot nop
  997  000019d4          	L18_LF2:
  998  000019d4  8fc10000	lw	r1,(r30)
  999  000019d8  20220001	addi	r2,r1,#1
 1000  000019dc  afc20000	sw	(r30),r2
 1001  000019e0  8fc20004	lw	r2,4(r30)
 1002  000019e4  20430001	addi	r3,r2,#1
 1003  000019e8  afc30004	sw	4(r30),r3
 1004  000019ec  80420000	lb	r2,(r2)
 1005  000019f0  a0220000	sb	(r1),r2
 1006  000019f4  a3c2fff3	sb	-13(r30),r2
 1007  000019f8          	L17_LF2:
 1008  000019f8  93c1fff3	lbu	r1,-13(r30)
 1009  000019fc  64220000	snei	r2,r1,#0
 1010  00001a00  1440000c	bnez	r2,L19_LF2
 1011  00001a04  54000000	nop; delay slot nop
 1012  00001a08  0800000c	j	L16_LF2
 1013  00001a0c  54000000	nop; delay slot nop
 1014  00001a10          	L19_LF2:
 1015  00001a10  0bffffa0	j	L15_LF2
 1016  00001a14  54000000	nop; delay slot nop
 1017  00001a18          	L16_LF2:
 1018  00001a18  8fc1fff4	lw	r1,-12(r30)
 1019  00001a1c  08000004	j	L14_LF2
 1020  00001a20  54000000	nop; delay slot nop
 1021  00001a24          	L14_LF2:
 1022  00001a24  8fa20000	lw	r2,0(r29)
 1023  00001a28  8fa30004	lw	r3,4(r29)
 1024  00001a2c  8fdffff8	lw	r31,-8(r30)
 1025  00001a30  001ee820	add	r29,r0,r30
 1026  00001a34  8fdefffc	lw	r30,-4(r30)
 1027  00001a38  4be00000	jr	r31
 1028  00001a3c  54000000	nop
 1029  00001a40          	.endproc _dstrncpy
 1030  00001a40          	.align 2
 1031  00001a40          	.proc _dstrcat
 1032  00001a40          	.global _dstrcat
 1033  00001a40          	_dstrcat:
 1034                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1035  00001a40  afbefffc	sw	-4(r29),r30; push fp
 1036  00001a44  001df020	add	r30,r0,r29; fp = sp
 1037  00001a48  afbffff8	sw	-8(r29),r31; push ret addr
 1038  00001a4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1039  00001a50  afa20000	sw	0(r29),r2
 1040  00001a54  8fc10000	lw	r1,(r30)
 1041  00001a58  afc1fff4	sw	-12(r30),r1
 1042  00001a5c          	L21_LF2:
 1043  00001a5c  8fc10000	lw	r1,(r30)
 1044  00001a60  90220000	lbu	r2,(r1)
 1045  00001a64  64410000	snei	r1,r2,#0
 1046  00001a68  1420000c	bnez	r1,L23_LF2
 1047  00001a6c  54000000	nop; delay slot nop
 1048  00001a70  0800001c	j	L22_LF2
 1049  00001a74  54000000	nop; delay slot nop
 1050  00001a78          	L23_LF2:
 1051  00001a78  8fc20000	lw	r2,(r30)
 1052  00001a7c  20410001	addi	r1,r2,#1
 1053  00001a80  00011020	add	r2,r0,r1
 1054  00001a84  afc20000	sw	(r30),r2
 1055  00001a88  0bffffd0	j	L21_LF2
 1056  00001a8c  54000000	nop; delay slot nop
 1057  00001a90          	L22_LF2:
 1058  00001a90  23bdfff8	addi	r29,r29,#-8
 1059  00001a94  001d0820	add	r1,r0,r29
 1060  00001a98  8fc20000	lw	r2,(r30)
 1061  00001a9c  ac220000	sw	(r1),r2
 1062  00001aa0  8fc20004	lw	r2,4(r30)
 1063  00001aa4  ac220004	sw	4(r1),r2
 1064  00001aa8  0ffffe5c	jal	_dstrcpy
 1065  00001aac  54000000	nop; delay slot nop
 1066  00001ab0  23bd0008	addi	r29,r29,#8
 1067  00001ab4  8fc1fff4	lw	r1,-12(r30)
 1068  00001ab8  08000004	j	L20_LF2
 1069  00001abc  54000000	nop; delay slot nop
 1070  00001ac0          	L20_LF2:
 1071  00001ac0  8fa20000	lw	r2,0(r29)
 1072  00001ac4  8fdffff8	lw	r31,-8(r30)
 1073  00001ac8  001ee820	add	r29,r0,r30
 1074  00001acc  8fdefffc	lw	r30,-4(r30)
 1075  00001ad0  4be00000	jr	r31
 1076  00001ad4  54000000	nop
 1077  00001ad8          	.endproc _dstrcat
 1078  00001ad8          	.align 2
 1079  00001ad8          	.proc _dstrncmp
 1080  00001ad8          	.global _dstrncmp
 1081  00001ad8          	_dstrncmp:
 1082                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1083  00001ad8  afbefffc	sw	-4(r29),r30; push fp
 1084  00001adc  001df020	add	r30,r0,r29; fp = sp
 1085  00001ae0  afbffff8	sw	-8(r29),r31; push ret addr
 1086  00001ae4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1087  00001ae8  afa20000	sw	0(r29),r2
 1088  00001aec  afa30004	sw	4(r29),r3
 1089  00001af0  54000000	nop
 1090  00001af4  20010000	addi	r1,r0,#0
 1091  00001af8  afc1fff4	sw	-12(r30),r1
 1092  00001afc          	L25_LF2:
 1093  00001afc  8fc1fff4	lw	r1,-12(r30)
 1094  00001b00  8fc20008	lw	r2,8(r30)
 1095  00001b04  0022082a	slt	r1,r1,r2
 1096  00001b08  1420000c	bnez	r1,L28_LF2
 1097  00001b0c  54000000	nop; delay slot nop
 1098  00001b10  08000088	j	L26_LF2
 1099  00001b14  54000000	nop; delay slot nop
 1100  00001b18          	L28_LF2:
 1101  00001b18  8fc10004	lw	r1,4(r30)
 1102  00001b1c  90220000	lbu	r2,(r1)
 1103  00001b20  64410000	snei	r1,r2,#0
 1104  00001b24  14200018	bnez	r1,L29_LF2
 1105  00001b28  54000000	nop; delay slot nop
 1106  00001b2c  20010000	addi	r1,r0,#0
 1107  00001b30  080000d8	j	L24_LF2
 1108  00001b34  54000000	nop; delay slot nop
 1109  00001b38  08000028	j	L30_LF2
 1110  00001b3c  54000000	nop; delay slot nop
 1111  00001b40          	L29_LF2:
 1112  00001b40  8fc10000	lw	r1,(r30)
 1113  00001b44  8fc20004	lw	r2,4(r30)
 1114  00001b48  90210000	lbu	r1,(r1)
 1115  00001b4c  90420000	lbu	r2,(r2)
 1116  00001b50  00220829	sne	r1,r1,r2
 1117  00001b54  1020000c	beqz	r1,L30_LF2
 1118  00001b58  54000000	nop; delay slot nop
 1119  00001b5c  0800003c	j	L26_LF2
 1120  00001b60  54000000	nop; delay slot nop
 1121  00001b64          	L31_LF2:
 1122  00001b64          	L30_LF2:
 1123  00001b64  8fc20000	lw	r2,(r30)
 1124  00001b68  20410001	addi	r1,r2,#1
 1125  00001b6c  00011020	add	r2,r0,r1
 1126  00001b70  afc20000	sw	(r30),r2
 1127  00001b74  8fc20004	lw	r2,4(r30)
 1128  00001b78  20410001	addi	r1,r2,#1
 1129  00001b7c  00011020	add	r2,r0,r1
 1130  00001b80  afc20004	sw	4(r30),r2
 1131  00001b84          	L27_LF2:
 1132  00001b84  8fc2fff4	lw	r2,-12(r30)
 1133  00001b88  20410001	addi	r1,r2,#1
 1134  00001b8c  00011020	add	r2,r0,r1
 1135  00001b90  afc2fff4	sw	-12(r30),r2
 1136  00001b94  0bffff64	j	L25_LF2
 1137  00001b98  54000000	nop; delay slot nop
 1138  00001b9c          	L26_LF2:
 1139  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1140  00001ba0  8fc20008	lw	r2,8(r30)
 1141  00001ba4  00220828	seq	r1,r1,r2
 1142  00001ba8  10200018	beqz	r1,L32_LF2
 1143  00001bac  54000000	nop; delay slot nop
 1144  00001bb0  20010000	addi	r1,r0,#0
 1145  00001bb4  08000054	j	L24_LF2
 1146  00001bb8  54000000	nop; delay slot nop
 1147  00001bbc  0800004c	j	L33_LF2
 1148  00001bc0  54000000	nop; delay slot nop
 1149  00001bc4          	L32_LF2:
 1150  00001bc4  8fc20000	lw	r2,(r30)
 1151  00001bc8  90410000	lbu	r1,(r2)
 1152  00001bcc  8fc20004	lw	r2,4(r30)
 1153  00001bd0  90430000	lbu	r3,(r2)
 1154  00001bd4  00230822	sub	r1,r1,r3
 1155  00001bd8  74220000	sgei	r2,r1,#0
 1156  00001bdc  10400020	beqz	r2,L34_LF2
 1157  00001be0  54000000	nop; delay slot nop
 1158  00001be4  8fc10000	lw	r1,(r30)
 1159  00001be8  8fc20004	lw	r2,4(r30)
 1160  00001bec  90210000	lbu	r1,(r1)
 1161  00001bf0  90420000	lbu	r2,(r2)
 1162  00001bf4  00220829	sne	r1,r1,r2
 1163  00001bf8  08000008	j	L35_LF2
 1164  00001bfc  54000000	nop; delay slot nop
 1165  00001c00          	L34_LF2:
 1166  00001c00  2001ffff	addi	r1,r0,#-1
 1167  00001c04          	L35_LF2:
 1168  00001c04  08000004	j	L24_LF2
 1169  00001c08  54000000	nop; delay slot nop
 1170  00001c0c          	L33_LF2:
 1171  00001c0c          	L24_LF2:
 1172  00001c0c  8fa20000	lw	r2,0(r29)
 1173  00001c10  8fa30004	lw	r3,4(r29)
 1174  00001c14  8fdffff8	lw	r31,-8(r30)
 1175  00001c18  001ee820	add	r29,r0,r30
 1176  00001c1c  8fdefffc	lw	r30,-4(r30)
 1177  00001c20  4be00000	jr	r31
 1178  00001c24  54000000	nop
 1179  00001c28          	.endproc _dstrncmp
 1180  00001c28          	.align 2
 1181  00001c28          	.proc _dstrlen
 1182  00001c28          	.global _dstrlen
 1183  00001c28          	_dstrlen:
 1184                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1185  00001c28  afbefffc	sw	-4(r29),r30; push fp
 1186  00001c2c  001df020	add	r30,r0,r29; fp = sp
 1187  00001c30  afbffff8	sw	-8(r29),r31; push ret addr
 1188  00001c34  2fbd0018	subui	r29,r29,#24; alloc local storage
 1189  00001c38  afa20000	sw	0(r29),r2
 1190  00001c3c  20010000	addi	r1,r0,#0
 1191  00001c40  afc1fff4	sw	-12(r30),r1
 1192  00001c44          	L37_LF2:
 1193  00001c44  8fc10000	lw	r1,(r30)
 1194  00001c48  20220001	addi	r2,r1,#1
 1195  00001c4c  afc20000	sw	(r30),r2
 1196  00001c50  90210000	lbu	r1,(r1)
 1197  00001c54  64220000	snei	r2,r1,#0
 1198  00001c58  1440000c	bnez	r2,L39_LF2
 1199  00001c5c  54000000	nop; delay slot nop
 1200  00001c60  0800001c	j	L38_LF2
 1201  00001c64  54000000	nop; delay slot nop
 1202  00001c68          	L39_LF2:
 1203  00001c68  8fc2fff4	lw	r2,-12(r30)
 1204  00001c6c  20410001	addi	r1,r2,#1
 1205  00001c70  00011020	add	r2,r0,r1
 1206  00001c74  afc2fff4	sw	-12(r30),r2
 1207  00001c78  0bffffc8	j	L37_LF2
 1208  00001c7c  54000000	nop; delay slot nop
 1209  00001c80          	L38_LF2:
 1210  00001c80  8fc1fff4	lw	r1,-12(r30)
 1211  00001c84  08000004	j	L36_LF2
 1212  00001c88  54000000	nop; delay slot nop
 1213  00001c8c          	L36_LF2:
 1214  00001c8c  8fa20000	lw	r2,0(r29)
 1215  00001c90  8fdffff8	lw	r31,-8(r30)
 1216  00001c94  001ee820	add	r29,r0,r30
 1217  00001c98  8fdefffc	lw	r30,-4(r30)
 1218  00001c9c  4be00000	jr	r31
 1219  00001ca0  54000000	nop
 1220  00001ca4          	.endproc _dstrlen
 1221  00001ca4          	.align 2
 1222  00001ca4          	.proc _dstrstr
 1223  00001ca4          	.global _dstrstr
 1224  00001ca4          	_dstrstr:
 1225                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1226  00001ca4  afbefffc	sw	-4(r29),r30; push fp
 1227  00001ca8  001df020	add	r30,r0,r29; fp = sp
 1228  00001cac  afbffff8	sw	-8(r29),r31; push ret addr
 1229  00001cb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1230  00001cb4  afa20000	sw	0(r29),r2
 1231  00001cb8  23bdfff8	addi	r29,r29,#-8
 1232  00001cbc  001d0820	add	r1,r0,r29
 1233  00001cc0  8fc20004	lw	r2,4(r30)
 1234  00001cc4  ac220000	sw	(r1),r2
 1235  00001cc8  0fffff5c	jal	_dstrlen
 1236  00001ccc  54000000	nop; delay slot nop
 1237  00001cd0  23bd0008	addi	r29,r29,#8
 1238  00001cd4  afc1fff4	sw	-12(r30),r1
 1239  00001cd8          	L41_LF2:
 1240  00001cd8  8fc10000	lw	r1,(r30)
 1241  00001cdc  90220000	lbu	r2,(r1)
 1242  00001ce0  64410000	snei	r1,r2,#0
 1243  00001ce4  1420000c	bnez	r1,L43_LF2
 1244  00001ce8  54000000	nop; delay slot nop
 1245  00001cec  08000060	j	L42_LF2
 1246  00001cf0  54000000	nop; delay slot nop
 1247  00001cf4          	L43_LF2:
 1248  00001cf4  23bdfff0	addi	r29,r29,#-16
 1249  00001cf8  001d0820	add	r1,r0,r29
 1250  00001cfc  8fc20000	lw	r2,(r30)
 1251  00001d00  ac220000	sw	(r1),r2
 1252  00001d04  8fc20004	lw	r2,4(r30)
 1253  00001d08  ac220004	sw	4(r1),r2
 1254  00001d0c  8fc2fff4	lw	r2,-12(r30)
 1255  00001d10  ac220008	sw	8(r1),r2
 1256  00001d14  0ffffdc0	jal	_dstrncmp
 1257  00001d18  54000000	nop; delay slot nop
 1258  00001d1c  23bd0010	addi	r29,r29,#16
 1259  00001d20  64220000	snei	r2,r1,#0
 1260  00001d24  14400010	bnez	r2,L44_LF2
 1261  00001d28  54000000	nop; delay slot nop
 1262  00001d2c  8fc10000	lw	r1,(r30)
 1263  00001d30  08000028	j	L40_LF2
 1264  00001d34  54000000	nop; delay slot nop
 1265  00001d38          	L44_LF2:
 1266  00001d38  8fc20000	lw	r2,(r30)
 1267  00001d3c  20410001	addi	r1,r2,#1
 1268  00001d40  00011020	add	r2,r0,r1
 1269  00001d44  afc20000	sw	(r30),r2
 1270  00001d48  0bffff8c	j	L41_LF2
 1271  00001d4c  54000000	nop; delay slot nop
 1272  00001d50          	L42_LF2:
 1273  00001d50  20010000	addi	r1,r0,#0
 1274  00001d54  08000004	j	L40_LF2
 1275  00001d58  54000000	nop; delay slot nop
 1276  00001d5c          	L40_LF2:
 1277  00001d5c  8fa20000	lw	r2,0(r29)
 1278  00001d60  8fdffff8	lw	r31,-8(r30)
 1279  00001d64  001ee820	add	r29,r0,r30
 1280  00001d68  8fdefffc	lw	r30,-4(r30)
 1281  00001d6c  4be00000	jr	r31
 1282  00001d70  54000000	nop
 1283  00001d74          	.endproc _dstrstr
 1284  00001d74          	.align 2
 1285  00001d74          	.proc _dmindex
 1286  00001d74          	.global _dmindex
 1287  00001d74          	_dmindex:
 1288                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1289  00001d74  afbefffc	sw	-4(r29),r30; push fp
 1290  00001d78  001df020	add	r30,r0,r29; fp = sp
 1291  00001d7c  afbffff8	sw	-8(r29),r31; push ret addr
 1292  00001d80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1293  00001d84  afa20000	sw	0(r29),r2
 1294  00001d88  54000000	nop
 1295  00001d8c          	L46_LF2:
 1296  00001d8c  8fc10000	lw	r1,(r30)
 1297  00001d90  90220000	lbu	r2,(r1)
 1298  00001d94  64410000	snei	r1,r2,#0
 1299  00001d98  1420000c	bnez	r1,L48_LF2
 1300  00001d9c  54000000	nop; delay slot nop
 1301  00001da0  08000070	j	L47_LF2
 1302  00001da4  54000000	nop; delay slot nop
 1303  00001da8          	L48_LF2:
 1304  00001da8  8fc10004	lw	r1,4(r30)
 1305  00001dac  afc1fff4	sw	-12(r30),r1
 1306  00001db0          	L49_LF2:
 1307  00001db0  8fc1fff4	lw	r1,-12(r30)
 1308  00001db4  90220000	lbu	r2,(r1)
 1309  00001db8  64410000	snei	r1,r2,#0
 1310  00001dbc  1420000c	bnez	r1,L52_LF2
 1311  00001dc0  54000000	nop; delay slot nop
 1312  00001dc4  08000044	j	L50_LF2
 1313  00001dc8  54000000	nop; delay slot nop
 1314  00001dcc          	L52_LF2:
 1315  00001dcc  8fc10000	lw	r1,(r30)
 1316  00001dd0  8fc2fff4	lw	r2,-12(r30)
 1317  00001dd4  90210000	lbu	r1,(r1)
 1318  00001dd8  90420000	lbu	r2,(r2)
 1319  00001ddc  00220828	seq	r1,r1,r2
 1320  00001de0  10200010	beqz	r1,L51_LF2
 1321  00001de4  54000000	nop; delay slot nop
 1322  00001de8  8fc10000	lw	r1,(r30)
 1323  00001dec  08000030	j	L45_LF2
 1324  00001df0  54000000	nop; delay slot nop
 1325  00001df4          	L53_LF2:
 1326  00001df4          	L51_LF2:
 1327  00001df4  8fc2fff4	lw	r2,-12(r30)
 1328  00001df8  20410001	addi	r1,r2,#1
 1329  00001dfc  00011020	add	r2,r0,r1
 1330  00001e00  afc2fff4	sw	-12(r30),r2
 1331  00001e04  0bffffa8	j	L49_LF2
 1332  00001e08  54000000	nop; delay slot nop
 1333  00001e0c          	L50_LF2:
 1334  00001e0c  0bffff7c	j	L46_LF2
 1335  00001e10  54000000	nop; delay slot nop
 1336  00001e14          	L47_LF2:
 1337  00001e14  20010000	addi	r1,r0,#0
 1338  00001e18  08000004	j	L45_LF2
 1339  00001e1c  54000000	nop; delay slot nop
 1340  00001e20          	L45_LF2:
 1341  00001e20  8fa20000	lw	r2,0(r29)
 1342  00001e24  8fdffff8	lw	r31,-8(r30)
 1343  00001e28  001ee820	add	r29,r0,r30
 1344  00001e2c  8fdefffc	lw	r30,-4(r30)
 1345  00001e30  4be00000	jr	r31
 1346  00001e34  54000000	nop
 1347  00001e38          	.endproc _dmindex
 1348  00001e38          	.align 2
 1349  00001e38          	.proc _dindex
 1350  00001e38          	.global _dindex
 1351  00001e38          	_dindex:
 1352                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1353  00001e38  afbefffc	sw	-4(r29),r30; push fp
 1354  00001e3c  001df020	add	r30,r0,r29; fp = sp
 1355  00001e40  afbffff8	sw	-8(r29),r31; push ret addr
 1356  00001e44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1357  00001e48  afa20000	sw	0(r29),r2
 1358  00001e4c  54000000	nop
 1359  00001e50          	L55_LF2:
 1360  00001e50  8fc10000	lw	r1,(r30)
 1361  00001e54  90220000	lbu	r2,(r1)
 1362  00001e58  64410000	snei	r1,r2,#0
 1363  00001e5c  1420000c	bnez	r1,L57_LF2
 1364  00001e60  54000000	nop; delay slot nop
 1365  00001e64  08000040	j	L56_LF2
 1366  00001e68  54000000	nop; delay slot nop
 1367  00001e6c          	L57_LF2:
 1368  00001e6c  8fc10000	lw	r1,(r30)
 1369  00001e70  90220000	lbu	r2,(r1)
 1370  00001e74  8fc10004	lw	r1,4(r30)
 1371  00001e78  00411028	seq	r2,r2,r1
 1372  00001e7c  10400010	beqz	r2,L58_LF2
 1373  00001e80  54000000	nop; delay slot nop
 1374  00001e84  8fc10000	lw	r1,(r30)
 1375  00001e88  08000028	j	L54_LF2
 1376  00001e8c  54000000	nop; delay slot nop
 1377  00001e90          	L58_LF2:
 1378  00001e90  8fc20000	lw	r2,(r30)
 1379  00001e94  20410001	addi	r1,r2,#1
 1380  00001e98  00011020	add	r2,r0,r1
 1381  00001e9c  afc20000	sw	(r30),r2
 1382  00001ea0  0bffffac	j	L55_LF2
 1383  00001ea4  54000000	nop; delay slot nop
 1384  00001ea8          	L56_LF2:
 1385  00001ea8  20010000	addi	r1,r0,#0
 1386  00001eac  08000004	j	L54_LF2
 1387  00001eb0  54000000	nop; delay slot nop
 1388  00001eb4          	L54_LF2:
 1389  00001eb4  8fa20000	lw	r2,0(r29)
 1390  00001eb8  8fdffff8	lw	r31,-8(r30)
 1391  00001ebc  001ee820	add	r29,r0,r30
 1392  00001ec0  8fdefffc	lw	r30,-4(r30)
 1393  00001ec4  4be00000	jr	r31
 1394  00001ec8  54000000	nop
 1395  00001ecc          	.endproc _dindex
 1396  00001ecc          	.align 2
 1397  00001ecc          	.proc _ditoa
 1398  00001ecc          	.global _ditoa
 1399  00001ecc          	_ditoa:
 1400                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1401  00001ecc  afbefffc	sw	-4(r29),r30; push fp
 1402  00001ed0  001df020	add	r30,r0,r29; fp = sp
 1403  00001ed4  afbffff8	sw	-8(r29),r31; push ret addr
 1404  00001ed8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1405  00001edc  afa20000	sw	0(r29),r2
 1406  00001ee0  afa30004	sw	4(r29),r3
 1407  00001ee4  8fc10000	lw	r1,(r30)
 1408  00001ee8  68220000	slti	r2,r1,#0
 1409  00001eec  1040002c	beqz	r2,L60_LF2
 1410  00001ef0  54000000	nop; delay slot nop
 1411  00001ef4  8fc10004	lw	r1,4(r30)
 1412  00001ef8  20220001	addi	r2,r1,#1
 1413  00001efc  afc20004	sw	4(r30),r2
 1414  00001f00  2002002d	addi	r2,r0,(#0x2d)&0xff
 1415  00001f04  a0220000	sb	(r1),r2
 1416  00001f08  8fc10000	lw	r1,(r30)
 1417  00001f0c  00011022	sub	r2,r0,r1
 1418  00001f10  afc20000	sw	(r30),r2
 1419  00001f14  08000118	j	L61_LF2
 1420  00001f18  54000000	nop; delay slot nop
 1421  00001f1c          	L60_LF2:
 1422  00001f1c  8fc10000	lw	r1,(r30)
 1423  00001f20  64220000	snei	r2,r1,#0
 1424  00001f24  14400020	bnez	r2,L62_LF2
 1425  00001f28  54000000	nop; delay slot nop
 1426  00001f2c  8fc10004	lw	r1,4(r30)
 1427  00001f30  20220001	addi	r2,r1,#1
 1428  00001f34  afc20004	sw	4(r30),r2
 1429  00001f38  20020030	addi	r2,r0,(#0x30)&0xff
 1430  00001f3c  a0220000	sb	(r1),r2
 1431  00001f40  080000ec	j	L61_LF2
 1432  00001f44  54000000	nop; delay slot nop
 1433  00001f48          	L62_LF2:
 1434  00001f48  20010001	addi	r1,r0,#1
 1435  00001f4c  afc1fff4	sw	-12(r30),r1
 1436  00001f50          	L64_LF2:
 1437  00001f50  8fc1fff4	lw	r1,-12(r30)
 1438  00001f54  8fc20000	lw	r2,(r30)
 1439  00001f58  0022082c	sle	r1,r1,r2
 1440  00001f5c  1420000c	bnez	r1,L66_LF2
 1441  00001f60  54000000	nop; delay slot nop
 1442  00001f64  08000024	j	L65_LF2
 1443  00001f68  54000000	nop; delay slot nop
 1444  00001f6c          	L67_LF2:
 1445  00001f6c          	L66_LF2:
 1446  00001f6c  8fc1fff4	lw	r1,-12(r30)
 1447  00001f70  00011820	add	r3,r0,r1
 1448  00001f74  50620002	slli	r2,r3,#0x2
 1449  00001f78  00411020	add	r2,r2,r1
 1450  00001f7c  50410001	slli	r1,r2,#0x1
 1451  00001f80  afc1fff4	sw	-12(r30),r1
 1452  00001f84  0bffffc8	j	L64_LF2
 1453  00001f88  54000000	nop; delay slot nop
 1454  00001f8c          	L65_LF2:
 1455  00001f8c  54000000	nop
 1456  00001f90          	L68_LF2:
 1457  00001f90  8fc1fff4	lw	r1,-12(r30)
 1458  00001f94  2002000a	addi	r2,r0,#10
 1459  00001f98  00200035	movi2fp	f0,r1
 1460  00001f9c  00400835	movi2fp	f1,r2
 1461  00001fa0  0401000f	div	f0,f0,f1
 1462  00001fa4  00000834	movfp2i	r1,f0
 1463  00001fa8  afc1fff4	sw	-12(r30),r1
 1464  00001fac  8fc10004	lw	r1,4(r30)
 1465  00001fb0  20220001	addi	r2,r1,#1
 1466  00001fb4  afc20004	sw	4(r30),r2
 1467  00001fb8  8fc20000	lw	r2,(r30)
 1468  00001fbc  8fc3fff4	lw	r3,-12(r30)
 1469  00001fc0  00400035	movi2fp	f0,r2
 1470  00001fc4  00600835	movi2fp	f1,r3
 1471  00001fc8  0401000f	div	f0,f0,f1
 1472  00001fcc  00001034	movfp2i	r2,f0
 1473  00001fd0  00021820	add	r3,r0,r2
 1474  00001fd4  20620030	addi	r2,r3,#48
 1475  00001fd8  a0220000	sb	(r1),r2
 1476  00001fdc  8fc10000	lw	r1,(r30)
 1477  00001fe0  8fc3fff4	lw	r3,-12(r30)
 1478  00001fe4  00200035	movi2fp	f0,r1
 1479  00001fe8  00600835	movi2fp	f1,r3
 1480  00001fec  0401000f	div	f0,f0,f1
 1481  00001ff0  00001034	movfp2i	r2,f0
 1482  00001ff4  8fc3fff4	lw	r3,-12(r30)
 1483  00001ff8  00400035	movi2fp	f0,r2
 1484  00001ffc  00600835	movi2fp	f1,r3
 1485  00002000  0401000e	mult	f0,f0,f1
 1486  00002004  00001034	movfp2i	r2,f0
 1487  00002008  00220822	sub	r1,r1,r2
 1488  0000200c  afc10000	sw	(r30),r1
 1489  00002010          	L70_LF2:
 1490  00002010  8fc1fff4	lw	r1,-12(r30)
 1491  00002014  6c220001	sgti	r2,r1,#1
 1492  00002018  1440000c	bnez	r2,L71_LF2
 1493  0000201c  54000000	nop; delay slot nop
 1494  00002020  0800000c	j	L61_LF2
 1495  00002024  54000000	nop; delay slot nop
 1496  00002028          	L71_LF2:
 1497  00002028  0bffff64	j	L68_LF2
 1498  0000202c  54000000	nop; delay slot nop
 1499  00002030          	L69_LF2:
 1500  00002030          	L63_LF2:
 1501  00002030          	L61_LF2:
 1502  00002030  8fc10004	lw	r1,4(r30)
 1503  00002034  20020000	addi	r2,r0,(#0x0)&0xff
 1504  00002038  a0220000	sb	(r1),r2
 1505  0000203c          	L59_LF2:
 1506  0000203c  8fa20000	lw	r2,0(r29)
 1507  00002040  8fa30004	lw	r3,4(r29)
 1508  00002044  8fdffff8	lw	r31,-8(r30)
 1509  00002048  001ee820	add	r29,r0,r30
 1510  0000204c  8fdefffc	lw	r30,-4(r30)
 1511  00002050  4be00000	jr	r31
 1512  00002054  54000000	nop
 1513  00002058          	.endproc _ditoa
 1514  00002058          	.align 2
 1515  00002058          	.proc _dstrtol
 1516  00002058          	.global _dstrtol
 1517  00002058          	_dstrtol:
 1518                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1519  00002058  afbefffc	sw	-4(r29),r30; push fp
 1520  0000205c  001df020	add	r30,r0,r29; fp = sp
 1521  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1522  00002064  2fbd0020	subui	r29,r29,#32; alloc local storage
 1523  00002068  afa20000	sw	0(r29),r2
 1524  0000206c  20010000	addi	r1,r0,#0
 1525  00002070  afc1fff4	sw	-12(r30),r1
 1526  00002074          	L73_LF2:
 1527  00002074  8fc10000	lw	r1,(r30)
 1528  00002078  90220000	lbu	r2,(r1)
 1529  0000207c  60410020	seqi	r1,r2,#32
 1530  00002080  14200034	bnez	r1,L75_LF2
 1531  00002084  54000000	nop; delay slot nop
 1532  00002088  8fc10000	lw	r1,(r30)
 1533  0000208c  90220000	lbu	r2,(r1)
 1534  00002090  60410009	seqi	r1,r2,#9
 1535  00002094  14200020	bnez	r1,L75_LF2
 1536  00002098  54000000	nop; delay slot nop
 1537  0000209c  8fc10000	lw	r1,(r30)
 1538  000020a0  90220000	lbu	r2,(r1)
 1539  000020a4  6041000a	seqi	r1,r2,#10
 1540  000020a8  1420000c	bnez	r1,L75_LF2
 1541  000020ac  54000000	nop; delay slot nop
 1542  000020b0  0800001c	j	L74_LF2
 1543  000020b4  54000000	nop; delay slot nop
 1544  000020b8          	L75_LF2:
 1545  000020b8  8fc20000	lw	r2,(r30)
 1546  000020bc  20410001	addi	r1,r2,#1
 1547  000020c0  00011020	add	r2,r0,r1
 1548  000020c4  afc20000	sw	(r30),r2
 1549  000020c8  0bffffa8	j	L73_LF2
 1550  000020cc  54000000	nop; delay slot nop
 1551  000020d0          	L74_LF2:
 1552  000020d0  8fc10004	lw	r1,4(r30)
 1553  000020d4  64220000	snei	r2,r1,#0
 1554  000020d8  10400010	beqz	r2,L76_LF2
 1555  000020dc  54000000	nop; delay slot nop
 1556  000020e0  8fc10004	lw	r1,4(r30)
 1557  000020e4  8fc20000	lw	r2,(r30)
 1558  000020e8  ac220000	sw	(r1),r2
 1559  000020ec          	L76_LF2:
 1560  000020ec  8fc10000	lw	r1,(r30)
 1561  000020f0  90220000	lbu	r2,(r1)
 1562  000020f4  64410000	snei	r1,r2,#0
 1563  000020f8  14200010	bnez	r1,L77_LF2
 1564  000020fc  54000000	nop; delay slot nop
 1565  00002100  8fc1fff4	lw	r1,-12(r30)
 1566  00002104  08000294	j	L72_LF2
 1567  00002108  54000000	nop; delay slot nop
 1568  0000210c          	L77_LF2:
 1569  0000210c  8fc10000	lw	r1,(r30)
 1570  00002110  90220000	lbu	r2,(r1)
 1571  00002114  6041002d	seqi	r1,r2,#45
 1572  00002118  10200024	beqz	r1,L78_LF2
 1573  0000211c  54000000	nop; delay slot nop
 1574  00002120  2001ffff	addi	r1,r0,#-1
 1575  00002124  afc1ffec	sw	-20(r30),r1
 1576  00002128  8fc20000	lw	r2,(r30)
 1577  0000212c  20410001	addi	r1,r2,#1
 1578  00002130  00011020	add	r2,r0,r1
 1579  00002134  afc20000	sw	(r30),r2
 1580  00002138  0800000c	j	L79_LF2
 1581  0000213c  54000000	nop; delay slot nop
 1582  00002140          	L78_LF2:
 1583  00002140  20010001	addi	r1,r0,#1
 1584  00002144  afc1ffec	sw	-20(r30),r1
 1585  00002148          	L79_LF2:
 1586  00002148  8fc10008	lw	r1,8(r30)
 1587  0000214c  64220000	snei	r2,r1,#0
 1588  00002150  14400090	bnez	r2,L80_LF2
 1589  00002154  54000000	nop; delay slot nop
 1590  00002158  8fc10000	lw	r1,(r30)
 1591  0000215c  90220000	lbu	r2,(r1)
 1592  00002160  60410030	seqi	r1,r2,#48
 1593  00002164  10200074	beqz	r1,L81_LF2
 1594  00002168  54000000	nop; delay slot nop
 1595  0000216c  8fc20000	lw	r2,(r30)
 1596  00002170  20410001	addi	r1,r2,#1
 1597  00002174  00011020	add	r2,r0,r1
 1598  00002178  afc20000	sw	(r30),r2
 1599  0000217c  8fc10000	lw	r1,(r30)
 1600  00002180  90220000	lbu	r2,(r1)
 1601  00002184  60410078	seqi	r1,r2,#120
 1602  00002188  14200020	bnez	r1,L83_LF2
 1603  0000218c  54000000	nop; delay slot nop
 1604  00002190  8fc10000	lw	r1,(r30)
 1605  00002194  90220000	lbu	r2,(r1)
 1606  00002198  60410058	seqi	r1,r2,#88
 1607  0000219c  1420000c	bnez	r1,L83_LF2
 1608  000021a0  54000000	nop; delay slot nop
 1609  000021a4  08000024	j	L82_LF2
 1610  000021a8  54000000	nop; delay slot nop
 1611  000021ac          	L83_LF2:
 1612  000021ac  20010010	addi	r1,r0,#16
 1613  000021b0  afc10008	sw	8(r30),r1
 1614  000021b4  8fc20000	lw	r2,(r30)
 1615  000021b8  20410001	addi	r1,r2,#1
 1616  000021bc  00011020	add	r2,r0,r1
 1617  000021c0  afc20000	sw	(r30),r2
 1618  000021c4  0800000c	j	L84_LF2
 1619  000021c8  54000000	nop; delay slot nop
 1620  000021cc          	L82_LF2:
 1621  000021cc  20010008	addi	r1,r0,#8
 1622  000021d0  afc10008	sw	8(r30),r1
 1623  000021d4          	L84_LF2:
 1624  000021d4  0800000c	j	L80_LF2
 1625  000021d8  54000000	nop; delay slot nop
 1626  000021dc          	L81_LF2:
 1627  000021dc  2001000a	addi	r1,r0,#10
 1628  000021e0  afc10008	sw	8(r30),r1
 1629  000021e4          	L85_LF2:
 1630  000021e4          	L80_LF2:
 1631  000021e4  8fc10008	lw	r1,8(r30)
 1632  000021e8  70220000	slei	r2,r1,#0
 1633  000021ec  1440001c	bnez	r2,L87_LF2
 1634  000021f0  54000000	nop; delay slot nop
 1635  000021f4  8fc10008	lw	r1,8(r30)
 1636  000021f8  6c220010	sgti	r2,r1,#16
 1637  000021fc  1440000c	bnez	r2,L87_LF2
 1638  00002200  54000000	nop; delay slot nop
 1639  00002204  08000010	j	L86_LF2
 1640  00002208  54000000	nop; delay slot nop
 1641  0000220c          	L87_LF2:
 1642  0000220c  8fc1fff4	lw	r1,-12(r30)
 1643  00002210  08000188	j	L72_LF2
 1644  00002214  54000000	nop; delay slot nop
 1645  00002218          	L86_LF2:
 1646  00002218  54000000	nop
 1647  0000221c          	L88_LF2:
 1648  0000221c  8fc10000	lw	r1,(r30)
 1649  00002220  90220000	lbu	r2,(r1)
 1650  00002224  6c41002f	sgtui	r1,r2,#47
 1651  00002228  10200030	beqz	r1,L91_LF2
 1652  0000222c  54000000	nop; delay slot nop
 1653  00002230  8fc10000	lw	r1,(r30)
 1654  00002234  90220000	lbu	r2,(r1)
 1655  00002238  70410039	sleui	r1,r2,#57
 1656  0000223c  1020001c	beqz	r1,L91_LF2
 1657  00002240  54000000	nop; delay slot nop
 1658  00002244  8fc10000	lw	r1,(r30)
 1659  00002248  90220000	lbu	r2,(r1)
 1660  0000224c  2041ffd0	addi	r1,r2,#-48
 1661  00002250  afc1fff0	sw	-16(r30),r1
 1662  00002254  0800008c	j	L92_LF2
 1663  00002258  54000000	nop; delay slot nop
 1664  0000225c          	L91_LF2:
 1665  0000225c  8fc10000	lw	r1,(r30)
 1666  00002260  90220000	lbu	r2,(r1)
 1667  00002264  6c410060	sgtui	r1,r2,#96
 1668  00002268  10200030	beqz	r1,L93_LF2
 1669  0000226c  54000000	nop; delay slot nop
 1670  00002270  8fc10000	lw	r1,(r30)
 1671  00002274  90220000	lbu	r2,(r1)
 1672  00002278  7041007a	sleui	r1,r2,#122
 1673  0000227c  1020001c	beqz	r1,L93_LF2
 1674  00002280  54000000	nop; delay slot nop
 1675  00002284  8fc10000	lw	r1,(r30)
 1676  00002288  90220000	lbu	r2,(r1)
 1677  0000228c  2041ffa9	addi	r1,r2,#-87
 1678  00002290  afc1fff0	sw	-16(r30),r1
 1679  00002294  0800004c	j	L92_LF2
 1680  00002298  54000000	nop; delay slot nop
 1681  0000229c          	L93_LF2:
 1682  0000229c  8fc10000	lw	r1,(r30)
 1683  000022a0  90220000	lbu	r2,(r1)
 1684  000022a4  6c410040	sgtui	r1,r2,#64
 1685  000022a8  10200030	beqz	r1,L95_LF2
 1686  000022ac  54000000	nop; delay slot nop
 1687  000022b0  8fc10000	lw	r1,(r30)
 1688  000022b4  90220000	lbu	r2,(r1)
 1689  000022b8  7041005a	sleui	r1,r2,#90
 1690  000022bc  1020001c	beqz	r1,L95_LF2
 1691  000022c0  54000000	nop; delay slot nop
 1692  000022c4  8fc10000	lw	r1,(r30)
 1693  000022c8  90220000	lbu	r2,(r1)
 1694  000022cc  2041ffc9	addi	r1,r2,#-55
 1695  000022d0  afc1fff0	sw	-16(r30),r1
 1696  000022d4  0800000c	j	L92_LF2
 1697  000022d8  54000000	nop; delay slot nop
 1698  000022dc          	L95_LF2:
 1699  000022dc  200103e8	addi	r1,r0,#1000
 1700  000022e0  afc1fff0	sw	-16(r30),r1
 1701  000022e4          	L96_LF2:
 1702  000022e4          	L94_LF2:
 1703  000022e4          	L92_LF2:
 1704  000022e4  8fc1fff0	lw	r1,-16(r30)
 1705  000022e8  8fc20008	lw	r2,8(r30)
 1706  000022ec  0022082a	slt	r1,r1,r2
 1707  000022f0  10200040	beqz	r1,L90_LF2
 1708  000022f4  54000000	nop; delay slot nop
 1709  000022f8  8fc1fff4	lw	r1,-12(r30)
 1710  000022fc  8fc20008	lw	r2,8(r30)
 1711  00002300  00200035	movi2fp	f0,r1
 1712  00002304  00400835	movi2fp	f1,r2
 1713  00002308  0401000e	mult	f0,f0,f1
 1714  0000230c  00000834	movfp2i	r1,f0
 1715  00002310  afc1fff4	sw	-12(r30),r1
 1716  00002314  8fc1fff4	lw	r1,-12(r30)
 1717  00002318  8fc2fff0	lw	r2,-16(r30)
 1718  0000231c  00220820	add	r1,r1,r2
 1719  00002320  afc1fff4	sw	-12(r30),r1
 1720  00002324  8fc20000	lw	r2,(r30)
 1721  00002328  20410001	addi	r1,r2,#1
 1722  0000232c  00011020	add	r2,r0,r1
 1723  00002330  afc20000	sw	(r30),r2
 1724  00002334          	L97_LF2:
 1725  00002334          	L90_LF2:
 1726  00002334  8fc1fff0	lw	r1,-16(r30)
 1727  00002338  8fc20008	lw	r2,8(r30)
 1728  0000233c  0022082a	slt	r1,r1,r2
 1729  00002340  1420000c	bnez	r1,L98_LF2
 1730  00002344  54000000	nop; delay slot nop
 1731  00002348  0800000c	j	L89_LF2
 1732  0000234c  54000000	nop; delay slot nop
 1733  00002350          	L98_LF2:
 1734  00002350  0bfffec8	j	L88_LF2
 1735  00002354  54000000	nop; delay slot nop
 1736  00002358          	L89_LF2:
 1737  00002358  8fc10004	lw	r1,4(r30)
 1738  0000235c  64220000	snei	r2,r1,#0
 1739  00002360  10400010	beqz	r2,L99_LF2
 1740  00002364  54000000	nop; delay slot nop
 1741  00002368  8fc10004	lw	r1,4(r30)
 1742  0000236c  8fc20000	lw	r2,(r30)
 1743  00002370  ac220000	sw	(r1),r2
 1744  00002374          	L99_LF2:
 1745  00002374  8fc1fff4	lw	r1,-12(r30)
 1746  00002378  8fc2ffec	lw	r2,-20(r30)
 1747  0000237c  00200035	movi2fp	f0,r1
 1748  00002380  00400835	movi2fp	f1,r2
 1749  00002384  0401000e	mult	f0,f0,f1
 1750  00002388  00000834	movfp2i	r1,f0
 1751  0000238c  afc1fff4	sw	-12(r30),r1
 1752  00002390  8fc1fff4	lw	r1,-12(r30)
 1753  00002394  08000004	j	L72_LF2
 1754  00002398  54000000	nop; delay slot nop
 1755  0000239c          	L72_LF2:
 1756  0000239c  8fa20000	lw	r2,0(r29)
 1757  000023a0  8fdffff8	lw	r31,-8(r30)
 1758  000023a4  001ee820	add	r29,r0,r30
 1759  000023a8  8fdefffc	lw	r30,-4(r30)
 1760  000023ac  4be00000	jr	r31
 1761  000023b0  54000000	nop
 1762  000023b4          	.endproc _dstrtol
 1763  000023b4          	.align 2
 1764  000023b4          	.proc _bcopy
 1765  000023b4          	.global _bcopy
 1766  000023b4          	_bcopy:
 1767                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1768  000023b4  afbefffc	sw	-4(r29),r30; push fp
 1769  000023b8  001df020	add	r30,r0,r29; fp = sp
 1770  000023bc  afbffff8	sw	-8(r29),r31; push ret addr
 1771  000023c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1772  000023c4  afa20000	sw	0(r29),r2
 1773  000023c8  afa30004	sw	4(r29),r3
 1774  000023cc  54000000	nop
 1775  000023d0          	L101_LF2:
 1776  000023d0  8fc10008	lw	r1,8(r30)
 1777  000023d4  2022ffff	addi	r2,r1,#-1
 1778  000023d8  afc20008	sw	8(r30),r2
 1779  000023dc  6c210000	sgti	r1,r1,#0
 1780  000023e0  1420000c	bnez	r1,L103_LF2
 1781  000023e4  54000000	nop; delay slot nop
 1782  000023e8  0800002c	j	L102_LF2
 1783  000023ec  54000000	nop; delay slot nop
 1784  000023f0          	L103_LF2:
 1785  000023f0  8fc10004	lw	r1,4(r30)
 1786  000023f4  20220001	addi	r2,r1,#1
 1787  000023f8  afc20004	sw	4(r30),r2
 1788  000023fc  8fc20000	lw	r2,(r30)
 1789  00002400  20430001	addi	r3,r2,#1
 1790  00002404  afc30000	sw	(r30),r3
 1791  00002408  80420000	lb	r2,(r2)
 1792  0000240c  a0220000	sb	(r1),r2
 1793  00002410  0bffffbc	j	L101_LF2
 1794  00002414  54000000	nop; delay slot nop
 1795  00002418          	L102_LF2:
 1796  00002418          	L100_LF2:
 1797  00002418  8fa20000	lw	r2,0(r29)
 1798  0000241c  8fa30004	lw	r3,4(r29)
 1799  00002420  8fdffff8	lw	r31,-8(r30)
 1800  00002424  001ee820	add	r29,r0,r30
 1801  00002428  8fdefffc	lw	r30,-4(r30)
 1802  0000242c  4be00000	jr	r31
 1803  00002430  54000000	nop
 1804  00002434          	.endproc _bcopy
 1805  00002434          	.align 2
 1806  00002434          	.proc _bzero
 1807  00002434          	.global _bzero
 1808  00002434          	_bzero:
 1809                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1810  00002434  afbefffc	sw	-4(r29),r30; push fp
 1811  00002438  001df020	add	r30,r0,r29; fp = sp
 1812  0000243c  afbffff8	sw	-8(r29),r31; push ret addr
 1813  00002440  2fbd0010	subui	r29,r29,#16; alloc local storage
 1814  00002444  afa20000	sw	0(r29),r2
 1815  00002448  54000000	nop
 1816  0000244c          	L105_LF2:
 1817  0000244c  8fc10004	lw	r1,4(r30)
 1818  00002450  2022ffff	addi	r2,r1,#-1
 1819  00002454  afc20004	sw	4(r30),r2
 1820  00002458  6c210000	sgti	r1,r1,#0
 1821  0000245c  1420000c	bnez	r1,L107_LF2
 1822  00002460  54000000	nop; delay slot nop
 1823  00002464  08000020	j	L106_LF2
 1824  00002468  54000000	nop; delay slot nop
 1825  0000246c          	L107_LF2:
 1826  0000246c  8fc10000	lw	r1,(r30)
 1827  00002470  20220001	addi	r2,r1,#1
 1828  00002474  afc20000	sw	(r30),r2
 1829  00002478  20020000	addi	r2,r0,(#0x0)&0xff
 1830  0000247c  a0220000	sb	(r1),r2
 1831  00002480  0bffffc8	j	L105_LF2
 1832  00002484  54000000	nop; delay slot nop
 1833  00002488          	L106_LF2:
 1834  00002488          	L104_LF2:
 1835  00002488  8fa20000	lw	r2,0(r29)
 1836  0000248c  8fdffff8	lw	r31,-8(r30)
 1837  00002490  001ee820	add	r29,r0,r30
 1838  00002494  8fdefffc	lw	r30,-4(r30)
 1839  00002498  4be00000	jr	r31
 1840  0000249c  54000000	nop
 1841  000024a0          	.endproc _bzero
 1842  000024a0          	.align 2
 1843  000024a0          	.proc _min
 1844  000024a0          	.global _min
 1845  000024a0          	_min:
 1846                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1847  000024a0  afbefffc	sw	-4(r29),r30; push fp
 1848  000024a4  001df020	add	r30,r0,r29; fp = sp
 1849  000024a8  afbffff8	sw	-8(r29),r31; push ret addr
 1850  000024ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1851  000024b0  afa20000	sw	0(r29),r2
 1852  000024b4  afa30004	sw	4(r29),r3
 1853  000024b8  8fc10000	lw	r1,(r30)
 1854  000024bc  8fc20004	lw	r2,4(r30)
 1855  000024c0  0022182c	sle	r3,r1,r2
 1856  000024c4  14600008	bnez	r3,L109_LF2
 1857  000024c8  54000000	nop; delay slot nop
 1858  000024cc  8fc10004	lw	r1,4(r30)
 1859  000024d0          	L109_LF2:
 1860  000024d0  08000004	j	L108_LF2
 1861  000024d4  54000000	nop; delay slot nop
 1862  000024d8          	L108_LF2:
 1863  000024d8  8fa20000	lw	r2,0(r29)
 1864  000024dc  8fa30004	lw	r3,4(r29)
 1865  000024e0  8fdffff8	lw	r31,-8(r30)
 1866  000024e4  001ee820	add	r29,r0,r30
 1867  000024e8  8fdefffc	lw	r30,-4(r30)
 1868  000024ec  4be00000	jr	r31
 1869  000024f0  54000000	nop
 1870  000024f4          	.endproc _min
 1871  000024f4          	.align 2
 1872  000024f4          	.proc _max
 1873  000024f4          	.global _max
 1874  000024f4          	_max:
 1875                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1876  000024f4  afbefffc	sw	-4(r29),r30; push fp
 1877  000024f8  001df020	add	r30,r0,r29; fp = sp
 1878  000024fc  afbffff8	sw	-8(r29),r31; push ret addr
 1879  00002500  2fbd0010	subui	r29,r29,#16; alloc local storage
 1880  00002504  afa20000	sw	0(r29),r2
 1881  00002508  afa30004	sw	4(r29),r3
 1882  0000250c  8fc10000	lw	r1,(r30)
 1883  00002510  8fc20004	lw	r2,4(r30)
 1884  00002514  0022182d	sge	r3,r1,r2
 1885  00002518  14600008	bnez	r3,L111_LF2
 1886  0000251c  54000000	nop; delay slot nop
 1887  00002520  8fc10004	lw	r1,4(r30)
 1888  00002524          	L111_LF2:
 1889  00002524  08000004	j	L110_LF2
 1890  00002528  54000000	nop; delay slot nop
 1891  0000252c          	L110_LF2:
 1892  0000252c  8fa20000	lw	r2,0(r29)
 1893  00002530  8fa30004	lw	r3,4(r29)
 1894  00002534  8fdffff8	lw	r31,-8(r30)
 1895  00002538  001ee820	add	r29,r0,r30
 1896  0000253c  8fdefffc	lw	r30,-4(r30)
 1897  00002540  4be00000	jr	r31
 1898  00002544  54000000	nop
 1899  00002548          	.endproc _max
 1900                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1901                      ;;;
 1902                      ;;; Most of the traps are called in files from libtraps.
 1905  00002548          	.align 2
 1906  00002548          	.proc _exit
 1907  00002548          	.global _exit
 1908  00002548          	_exit:
 1909  00002548  44000300	trap	#0x300
 1910  0000254c  4be00000	jr	r31
 1911  00002550  54000000	nop
 1912  00002554          	.endproc _exit
 1914                      ; for the benefit of gcc.
 1915  00002554          	.proc ___main
 1916  00002554          	.global ___main
 1917  00002554          	___main:
 1918  00002554  4be00000	jr	r31
 1919  00002558  54000000	nop
 1920  0000255c          	.endproc ___main
 1921  0000255c          	.text
 1922  0000255c          	.global _etext
 1923  0000255c          	_etext:
 1924  0000255c          	.align 3
 1925  00002560          	.data
 1926  00008114          	.global _edata
 1927  00008114          	_edata:
